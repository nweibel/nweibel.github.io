[{ "question": "<p>Parmi ces langages, lequel n'est pas un langage de programmation ?</p>",
    "reponse1": "HTML",
    "reponse2": "JavaScript",
    "reponse3": "PHP",
    "reponse4": "Python",
  "answer": 1},
  { "question": "<p>Quelle est la valeur de la variable b à la fin de l'exécution du script suivant ?</p><div class=\"mycode\"><p>a = 2</p><p>b = 5</p><p>if a > 8:</p><p>    b = 10</p><p>elif a > 6:</p><p>    b = 3</code></pre></p><p>",
    "reponse1": "3",
    "reponse2": "5",
    "reponse3": "6",
    "reponse4": "10",
  "answer": 2},
  { "question": "<p>La fonction ajoute(n,p) codée ci-dessous en Python doit calculer la somme de tous les entiers compris entre n et p (n et p compris).</p><p>Par exemple, ajoute(2,4) doit renvoyer 2+3+4 = 9.</p><div class=\"mycode\"><p> def ajoute(n,p):</p><p>    somme = 0</p><p>    for i in range(.........): # ligne à modifier</p><p>        somme = somme + i</p><p>    return somme</div><p>Quelle est la bonne écriture de la ligne marquée à modifier ?</p>",
    "reponse1": "for i in range(n, 1, p):",
    "reponse2": "for i in range(n, p):",
    "reponse3": "for i in range(n, p+1):",
    "reponse4": "for i in range(n-1, p):",
  "answer": 3},
  { "question": "<p>La fonction maximum codée ci-dessous en Python doit renvoyer la plus grande valeur contenue dans le tableau d'entiers passé en argument.</p><div class=\"mycode\"><p> def maximum(tableau):</p><p>    tmp = tableau[0]</p><p>        for i in range(......): # à compléter</p><p>            if tableau[i] > tmp:</p><p>                tmp = tableau[i]</p><p>    return tmp</div><p>Quelle expression faut-il écrire à la place des pointillés ?</p>",
    "reponse1": "len(tableau) - 1",
    "reponse2": "1, len(tableau) - 1",
    "reponse3": "1, len(tableau)",
    "reponse4": "1, len(tableau) + 1",
  "answer": 3},
  { "question": "<p>La documentation de la bibliothèque random de Python précise que random.randint(a,b) renvoie un entier aléatoire N tel que a <= N <= b.</p><p>Afin d’obtenir un entier choisi aléatoirement dans l’ensemble {-4 ; -2 ; 0 ; 2 ; 4}, après avoir importé la librairie random de Python, on peut utiliser l’instruction :</p>",
    "reponse1": "random.randint(0, 8)/2",
    "reponse2": "random.randint(0, 8)/2 - 4",
    "reponse3": "random.randint(0, 4)*2 - 2",
    "reponse4": "(random.randint(0, 4) - 2) * 2",
  "answer": 4},
  { "question": "<p>On considère la fonction ci-dessous :</p><div class=\"mycode\"><p> def maFonction(c):</p><p>    if c <= 10:</p><p>        p = 12</p><p>    if c <= 18:</p><p>        p = 15</p><p>    if c <= 40:</p><p>        p = 19</p><p>    else:</p><p>        p = 20</p><p>    return p</div><p>Que renvoie maFonction(18) ?</p>",
    "reponse1": "12",
    "reponse2": "15",
    "reponse3": "19",
    "reponse4": "20",
  "answer": 3},
  { "question": "<p>On définit :</p><div class=\"mycode\"><p> def f(a,m):</p><p>    i = 1</p><p>    n = 0</p><p>    while n <= m:</p><p>        i = i * a</p><p>        n = n + 1</p><p>    return i</p></div><p>Quelle est la valeur renvoyée par l'appel f(2,4) ?</p>",
    "reponse1": "8",
    "reponse2": "16",
    "reponse3": "32",
    "reponse4": "64",
  "answer": 3},
  
  { "question": "<p>On exécute le code suivant :</p><div class=\"mycode\"><p> def essai():</p><p>    a = 2</p><p>    b = 3</p><p>    c = 4</p><p>    return a</p><p>    return b</p><p>    return c</p><p>t = essai()</div><p>Quelle est la valeur de t après l'exécution de ce code ?</p>",
    "reponse1": "2",
    "reponse2": "3",
    "reponse3": "4",
    "reponse4": "(2,3,4)",
  "answer": 1},
  { "question": "<p>On définit la fonction suivante :</p><div class=\"mycode\"><p> def f(x):</p><p>    for d in range(2,x):</p><p>        if x%d == 0:</p><p>            return d</div><p>Quelle est la valeur renvoyée par l'appel f(15) ?</p>",
    "reponse1": "3",
    "reponse2": "5",
    "reponse3": "3,5",
    "reponse4": "3,5,15",
  "answer": 1},
  { "question": "<p>On exécute le code suivant :</p><div class=\"mycode\"><p> def f(t):</p><p>    n = len(t)</p><p>    for k in range(1,n):</p><p>        t[k] = t[k] + t[k-1]</p><p>L = [1, 3, 4, 5, 2]</p><p>f(L)</div><p>Quelle est la valeur de L après l'exécution de ce code ?</p>",
    "reponse1": "[1, 3, 4, 5, 2]",
    "reponse2": "[1, 4, 7, 9, 7]",
    "reponse3": "[1, 4, 8, 13, 15]",
    "reponse4": "[3, 6, 10, 15, 17]",
  "answer": 3},
  { "question": "<p>On exécute le script suivant :</p><div class=\"mycode\"><p>a = 4</p><p>b = 4</p><p>c = 4</p><p>while a &lt; 5:</p><p>    a = a - 1</p><p>    b = b + 1</p><p>    c = c * b</p></div><p>Que peut-on dire ?</p>",
    "reponse1": "ce programme ne termine pas",
    "reponse2": "à la fin de l'exécution, la variable a vaut 5",
    "reponse3": "à la fin de l'exécution, la variable b vaut 34",
    "reponse4": "à la fin de l'exécution, la variable c vaut 42",
  "answer": 1},
  { "question": "<p>On a défini une liste L de nombres entiers.</p><p>Quelle est la valeur de la variable m à la fin de l'exécution du script suivant ?</p><div class=\"mycode\"><p>m = L[0]</p><p>for j in range(len(L)):</p><p>    if m &lt; L[j]:</p><p>        m = L[j]</p></div>",
    "reponse1": "la moyenne de la liste L",
    "reponse2": "le minimum de la liste L",
    "reponse3": "le maximum de la liste L",
    "reponse4": "la longueur de la liste L",
  "answer": 3},
  { "question": "<p>Dans le programme JavaScript suivant, quelle est la notation qui délimite le bloc d’instructions exécuté à chaque passage dans la boucle while ?</p><div class=\"mycode\"><p>i = 0;</p><p>while (i &lt; 10) {</p><p>    alert(i);</p><p>    i = i + 1;</p><p>}</p><p>alert('Fin');</p>",
    "reponse1": "le fait que les instructions soient encadrées entre { et }",
    "reponse2": "le fait que les instructions soient indentées de 4 caractères comme en Python",
    "reponse3": "le fait que les instructions suivent le mot clé while",
    "reponse4": "le fait que les instructions suivent la parenthèse )",
  "answer": 1},
  
  { "question": "<p>On définit la fonction :</p><div class=\"mycode\"><p>def f(a,b):</p><p>    assert b!=0,'le deuxième argument est nul'</p><p>    result = a/b</p><p>    return result</p></div><p>Qu'obtient-on en exécutant la commande r = f(4,0) ?</p>",
    "reponse1": "une erreur ZeroDivisionError: division by zero et l'arrêt de l'exécution",
    "reponse2": "une erreur NameError: name 'b' is not defined et l'arrêt de l'exécution",
    "reponse3": "une erreur AssertionError: le deuxième argument est nul et la variable r prend la valeur 0",
    "reponse4": "une erreur AssertionError: le deuxième argument est nul et l'arrêt de l'exécution",
  "answer": 4},
  { "question": "<p>Quelles sont les valeurs des variables x et y à la fin de l'exécution du script suivant :</p><div class=\"mycode\"><p>x = 4</p><p>while x &gt; 0:</p><p>    y = 1</p><p>while y &lt; x:</p><p>    y = y + 1</p><p>    x = x - 1</p></div>",
    "reponse1": "l'exécution ne termine pas !",
    "reponse2": "la valeur de x est 0, celle de y est 0",
    "reponse3": "la valeur de x est 0, celle de y est 1",
    "reponse4": "la valeur de x est -1, celle de y est 0",
  "answer": 1},
  { "question": "<p>Quelle est la valeur de la variable x à la fin de l'exécution du script suivant :</p><div class=\"mycode\"><p></p><p>def f(x):</p><p>    x = x + 1</p><p>    return x + 1</p><p>x = 0</p><p>f(x+1)</p></div>",
    "reponse1":  "0",
    "reponse2": "1",
    "reponse3": "2",
    "reponse4": "3",
  "answer": 1},
  { "question": "<p>On définit une fonction f de la façon suivante :</p><div class=\"mycode\"><p></p><p>def f(L,m):</p><p>    R = []</p><p>    for i in range(len(L)):</p><p>        if L[i] > m:</p><p>            R.append(L[i])</p><p>    return R</p></div><p>On définit L = [1, 7, 3, 4, 8, 2, 0, 3, 5].</p><p>Que vaut f(L,4) ?</p>",
    "reponse1": "[0, 7, 0, 0, 8, 0, 0, 0, 5]",
    "reponse2": "[0, 0, 0, 5]",
    "reponse3": "[7, 8, 5]",
    "reponse4": "[]",
  "answer": 3},
  { "question": "<p>La fonction maxi ci-dessous a pour but de renvoyer la valeur maximale présente dans la liste qui lui est passée en argument.</p><div class=\"mycode\"><p>def maxi(L):</p><p>    dernier_indice = len(L) - 1</p><p>    valeur_max = L[0]</p><p>    for i in range(1,dernier_indice):</p><p>        if L[i] &gt; valeur_max:</p><p>            valeur_max = liste[i]</p><p>    return valeur_max</p></div><p>Cette fonction a été mal programmée. On souhaite réaliser un test pour le démontrer.</p><p>Parmi les propositions suivantes, laquelle mettra la fonction maxi en défaut ?</p>",
    "reponse1": "maxi([1, 2, 3, 4])",
    "reponse2": "maxi([4, 3, 2, 1])",
    "reponse3": "maxi([1, 3, 3, 2])",
    "reponse4": "maxi([1, 1, 1, 1])",
  "answer": 1},
  { "question": "<p>La fonction suivante ne calcule pas toujours correctement le maximum des deux nombres donnés en argument. On rappelle que abs(z) calcule la valeur absolue du nombre z.</p><div class=\"mycode\"><p>def maxi(x,y)&nbsp;:</p><p>    m = (x-y+abs(x+y))/2</p><p>    return m</p></div><p>Parmi les tests suivants, lequel va détecter l'erreur ?</p>",
    "reponse1": "maxi(3,-2)",
    "reponse2": "maxi(2,2)",
    "reponse3": "maxi(3,2)",
    "reponse4": "maxi(2,3)",
  "answer": 4},
  
  { "question": "<p>On souhaite écrire une fonction qui renvoie le maximum d'une liste d'entiers :</p><div class=\"mycode\"><p>def maximum(L):</p><p>    m = L[0]</p><p>    for i in range(1,len(L)):</p><p>        if .........:</p><p>            m = L[i]</p><p>    return m</p></div><p>Par quoi faut-il remplacer les pointillés pour que cette fonction produise bien le résultat attendu ?</p>",
    "reponse1": "i > m",
    "reponse2": "L[i] > m",
    "reponse3": "L[i] > L[i-1]",
    "reponse4": "L[i] > L[i+1]",
  "answer": 2},
  { "question": "<p>On exécute le script suivant :</p><div class=\"mycode\"><p></p><p>def calcul(a,b):</p><p>    a = a + 2</p><p>    b = b + 5</p><p>    c = a + b</p><p>    return c</p><p>a,b = 3,5</p><p>calcul(a,b)</p></div><p>À la fin de cette exécution :</p>",
    "reponse1": "a vaut 3, b vaut 5 et c vaut 15",
    "reponse2": "a vaut 3, b vaut 5 et c n'est pas défini",
    "reponse3": "a vaut 5, b vaut 10 et c vaut 15",
    "reponse4": "a vaut 5, b vaut 10 et c n'est pas défini",
  "answer": 2},
 
  { "question": "<p>On exécute le code suivant :</p><div class=\"mycode\"><p></p><p>def f(t):</p><p>    n = len(t)</p><p>    for i in range(n-1):</p><p>        if t[i] > t[i+1]:</p><p>            t[i],t[i+1] = t[i+1],t[i]</p><p>L = [4, 8, -7, 0, 1]</p><p>f(L)</p></div><p>Quelle est la valeur de L après l'exécution de ce code ?</p>",
    "reponse1": "[4, -7, 8, 0, 1]",
    "reponse2": "[-7, 0, 1, 4, 8]",
    "reponse3": "[4, 8, -7, 0, 1]",
    "reponse4": "[4, -7, 0, 1, 8]",
  "answer": 4},

  { "question": "<p>Soit T un tableau de flottants, a et b deux entiers. On considère une fonction nommée somme renvoyant la somme des éléments du tableau d'indices compris entre a et b définie par :</p><div class=\"mycode\"><p></p><p>def somme(T, a, b):</p><p>    S = 0</p><p>    for i in range(a, b+1) :</p><p>        S = S + T[i]</p><p>    return S</p></div><p>Quel ensemble de préconditions doit-on prévoir pour cette fonction ?</p>",
    "reponse1": "a < b",
    "reponse2": "a < longueur(T) et b < longueur(T)",
    "reponse3": "a <= b < longueur(T)",
    "reponse4": "a <= b < longueur(T) et T est un tableau trié",
  "answer": 3},

  {"question": "<p>Avec la définition de fonction capital_double suivante, que peut-on toujours affirmer à propos du résultat n renvoyé par la fonction ?</p><div class=\"mycode\"><p>  </p><p>def capital_double (capital, interet):</p><p>    montant = capital</p><p>    n = 0</p><p>    while montant <= 2 * capital:</p><p>        montant = montant + interet</p><p>        n = n + 1</p><p>    return n</p></div>",
    "reponse1": "n == capital / interet",
    "reponse2": "capital * n * interet > 2 * capital",
    "reponse3": "capital + n * interet > 2 * capital",
    "reponse4": "n == 2 * capital / interet",
    "answer": 3},
  
   {"question": "<p>La documentation de la bibliothèque random de Python précise :</p><p>\"random.randint(a, b) :</p><p> Renvoie un entier aléatoire N tel que a <= N <= b.\"</p><p>Quelle est l’expression Python permettant de simuler le tirage d’un dé à 6 faces après avoir exécuté import random ?</p>",
    "reponse1": "random.randint(6)",
    "reponse2": "random.randint(1,6)",
    "reponse3": "random.randint(1,7)",
    "reponse4": "random.randint(0,6)",
    "answer": 2},
   
    {"question": "<p>On a écrit une fonction qui prend en paramètre une liste non vide et qui renvoie son plus grand élément. Combien de tests faudrait-il écrire pour garantir que la fonction donne un résultat correct pour toute liste ?</p>",
    "reponse1": "deux tests : pour une liste à un élément et pour une liste à deux éléments ou plus",
    "reponse2": "deux tests : pour le cas où le plus grand élément est en début de liste, et pour le cas où le plus grand élément n’est pas en début de liste",
    "reponse3": "trois tests : pour une liste vide, pour une liste à un élément, et pour une liste à deux éléments ou plus",
    "reponse4": "il faudrait écrire une infinité de tests : on ne peut pas prouver que cette fonction est correcte, simplement en la testant",
    "answer": 4},
   
    {"question": "<p>La fonction Python suivante ne calcule pas toujours correctement le résultat de x<sup>y</sup> pour des arguments entiers. Parmi les tests suivants, lequel va permettre de détecter l’erreur ?</p><div class=\"mycode\"><p>  </p><p>def puissance (x,y):</p><p>    p = x</p><p>    for i in range (y - 1):</p><p>        p = p * x </p><p>    return p</p></div>",
    "reponse1": "puissance(2,0)",
    "reponse2": "puissance(2,1)",
    "reponse3": "puissance(2,2)",
    "reponse4": "puissance(2,10)",
    "answer": 1},
   
    {"question": "<p>En Python, quelle est la méthode pour charger la fonction sqrt du module math ?</p>",
    "reponse1": "using math.sqrt",
    "reponse2": "#include math.sqrt",
    "reponse3": "from math include sqrt",
    "reponse4": "from math import sqrt",
    "answer": 4},
   
    {"question": "<p>On définit deux fonctions :</p><div class=\"mycode\"><p>  </p><p>def f(x):</p><p>    y = 2*x + 1</p><p>    return y</p><p>def calcul(x):</p><p>    y = x - 1</p><p>    return f(y)</p></div><p>Quelle est la valeur renvoyée par l'appel calcul(5) ?</p>",
    "reponse1": "4",
    "reponse2": "9",
    "reponse3": "11",
    "reponse4": "19",
    "answer": 2},
  
    {"question": "<p>n étant un entier strictement positif, la fonction suivante calcule sa factorielle, c'est-à-dire le produit 1 x 2 x 3 x ... x (n - 1) x n. </p><p>Comment faut-il écrire la ligne en pointillé ci-dessous pour ce faire ?</p><div class=\"mycode\"><p> </p><p>def factorielle(n):</p><p>    f = 1</p><p>    .........</p><p>        f = f * i</p><p>    return f</p></div></p>",
      "reponse1": "for i in range(1, n):",
      "reponse2": "for i in range(n+1):",
      "reponse3": "for i in range(0, n):",
      "reponse4": "for i in range(1, n+1):",
      "answer": 4},
  
     {"question": "<p>On exécute le script suivant :</p><div class=\"mycode\"><p>a = 4</p><p>b = 4</p><p>c = 4</p><p>while a < 5:</p><p>    a = a - 1</p><p>    b = b + 1</p><p>    c = c * b</p></div><p>Que peut-on dire ?</p>",
      "reponse1": "ce programme ne termine pas",
      "reponse2": "à la fin de l'exécution, la variable a vaut 5",
      "reponse3": "à la fin de l'exécution, la variable b vaut 34",
      "reponse4": "à la fin de l'exécution, la variable c vaut 42",
      "answer": 1},
     
      {"question": "<p>On souhaite écrire une fonction qui renvoie le maximum d'une liste d'entiers :</p><div class=\"mycode\"><p>def maximum(L): </p><p>    m = L[0]</p><p>    for i in range(1,len(L)):</p><p>        if .........:</p><p>            m = L[i]</p><p>    return m</p></div><p>Par quoi faut-il remplacer les pointillés pour que cette fonction produise bien le résultat attendu ?</p>",
      "reponse1": "i > m",
      "reponse2": "L[i] > m",
      "reponse3": "L[i] > L[i-1]",
      "reponse4": "L[i] > L[i+1]",
      "answer": 2},
     
      {"question": "<p>Quel est le seul langage de programmation parmi les propositions suivantes ?</p>",
      "reponse1": "HTML",
      "reponse2": "CSS",
      "reponse3": "C++",
      "reponse4": "WEB",
      "answer": 3},
     
      {"question": "<p >La fonction suivante calcule la racine carrée du double d’un nombre flottant.</p><div class=\"mycode\"><p>from math import sqrt</p><p>def racine_du_double(x): </p><p>    return sqrt(2*x)</p></div><p>Quelle est la précondition sur l'argument de cette fonction ?</p>",
      "reponse1": "x < 0",
      "reponse2": "x >= 0",
      "reponse3": "2 * x > 0",
      "reponse4": "sqrt(x) >= 0",
      "answer": 2},
     
      {"question": "<p class=\"long\">La fonction maxi ci-dessous a pour but de renvoyer la valeur maximale présente dans la liste qui lui est passée en argument.</p><div class=\"mycode\"><p>def maxi(L):</p><p>    dernier_indice = len(L) - 1</p><p>    valeur_max = L[0]</p><p>    for i in range(1,dernier_indice):</p><p>        if L[i] > valeur_max:</p><p>            valeur_max = L[i]</p><p>    return valeur_max </p></div><p class=\"long\">Cette fonction a été mal programmée. On souhaite réaliser un test pour le démontrer.</p><p class=\"long\">Parmi les propositions suivantes, laquelle mettra la fonction maxi en défaut ?</p>",
      "reponse1": "maxi([1, 2, 3, 4])",
      "reponse2": "maxi([4, 3, 2, 1])",
      "reponse3": "maxi([1, 3, 3, 2])",
      "reponse4": "maxi([1, 1, 1, 1])",
      "answer": 1},
  
      {"question": "<p>T est un tableau de nombres entiers non vide. Que représente la valeur de s envoyée par cette fonction ?</p><div class=\"mycode\"><p>def mystere(T):</p><p>    s = 0</p><p>    for k in T:</p><p>        if k % 2 == 0:</p><p>            s = s+k</p><p>    return s</p></div>",
        "reponse1": "la somme des valeurs du tableau T",
        "reponse2": "la somme des valeurs positives du tableau T",
        "reponse3": "la somme des valeurs impaires du tableau T",
        "reponse4": "la somme des valeurs paires du tableau T",
        "answer": 4},
     
       {"question": "<p>On définit une fonction f de la façon suivante :</p><div class=\"mycode\"><p>def f(L,m):</p><p>    R = []</p><p>    for i in range(len(L)):</p><p>        if L[i] > m:</p><p>            R.append(L[i])</p><p>    return R</p></div><p>On définit L = [1, 7, 3, 4, 8, 2, 0, 3, 5].</p><p>Que vaut f(L,4) ?</p>",
        "reponse1": "[0, 7, 0, 0, 8, 0, 0, 0, 5]",
        "reponse2": "[0, 0, 0, 5]",
        "reponse3": "[7, 8, 5]",
        "reponse4": "[]",
        "answer": 3},
  
       {"question": "<p>On exécute le script suivant :</p><div class=\"mycode\"><p>a = 4</p><p>b = 4</p><p>c = 4</p><p>while a < 5:</p><p>    a = a - 1</p><p>    b = b + 1</p><p>    c = c * b</p></div><p>Que peut-on dire ?</p>",
        "reponse1": "ce programme ne termine pas",
        "reponse2": "à la fin de l'exécution, la variable a vaut 5",
        "reponse3": "à la fin de l'exécution, la variable b vaut 34",
        "reponse4": "à la fin de l'exécution, la variable c vaut 42",
        "answer": 1},
  
       {"question": "<p>En voulant programmer une fonction qui calcule la valeur minimale d'une liste d'entiers, on a écrit :</p><div class=\"mycode\"><p>def minimum(L):</p><p>    mini = 0</p><p>    for e in L:</p><p>        if e < mini:</p><p>           mini = e</p><p>    return mini</p></div><p>Cette fonction a été mal programmée. Pour quelle liste ne donnera-t-elle pas le résultat attendu, c'est-à-dire son minimum ?</p>",
        "reponse1": "[-1, -8, 12, 2, 23]",
        "reponse2": "[0, 18, 12, 2, 3]",
        "reponse3": "[-1, -1, 12, 12, 23]",
        "reponse4": "[1, 8, 12, 2, 23]",
        "answer": 4},
  
       {"question": "<p>Quelle est la valeur de la variable n à la fin de l'exécution du script ci-dessous ?</p><div class=\"mycode\"><p>n = 1</p><p>while n != 20:</p><p>    n = n + 2</p></div></p>",
        "reponse1": "1",
        "reponse2": "20",
        "reponse3": "22",
        "reponse4": "le programme ne termine pas, la boucle tourne indéfiniment",
        "answer": 4},
     
       {"question": "<p>On définit la fonction :</p><div class=\"mycode\"><p>def fib(n):</p><p>    t = [0] * n</p><p>    t[1] = 1</p><p>    for in in range(2,n):</p><p>        t[i] = t[i-1] + t[i-2]</p><p>    return t</p></div><p>Quelle est la valeur renvoyée par l'appel fib(6) ?</p>",
        "reponse1": "[0, 1, 1, 2, 3]",
        "reponse2": "[0, 1, 1, 2, 3, 5]",
        "reponse3": "[0, 1, 1, 2, 3, 5, 8]",
        "reponse4": "[0, 1, 2, 3, 5, 8]",
        "answer": 2},
  
       {"question": "<p>On considère le code suivant :</p><div class=\"mycode\"><p>if x &lt; 4:</p><p>    x = x + 3</p><p>else:</p><p>    x = x - 3</p></div><p>Quelle construction élémentaire peut-on identifier ?</p>",
        "reponse1": "une boucle non bornée",
        "reponse2": "une structure conditionnelle",
        "reponse3": "une boucle bornée",
        "reponse4": "un appel de fonction",
        "answer": 2},
       
        {"question": "<p>La fonction ajoute(n,p) codée ci-dessous en Python doit calculer la somme de tous les entiers compris entre n et p (n et p compris).</p><p>Par exemple, ajoute(2,4) doit renvoyer 2+3+4 = 9.</p><div class=\"mycode\"><p>def ajoute(n,p):</p><p>    somme = 0</p><p>    for i in range(......): # ligne à modifier</p><p>        somme = somme + i</p><p>    return somme</p></div><p>Quelle est la bonne écriture de la ligne marquée à modifier ?</p>",
        "reponse1": "for i in range(n, 1, p):",
        "reponse2": "for i in range(n, p):",
        "reponse3": "for i in range(n, p+1):",
        "reponse4": "for i in range(n-1, p):",
        "answer": 3},
  
       {"question": "<p>On exécute le code suivant :</p><div class=\"mycode\"><p>def f(t):</p><p>    n = len(t)</p><p>    for k in range(1, n):</p><p>        t[k] = t[k] + t[k-1]</p><p>L = [1, 3, 4, 5, 2]</p><p>f(L)</p></div><p>Quelle est la valeur de L après l'exécution de ce code ?</p>",
        "reponse1": "[1, 3, 4, 5, 2]",
        "reponse2": "[1, 4, 7, 9, 7]",
        "reponse3": "[1, 4, 8, 13, 15]",
        "reponse4": "[3, 6, 10, 15, 17]",
        "answer": 3},
  
       {"question": "<p>On considère l'instruction suivante :</p><p class=\"mycode\">resultat = [0] * 7</p></div><p>Que contient la variable resultat après son exécution ?</p>",
        "reponse1": "0",
        "reponse2": "[0]",
        "reponse3": "[[0], [0], [0], [0], [0], [0], [0]]",
        "reponse4": "[0, 0, 0, 0, 0, 0, 0]",
        "answer": 4}


]
