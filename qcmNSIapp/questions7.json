
 [{ "question": "<p>Quelle est la complexité du tri par sélection ?</p>",
    "reponse1": "inconnue",
    "reponse2": "linéaire",
    "reponse3": "quadratique",
    "reponse4": "exponentielle",
  "answer": 3},

  { "question": "<p>Soit L une liste de n nombres réels (n entier naturel non nul). On considère l'algorithme suivant, en langage Python, calculant la moyenne des éléments de L.</p><div class=\"mycode\"><p>M = 0</p><p>for k in range(n):</p><p>    M = M + L[k]</p><p>M = M/n</div><p>Si le nombre n de données double alors le temps d'exécution de ce script :</p>",
    "reponse1": "reste le même",
    "reponse2": "double aussi",
    "reponse3": "est multiplié par n",
    "reponse4": "est multiplié par 4",
  "answer": 2},

  { "question": "<p>La fonction ci-dessous compte le nombre d'occurrences d'un élément x dans une liste L :</p><div class=\"mycode\"><p> def compteur(L,x):</p><p>    n = 0</p><p>    for item in L:</p><p>        if item == x:</p><p>            n = n + 1</p><p>    return n</div><p>Comment évolue le temps d'exécution d'un appel de cette fonction si on prend comme argument une liste deux fois plus grande ?</p>",
    "reponse1": "c'est le même temps d'exécution",
    "reponse2": "le temps d'exécution est à peu près doublé",
    "reponse3": "le temps d'exécution est à peu près quadruplé",
    "reponse4": "impossible de le prévoir, cela dépend aussi de l'argument x",
  "answer": 2},

  { "question": "<p>La fonction mystere suivante prend en argument un tableau d'entiers.</p><div class=\"mycode\"><p> def mystere(t):</p><p>    for i in range(len(t) - 1):</p><p>        if t[i+1] != t[i] + 1:</p><p>            return False</p><p>    return True</code></pre><p>À quelle condition la valeur renvoyée par la fonction est-elle True ?</p>",
    "reponse1": "si le tableau passé en argument est une suite d'entiers consécutifs",
    "reponse2": "si le tableau passé en argument est trié en ordre croissant",
    "reponse3": "si le tableau passé en argument est trié en ordre décroissant",
    "reponse4": "si le tableau passé en argument contient des entiers tous identiques",
  "answer": 1},

  { "question": "<p>La fonction suivante doit déterminer la valeur maximale d'un tableau de nombres passé en argument. Avec quelles expressions faut-il remplacer les pointillés du script suivant pour que la fonction soit correcte ?</p><div class=\"mycode\"><p> def maximum(T):</p><p>    maxi = T[0]</p><p>    n = len(T)</p><p>    for i in range(i, ...):</p><p>        if T[i] > maxi:</p><p>            maxi = ...</p><p>    return maxi</code></pre></p><p>",
    "reponse1": "n puis T[i]",
    "reponse2": "n puis T[i-1]",
    "reponse3": "n-1 puis T[i]",
    "reponse4": "n-1 puis T[i-1]",
  "answer": 1},

  { "question": "<p>a et m étant deux entiers supérieurs à 1, la fonction suivante renvoie a<sup>m</sup>.</p><div class=\"mycode\"><p> def puissance(a,m):</p><p>    p = 1</p><p>    n = 0</p><p>    while n < m:</p><p>        #</p><p>        p = p * a</p><p>        n = n + 1</p><p>    return p</div><p>Quelle est l'égalité qui est vérifiée à chaque passage par la ligne marquée # ?</p>",
    "reponse1": "p = a<sup>n - 1</sup>",
    "reponse2": "p = a<sup>n</sup>",
    "reponse3": "p = a<sup>n + 1</sup>",
    "reponse4": "p = a<sup>m</sup>",
  "answer": 2},

  { "question": "<p>Quelle est la valeur de element à la fin de l'exécution du code suivant :</p><div class=\"mycode\"><p>L = [1, 2, 3, 4, 1, 2, 3, 4, 0, 2]</p><p>element = L[0]</p><p>for k in L:</p><p>    if k > element:</p><p>        element = k</code></pre></p><p>",
    "reponse1": "0",
    "reponse2": "1",
    "reponse3": "4",
    "reponse4": "10",
  "answer": 3},

  { "question": "<p>On dispose en quantité illimité de pièces de 1 euro, 2 euros et 5 euros. On veut totaliser une somme de 18&nbsp;euros. Quelle est la solution donnée par l’algorithme glouton ?</p>",
    "reponse1": "[5, 5, 5, 2, 1]",
    "reponse2": "[5, 5, 5, 2, 2, 1]",
    "reponse3": "[5, 5, 2, 2, 2, 1, 1]",
    "reponse4": "[5, 2, 2, 2, 2, 1, 1, 1, 1, 1]",
  "answer": 1},

  { "question": "<p>On considère la fonction suivante :</p><div class=\"mycode\"><p> </p><p>def comptage(phrase,lettre):</p><p>    i = 0</p><p>    for j in phrase:</p><p>        if j == lettre:</p><p>            i = i+1</p><p>    return i</p></div><p>Que renvoie l'appel comptage(\"Vive l’informatique\",'e') ?</p>",
    "reponse1": "0",
    "reponse2": "2",
    "reponse3": "19",
    "reponse4": "e",
  "answer": 2},

  { "question": "<p>Quelle est la valeur du couple (s,i) à la fin de l'exécution du script suivant ?</p><div class=\"mycode\"><p> </p><p>s = 0</p><p>i = 1</p><p>while i &lt; 5:</p><p>    s = s + i</p><p>    i = i + 1</p><p></code></pre></p><p>",
    "reponse1": "(4, 5)",
    "reponse2": "(10, 4)",
    "reponse3": "(10, 5)",
    "reponse4": "(15, 5)",
  "answer": 3},

  { "question": "<p>À la fin de l'exécution du code suivant, quelle sera la valeur de la variable cpt ?</p><div class=\"mycode\"><p>a = 1</p><p>cpt = 20</p><p>while cpt &gt; 8:</p><p>    a = 2*a</p><p>    cpt = cpt - 1</p></div>",
    "reponse1":  "0",
    "reponse2": "7",
    "reponse3": "8",
    "reponse4": "9",
  "answer": 3},

  { "question": "<p>On définit la fonction suivante&nbsp;:</p><div class=\"mycode\"><p>def traitement(liste)&nbsp;:</p><p>    m = liste[0]</p><p>    for i in range (len(liste))&nbsp;:</p><p>        if liste[i] &gt; m:</p><p>            m = liste[i]</p><p>    return m</p></div><p>Que vaut traitement([-2,5,6,-10,35])&nbsp;?</p>",
    "reponse1": "None",
    "reponse2": "-10",
    "reponse3": "-6",
    "reponse4": "35",
  "answer": 4},

  { "question": "<p>Quelle valeur permet de compléter l’affirmation suivante&nbsp;: «&nbsp;Le nombre d’opérations nécessaires pour rechercher un élément séquentiellement dans un tableau de longueur n est de l’ordre de …&nbsp;»&nbsp;?</p>",
    "reponse1": "1",
    "reponse2": "n",
    "reponse3": "n<sup>2</sup>",
    "reponse4": "n<sup>3</sup>",
  "answer": 2},

  { "question": "<p>Quelle est la valeur de c à la fin de l'exécution du code suivant :</p><div class=\"mycode\"><p></p><p>L = [1,2,3,4,1,2,3,4,0,2]</p><p>c = 0</p><p>for k in L:</p><p>    if k == L[1]:</p><p>        c = c + 1</p></div>",
    "reponse1":  "0",
    "reponse2": "2",
    "reponse3": "3",
    "reponse4": "10",
  "answer": 3},

  { "question": "<p>La fonction suivante doit calculer le produit de tous les éléments de la liste passée en paramètre. Avec quelles expressions doit-on la compléter pour que cette fonction soit correcte ?</p><div class=\"mycode\"><p></p><p>def produit (L):</p><p>    p = ...</p><p>    for elt in L:</p><p>        ...</p><p>    return p</p></div>",
    "reponse1": "1 puis p = p * elt",
    "reponse2":  "0 puis p = p * elt",
    "reponse3": "1 puis p = elt",
    "reponse4":  "0 puis p = elt",
  "answer": 1},

  { "question": "<p>On définit une fonction de calcul de la moyenne d'une liste de nombres :</p><div class=\"mycode\"><p></p><p>def moyenne(L):</p><p>    s = 0</p><p>    n = len(L)</p><p>    for x in L:</p><p>        s = s + x</p><p>    return s/n</p></div><p>Combien cette fonction utilise-t-elle d'additions et de divisions pour calculer la moyenne d'une liste de 7 nombres ?</p>",
    "reponse1": "7",
    "reponse2": "8",
    "reponse3": "9",
    "reponse4": "10",
  "answer": 2},

  { "question": "<p>Quelle est la valeur du couple (s,i) à la fin de l'exécution du script suivant ?</p><div class=\"mycode\"><p></p><p>s = 0</p><p>i = 1</p><p>while i < 5:</p><p>    s = s + i</p><p>    i = i + 1</p></div>",
    "reponse1": "(4, 5)",
    "reponse2": "(10, 4)",
    "reponse3": "(10, 5)",
    "reponse4": "(15, 5)",
  "answer": 3},

  { "question": "<p>On considère le code suivant, où n désigne un entier au moins égal à 2.</p><div class=\"mycode\"><p><p>p = 1</p><p>while p &lt; n:</p><p>    p = 2*p</p></div><p>Quel argument permet d'affirmer que son exécution termine à coup sûr ?</p>",
    "reponse1": "p est une puissance de 2",
    "reponse2": "toute boucle while termine",
    "reponse3": "les valeurs successives de p constituent une suite d'entiers positifs strictement croissante",
    "reponse4": "les valeurs successives de n – p constituent une suite d'entiers positifs strictement décroissante",
  "answer": 4},

  { "question": "<p>On considère la fonction suivante :</p><div class=\"mycode\"><p><p>def f(T,i):</p><p>    indice = i</p><p>    m = T[i]</p><p>    for k in range(i+1, len(T)):</p><p>        if T[k] &lt; m:</p><p>            indice = k</p><p>            m = T[k]</p><p>    return indice</p></div><p>Quelle est la valeur de f([ 7, 3, 1, 8, 19, 9, 3, 5 ], 0) ?</p>",
    "reponse1": "1",
    "reponse2": "2",
    "reponse3": "3",
    "reponse4": "4",
  "answer": 2},

  { "question": "<p>Quel est l’ordre de grandeur du coût du tri par insertion&nbsp;(dans le pire des cas) ?</p>",
    "reponse1": "l'ordre de grandeur du coût dépend de l'ordinateur utilisé",
    "reponse2": "linéaire en la taille du tableau à trier",
    "reponse3": "quadratique en la taille du tableau à trier",
    "reponse4": "indépendant de la taille du tableau à trier",
  "answer": 3},

  { "question": "<p>À quelle catégorie appartient l’algorithme classique de rendu de monnaie&nbsp;?</p>",
    "reponse1": "les algorithmes de classification et d'apprentissage",
    "reponse2": "les algorithmes de tri",
    "reponse3": "les algorithmes gloutons",
    "reponse4": "les algorithmes de mariages stables",
  "answer": 3},

  { "question": "<p>Un algorithme de tri d’une liste d’entiers est implémenté de la façon suivante :</p><div class=\"mycode\"><p></p><p>def trier(L) :</p><p>    for i in range(len(L)):</p><p>        indice_min = i</p><p>        for j in range(i+1, len(L)):</p><p>            if L[j] < L[indice_min] :</p><p>                indice_min = j</p><p>        L[i], L[indice_min] = L[indice_min], L[i]</p><p>    return L</p></div><p>Quelle est l'affirmation exacte ?</p>",
    "reponse1": "cet algorithme est celui du tri par sélection et il a un coût linéaire en la taille de la liste à trier",
    "reponse2": "cet algorithme est celui du tri par insertion et il a un coût linéaire en la taille de la liste à trier",
    "reponse3": "cet algorithme est celui du tri par sélection et il a un coût quadratique en la taille de la liste à trier",
    "reponse4": "cet algorithme est celui du tri par insertion et il a un coût quadratique en la taille de la liste à trier",
  "answer": 3},


  { "question": "<p>Quelle précondition suppose l'algorithme de recherche dichotomique dans un tableau ?</p>",
    "reponse1": "que le tableau soit à éléments positifs",
    "reponse2": "que le tableau soit trié",
    "reponse3": "que l'élément cherché dans le tableau soit positif",
    "reponse4": "que l'élément cherché figure effectivement dans le tableau",
  "answer": 2},

  { "question": "<p>On considère la fonction suivante :</p><div class=\"mycode\"><p>def trouverLettre(phrase,lettre):</p><p>    indexResultat = 0</p><p>    for i in range(len(phrase)):</p><p>        if phrase[i] == lettre:</p><p>            indexResultat = i</p><p>    return indexResultat</p></div><p>Que renvoie l'appel trouverLettre('Vive l’informatique','e') ?</p>",
    "reponse1": "3",
    "reponse2": "4",
    "reponse3": "18",
    "reponse4": "e",
  "answer": 3},

  {"question": "<p>L'algorithme suivant permet de calculer la somme des N premiers entiers, où N est un nombre entier donné :</p><div class=\"mycode\"><p>i = 0</p><p>somme = 0</p><p>while i < N :</p><p>    i = i + 1</p><p>    somme = somme + i</p></div><p>Un invariant de boucle de cet algorithme est le suivant :</p>",
    "reponse1": "somme = 0 + 1 + 2 + ... + i    et i < N",
    "reponse2": "somme = 0 + 1 + 2 + ... + N    et i < N",
    "reponse3": "somme = 0 + 1 + 2 + ... + i    et i < N+1",
    "reponse4": "somme = 0 + 1 + 2 + ... + N    et i < N+1",
    "answer": 3},
 
   {"question": "<p>Quelle est la valeur de c à la fin de l'exécution du code suivant :<div class=\"mycode\"><p>L = [1, 2, 3, 4, 1, 2, 3, 4, 0, 2]</p><p>c = 0</p><p>for k in L:</p><p>    if k == L[1]:</p><p>        c = c + 1</p></div>",
    "reponse1": "0",
    "reponse2": "2",
    "reponse3": "3",
    "reponse4": "10",
    "answer": 3},
 
   {"question": "<p>On considère la fonction Python suivante, qui prend en argument une liste L et renvoie le maximum des éléments de la liste :</p><div class=\"mycode\"><p>def rechercheMaximum(L):</p><p>    max = L[0]</p><p>    for i in range(len(L)):</p><p>        if L[i] > max:</p><p>            max = L[i]</p><p>    return max</p></div><p>On note n la taille de la liste.</p><p>Quelle est la complexité en nombre d’opérations de l’algorithme ?</p>",
    "reponse1": "constante, c’est-à-dire ne dépend pas de n",
    "reponse2": "linéaire, c’est-à-dire de l’ordre de n",
    "reponse3": "quadratique, c’est-à-dire de l’ordre de n²",
    "reponse4": "cubique, c’est-à-dire de l’ordre de n^3",
    "answer": 2},
 
   {"question": "<p>Quelle est la valeur du couple (s,i) à la fin de l'exécution du script suivant ?</p><div class=\"mycode\"><p>s = 0</p><p>i = 1</p><p>while i < 5:</p><p>    s = s + i</p><p>    i = i + 1</p></div>",
    "reponse1": "(4, 5)",
    "reponse2": "(10, 4)",
    "reponse3": "(10, 5)",
    "reponse4": "(15, 5)",
    "answer": 3},
 
   {"question": "<p>Pour trier par sélection une liste de 2500 entiers, le nombre de comparaisons nécessaires à l’algorithme est de l’ordre de :</p>",
    "reponse1": "√2500",
    "reponse2": "2500",
    "reponse3": "2500<sup>2</sup>",
    "reponse4": "2<sup>2500</sup>",
    "answer": 3},
 
   {"question": "<p>En utilisant une recherche dichotomique, combien faut-il de comparaisons pour trouver une valeur dans un tableau trié de 1000 nombres ?</p>",
    "reponse1": "3",
    "reponse2": "10",
    "reponse3": "1000",
    "reponse4": "1024",
    "answer": 2},
 
 
    {"question": "<p>Que renvoie la fonction suivante quand on l'appelle avec un nombre entier et une liste d'entiers ?</p><div class=\"mycode\"><p>def mystere(n,L):</p><p>    for x in L:</p><p>        if n == x:</p><p>            return True</p><p>    return False</p></div></p>",
     "reponse1": "une valeur booléenne indiquant si le nombre n est présent au moins une fois dans la liste L",
     "reponse2": "une valeur booléenne indiquant si le nombre n est présent plusieurs fois dans la liste L",
     "reponse3": "une valeur booléenne indiquant si le nombre n est le plus grand de la liste L",
     "reponse4": "une valeur booléenne indiquant si le nombre n est le plus petit de la liste L",
     "answer": 1},
 
    {"question": "<p>La fonction mystere suivante prend en argument un tableau d'entiers.</p><div class=\"mycode\"><p>def mystere(t): </p><p>    for i in range(len(t) - 1): </p><p>        if t[i] + 1 != t[i+1]: </p><p>            return False </p><p>    return True </p></div><p>À quelle condition la valeur renvoyée par la fonction est-elle True ?</p>",
     "reponse1": "si le tableau passé en argument est une suite d'entiers consécutifs",
     "reponse2": "si le tableau passé en argument est trié en ordre croissant",
     "reponse3": "si le tableau passé en argument est trié en ordre décroissant",
     "reponse4": "si le tableau passé en argument contient des entiers tous identiques",
     "answer": 1},
 
    {"question": "<p class=\"long\">On exécute le script suivant :</p> <div class=\"mycode\"><p>def recherche(liste): </p><p>    valeur_1 = liste[0]</p><p>    valeur_2 = liste[0] </p><p>    for item in liste: </p><p>        if item < valeur_1: </p><p>            valeur_1 = item </p><p>        elif item > valeur_2: </p><p>            valeur_2 = item </p><p>        else: </p><p>            pass </p><p>    return (valeur_1, valeur_2)</p><p>liste = [48, 17, 25 , 9, 34, 12, -5, 89, 54, 12, 78, 8, 155, -85]</p><p></div><p class=\"long\">Que va renvoyer l'appel recherche(liste) ?</p>",
     "reponse1": "(-85, 155)",
     "reponse2": "[-85, 155]",
     "reponse3": "(155, -85)",
     "reponse4": "(-85; 155)",
     "answer": 1},
 
    {"question": "<p>Un algorithme de recherche dichotomique dans une liste triée de taille n nécessite, dans le pire des cas, exactement k comparaisons.</p><p>Combien cet algorithme va-t-il utiliser, dans le pire des cas, de comparaisons sur une liste de taille 2n ?</p>",
     "reponse1": "k",
     "reponse2": "k + 1",
     "reponse3": "2k",
     "reponse4": "2k + 1",
     "answer": 2},
 
    {"question": "<p>On considère la fonction suivante :</p><div class=\"mycode\"><p>def f(x,L):</p><p>   i = 0</p><p>   j = len(L)-1</p><p>    while i < j:</p><p>        k = (i+j)//2</p><p>        if x <= L[k]:</p><p>            j = k</p><p>        else:</p><p>            i = k + 1</p><p>    return i</p></div><p>Cette fonction implémente  :</p>",
     "reponse1": "le tri par insertion",
     "reponse2": "le tri par sélection",
     "reponse3": "la recherche dichotomique",
     "reponse4": "la recherche du plus proche voisin",
     "answer": 3},
 
     {"question": "<p>On considère le code incomplet suivant qui recherche le maximum dans une liste.</p><div class=\"mycode\"><p>liste = [5,12,15,3,15,17,29,1]</p><p>iMax = 0</p><p>for i in range(1,len(liste)):</p><p>    ............</p><p>    iMax = i</p><p>print (liste[iMax])</p></div><p>Par quoi faut-il remplacer la ligne pointillée ?</p>",
       "reponse1": "if i > iMax:",
       "reponse2": "if liste[i] > liste[iMax]:",
       "reponse3": "if liste[i] > iMax:",
       "reponse4": "if i > liste[iMax]:",
       "answer": 2},
 
      {"question": "<p>On conçoit un algorithme permettant de déterminer la valeur maximale parmi une liste quelconque de valeurs comparables.</p><p>Pour une liste de 100 valeurs, le nombre minimal de comparaisons que doit effectuer cet algorithme est&nbsp;:</p>",
       "reponse1": "7",
       "reponse2": "99",
       "reponse3": "200",
       "reponse4": "10000",
       "answer": 2},
      
       {"question": "<p>Quelle est la valeur de la variable element à la fin de l'exécution du code suivant&nbsp;:</p><div class=\"mycode\"><p>L = [1, 2, 3, 4, 1, 2, 3, 4, 0, 2]</p><p>element = L[0]</p><p>for k in L:</p><p>    if k > element:</p><p>        element = k</p></div></p>",
       "reponse1": "0",
       "reponse2": "1",
       "reponse3": "4",
       "reponse4": "10",
       "answer": 3},
      
       {"question": "<p>Un algorithme de recherche dichotomique dans une liste triée de taille n nécessite, dans le pire des cas, exactement k comparaisons.</p><p>Combien cet algorithme va-t-il utiliser, dans le pire des cas, de comparaisons sur une liste de taille 2n ?</p>",
       "reponse1": "k",
       "reponse2": "k + 1",
       "reponse3": "2k",
       "reponse4": "2k + 1",
       "answer": 2},
      
       {"question": "<p>La fonction suivante doit calculer la moyenne d’un tableau de nombres, passé en paramètre. Avec quelles expressions faut-il remplacer les points de suspension pour que la fonction soit correcte ?</p><div class=\"mycode\"><p>def moyenne(tableau):</p><p>    total = ...</p><p>    for valeur in tableau:</p><p>        total = total + valeur</p><p>    return total / ...</p></div></p>",
       "reponse1": "1 et (len(tableau) + 1)",
       "reponse2": "1 et len(tableau)",
       "reponse3": "0 et (len(tableau) + 1)",
       "reponse4": "0 et len(tableau)",
       "answer": 4},
    
       {"question": "<p>On exécute le script suivant :</p><div class=\"mycode\"><p>for i in range(n):</p><p>    for j in range(i):</p><p>        print(\"NSI\")</p></div><p>Combien de fois le mot NSI est-il affiché ?</p>",
       "reponse1": "n<sup>2</sup>",
       "reponse2": "(n + 1)<sup>2</sup>",
       "reponse3": "1 + 2 + ... + (n - 1)",
       "reponse4": "1 + 2 + ... + (n - 1) + n",
       "answer": 3},
 
      {"question": "<p>Quel code parmi les quatre proposés ci-dessous s'exécute-t-il en un temps linéaire en n (c'est-à-dire avec un temps d'exécution majoré par A x n  + B où A et B sont deux constantes) ?</p>",
       "reponse1": "<pre>for i in range(n//2):<br>    for j in range(i+1, n):<br>        print(\"hello\")</pre>",
       "reponse2": "for i in range(n):<br>&nbsp;&nbsp;&nbsp;&nbsp;print(\"hello\")",
       "reponse3": "<pre>L = [i+j for i in range(n) for j in range(n)]<br>    for x in L:<br>        print(\"hello\")",
       "reponse4": "<pre>for i in range(n//2):<br>    for j in range(n//2):<br>        print(\"hello\")",
       "answer": 2},
 
      {"question": "<p>On considère le code suivant, où n désigne un entier au moins égal à 2.</p><div class=\"mycode\"><p>p = 1</p><p>while p &lt; n:</p><p>    p = 2*p</p></div><p>Quel argument permet d'affirmer que son exécution termine à coup sûr ?</p>",
       "reponse1": "p est une puissance de 2",
       "reponse2": "toute boucle while termine",
       "reponse3": "les valeurs successives de p constituent une suite d'entiers positifs strictement croissante",
       "reponse4": "les valeurs successives de n – p constituent une suite d'entiers positifs strictement décroissante",
       "answer": 4},
 
      {"question": "<p>Soit T le temps nécessaire pour trier, à l'aide de l'algorithme du tri par insertion, une liste de 1000 nombres entiers. Quel est l'ordre de grandeur du temps nécessaire, avec le même algorithme, pour trier une liste de 10&nbsp;000 entiers, c'est-à-dire une liste dix fois plus grande ?</p>",
       "reponse1": "à peu près le même temps T",
       "reponse2": "environ 10 x T",
       "reponse3": "environ 100 x T",
       "reponse4": "environ T<sup>2</sup>",
       "answer": 3},
 
      {"question": "<p>À quelle catégorie appartient l’algorithme des k plus proches voisins ?</p>",
       "reponse1": "algorithmes de tri",
       "reponse2": "algorithmes gloutons",
       "reponse3": "algorithmes de recherche de chemins",
       "reponse4": "algorithmes de classification et d’apprentissage",
       "answer": 4}
  ]

  