{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenue sur Carnets.info","text":"<p>Ce site pr\u00e9sente quelques documents utilis\u00e9s dans le cadre de : - l'enseignement de NSI, en 1\u00e8re ou Terminale g\u00e9n\u00e9rale, - l'enseignement de SNT en 2nde, - ou en formation.</p>"},{"location":"bibliotheque/bibliotheque/","title":"Biblioth\u00e8que (en construction)","text":"Signification des ic\u00f4nes <p> : article  : livre  : vid\u00e9o  : niveau universitaire  : en anglais</p>"},{"location":"bibliotheque/bibliotheque/#algorithme","title":"Algorithme","text":""},{"location":"bibliotheque/bibliotheque/#algorithmes-gloutons","title":"Algorithmes gloutons","text":"<p> Algorithmes gloutons sur CultureMath</p>"},{"location":"bibliotheque/bibliotheque/#backtracking","title":"Backtracking","text":"<p> Le probl\u00e8me des 8 reines par Maxime Amblard sur Interstices</p>"},{"location":"bibliotheque/bibliotheque/#complexite","title":"Complexit\u00e9","text":"<p> (R\u00e9)apprendre \u00e0 multiplier avec la m\u00e9thode de Karatsuba par Nadia Lafreni\u00e8re sur Accromath  Complexit\u00e9 algorithmique par Sylvain Perifel</p> <p> Est-ce que P = NP ? par David Louapre.</p>"},{"location":"bibliotheque/bibliotheque/#l-systemes","title":"L-syst\u00e8mes","text":"<p> The algorithmic beauty of plants par Przemyslaw Prusinkiewicz et Aristid Lindenmayer</p> <p> L-syste\u0300mes: les e\u0301quations des plantes Par Adrien Lessard sur Accromath</p>"},{"location":"bibliotheque/bibliotheque/#tris","title":"Tris","text":"<p> Trier pour mieux comparer, Rep\u00e8res IREM n\u00b0117</p>"},{"location":"bibliotheque/bibliotheque/#machine","title":"Machine","text":"<p> Histoire des premiers ordinateurs par Bernard Ycart sur hist-math.fr</p> <p> Le mod\u00e8le d\u2019architecture de von Neumann par Sacha Krakowiak sur Interstices</p>"},{"location":"bibliotheque/bibliotheque/#langage","title":"Langage","text":""},{"location":"bibliotheque/bibliotheque/#information","title":"Information","text":""},{"location":"formation/debuter_folium/","title":"D\u00e9buter avec la biblioth\u00e8que folium en SNT","text":""},{"location":"formation/debuter_folium/#1-presentation","title":"1. Pr\u00e9sentation","text":"<p>Folium permet de traiter des donn\u00e9es en Python et de les visualiser sur une carte Leaflet interactive. Cette biblioth\u00e8que est disponible sur Basthon et Capytale.</p> <p>La documentation folium est consultable en ligne (en anglais) : https://python-visualization.github.io/folium/quickstart.html#Quickstart</p> <p>Un m\u00e9mo folium pr\u00e9sente dans un notebook l'essentiel des instructions pour cr\u00e9\u00e9er une carte, ajouter des marqueurs, des trac\u00e9s ou des formes.</p> <p>M\u00e9mo Folium (Basthon)  M\u00e9mo Folium (Capytale) </p>"},{"location":"formation/debuter_folium/#2-representer-des-donnees-issues-dun-fichier-csv","title":"2. Repr\u00e9senter des donn\u00e9es issues d'un fichier <code>csv</code>","text":"<p>Se connecter \u00e0 l'ENT puis ouvrir le notebook sur Capytale</p> <p>Les parcours du notebook permettent de d\u00e9couvrir la biblioth\u00e8que folium, de traiter les donn\u00e9es contenues dans des fichiers csv et de repr\u00e9senter les donn\u00e9es sur une carte.  </p> <p>Deux exemples sont d\u00e9velopp\u00e9s :</p> <ul> <li>placer sur une carte de France les communes dont le toponyme respecte quelques particularit\u00e9s,</li> <li>placer des seismes sur la planisph\u00e8re, selon leur magnitude.</li> </ul>"},{"location":"formation/debuter_ipythonblocks/","title":"D\u00e9buter avec la biblioth\u00e8que ipythonblocks en SNT","text":"<p><code>ipythonblocks</code> est un outil p\u00e9dagogique qui propose de cr\u00e9er des grilles de cases color\u00e9es. Il permet d'exp\u00e9rimenter les concepts de programmation Python et de voir imm\u00e9diatement les effets du code repr\u00e9sent\u00e9s de mani\u00e8re color\u00e9e. Il permet \u00e9galement d'aborder le concept d'image matricielle.</p>"},{"location":"formation/debuter_ipythonblocks/#0-generalites","title":"0. G\u00e9n\u00e9ralit\u00e9s","text":"<p>Le module <code>ipythonbocks</code> est disponible sur Basthon et Capytale. On peut aussi installer ce module pour l'utiliser localement : retrouver la derni\u00e8re version, les conseils d'installation sur https://pypi.org/project/ipythonblocks/</p>"},{"location":"formation/debuter_ipythonblocks/#1-grille-classe-blockgrid","title":"1. Grille : classe BlockGrid","text":"<p>ipythonblocks fournit une classe BlockGrid dont la repr\u00e9sentation est une grille. Pour cr\u00e9er (instancier) une grille, on appelle la m\u00e9thode <code>BlockGrid(width, height)</code> o\u00f9 :</p> <ul> <li><code>width</code> est un entier : nombre de blocs par ligne  </li> <li><code>height</code>est un entier : nombre de blocs par colonne  </li> </ul> <p>Des param\u00e8tres optionnels peuvent \u00eatre pr\u00e9cis\u00e9s :</p> <ul> <li><code>fill</code> est un triplet d'entiers, repr\u00e9sentant les niveaux de (rouge, vert, bleu) entre 0 et 255. Sa valeur par d\u00e9faut est (0, 0, 0), ce qui d\u00e9finit des blocs de couleur noire.  </li> <li><code>block_size</code> est un entier, repr\u00e9sentant la longueur des c\u00f4t\u00e9s des blocs de la grille en pixels. Sa valeur par d\u00e9faut est 20, et sa valeur minimale est 1.  </li> <li><code>lines_on</code> est un bool\u00e9en, pr\u00e9cisant si les lignes ente les blocs doivent \u00eatre affich\u00e9s ou non. Sa valeur par d\u00e9faut est True.</li> </ul> <pre><code>from ipythonblocks import BlockGrid\n</code></pre>"},{"location":"formation/debuter_ipythonblocks/#exemple-1","title":"Exemple 1","text":"<pre><code>grille_A = BlockGrid(12, 4)\ngrille_A\n</code></pre>"},{"location":"formation/debuter_ipythonblocks/#exemple-2","title":"Exemple 2","text":"<pre><code>grille_B = BlockGrid(5, 6, fill=(230, 92, 92))\ngrille_B\n</code></pre>"},{"location":"formation/debuter_ipythonblocks/#exemple-3","title":"Exemple 3","text":"<pre><code>grille_C = BlockGrid(30, 10, block_size=8, fill=(52, 52, 150))\ngrille_C\n</code></pre> <p>On peut modifier la couleur d'un \u00e9l\u00e9ment en le rep\u00e9rant \u00e0 l'aide d'un num\u00e9ro de ligne et d'un num\u00e9ro de colonne, et en lui affectant un triplet (R, G, B).</p> <pre><code>grille_C[0, 29] = (240, 52, 150) # cellule en haut \u00e0 droite\ngrille_C\n</code></pre> <p>En savoir plus : les cellules de classe Block</p>"},{"location":"formation/debuter_ipythonblocks/#2-parcours-snt-couleurs-pixels-image","title":"2. Parcours SNT : Couleurs - Pixels - Image","text":""},{"location":"formation/debuter_ipythonblocks/#sur-capytale","title":"Sur Capytale","text":"<p>Se connecter \u00e0 l'ENT puis ouvrir le notebook sur Capytale</p>"},{"location":"formation/debuter_ipythonblocks/#sur-basthon","title":"Sur Basthon","text":"<p>Ouvrir le notebook dans Basthon</p>"},{"location":"formation/debuter_microbit/","title":"D\u00e9buter avec la carte micro:bit en SNT","text":""},{"location":"formation/debuter_microbit/#1-quest-ce-quune-carte-microbit","title":"1. Qu'est-ce qu'une carte micro:bit ?","text":"<p>La carte BBC micro:bit est une carte micro-contr\u00f4leur de 5 cm sur 4 cm, qui a \u00e9t\u00e9 con\u00e7ue \u2014 notamment par la BBC \u2014 dans un objectif p\u00e9dagogique. Elle se programme \u00e0 l'aide de diff\u00e9rentes interfaces et diff\u00e9rents langages, permettant \u00e0 des \u00e9l\u00e8ves de tous niveaux d\u2019aborder la robotique et d'interagir avec le monde r\u00e9el.</p> <p> </p>"},{"location":"formation/debuter_microbit/#2-description-des-composants","title":"2. Description des composants","text":"Composants visibles \u00e0 l'avant : Num\u00e9ro Description Version 1 Version 2 1 deux boutons poussoirs A et B programmables x x 2 25 LEDs rouges, programmables pour afficher du texte qui d\u00e9file ou des images ; elles sont aussi des capteurs de lumi\u00e8re x x 3 des broches de connexion x x 4 une broche d'alimentation 3V x x 5 une broche de masse x x 6 un logo tactile x 7 une LED, t\u00e9moin lumineux du microphone x Composants visibles \u00e0 l'arri\u00e8re : Num\u00e9ro Description Version 1 Version 2 1 une antenne radio et bluetooth x x 2 un micro-processeur et capteur de temp\u00e9rature x x 3 un magn\u00e9tom\u00e8tre (boussole) permettant de mesurer des champs magn\u00e9tiques x x 4 un acc\u00e9l\u00e9rom\u00e8tre permettant de capter des mouvements en trois dimensions x x 5 des broches de connexion pour contr\u00f4ler des composants externes x x 6 un port micro-USB permettant d'alimenter la carte et de transf\u00e9rer des programmes x x 7 une led, t\u00e9moin lumineux pour l'alimentation  ou le t\u00e9l\u00e9chargement de programme x 8 un bouton de r\u00e9initialisation x 9 un connecteur d'alimentation (2 piles AAA - 3V) x x 10 une puce d'interface USB x x 11 un haut-parleur x 12 un microphone x 13 une LED rouge,  t\u00e9moin d'alimentation x 14 une LED jaune, t\u00e9moin de communication USB x 15 un bouton de r\u00e9initialisation et de marche/arr\u00eat x"},{"location":"formation/debuter_microbit/#3-lediteur-mu","title":"3. L'\u00e9diteur Mu","text":"<p>Ouvrir l'\u00e9diteur de code Mu. Cliquer sur   et choisir micro:bit. Ce logiciel va permettre de saisir les programmes en python, de les v\u00e9rifier et de les envoyer (flasher) sur la carte micro:bit.</p> <p>Python poss\u00e8de de nombreuses biblioth\u00e8ques sp\u00e9cialis\u00e9es. Pour contr\u00f4ler la carte micro:bit avec Python, il faut importer la biblioth\u00e8que <code>microbit</code> avec cette ligne au d\u00e9but de chaque programme : <pre><code>from microbit import *\n</code></pre></p> En savoir plus sur la carte et les \u00e9diteurs <p>- La carte : approfondissement - Les diff\u00e9rents \u00e9diteurs</p>"},{"location":"formation/debuter_microbit/#4-parcours-de-decouverte","title":"4. Parcours de d\u00e9couverte","text":"<p>Info</p> <p>Le parcours permet, \u00e0 travers quatre exercices,  de d\u00e9couvrir les \u00e9l\u00e9ments suivants :</p> <ul> <li>les instructions d'affichage sur la carte micro:bit</li> <li>les instructions usuelles de programmation suivantes :<ul> <li>la boucle non born\u00e9e (<code>while</code>) et la boucle infinie (<code>while True</code>)</li> <li>l'instruction conditionnelle (<code>if ... elif ... else ...</code>)</li> </ul> </li> <li>l'import de fonction(s) depuis un module</li> <li>la s\u00e9lection al\u00e9atoire avec la fonction <code>choice</code></li> <li>les instructions permettant d'utiliser les boutons</li> <li>les instructions de communication par radio</li> </ul> <p>Le parcours permet notamment de r\u00e9aliser les deux programmes permettant \u00e0 deux cartes micro:bit de communiquer par radio, pour servir de boitier de vote.</p>"},{"location":"formation/debuter_microbit/#exercice-1-afficher-un-texte-une-image-utiliser-les-boutons","title":"Exercice 1. Afficher un texte, une image - Utiliser les boutons","text":"<ol> <li> <p>(a) Recopier le code suivant et le flasher sur la carte : <pre><code>from microbit import *\ndisplay.scroll(\"Hello, World!\")\n</code></pre> (b) Que r\u00e9alise la fonction <code>display.scroll</code> ? (c) Modifier le message dans le programme et flasher \u00e0 nouveau le programme sur la carte.</p> </li> <li> <p>(a) Remplacer le code pr\u00e9c\u00e9dent par : <pre><code>from microbit import *\ndisplay.show(Image.HAPPY)\n</code></pre> (b) Que r\u00e9alise la fonction <code>display.show</code>? (c) La liste des images disponibles se trouve sur ce site : https://microbit-micropython.readthedocs.io/fr/latest/tutorials/images.html En choisir quelques-unes et les afficher sur la carte.</p> </li> <li> <p>(a) La carte poss\u00e8de deux boutons A et B. Recopier le code ci-dessous. Anticiper le comportement de la carte lorsqu'on ex\u00e9cute ce programme, puis v\u00e9rifier en l'ex\u00e9cutant. <pre><code>from microbit import *\nwhile True:\n    if button_a.is_pressed() and button_b.is_pressed():\n        display.show(\"AB\")\n    elif button_a.is_pressed():\n        display.show(\"A\")\n    elif button_b.is_pressed():\n        display.show(\"B\")\n</code></pre> Remarque : La condition <code>while True</code> \u00e9tant toujours v\u00e9rifi\u00e9e, la boucle s\u2019ex\u00e9cute ind\u00e9finiment. Le programme est ainsi \u00e0 l\u2019\u00e9coute des \u00e9v\u00e9nements, ici l\u2019appui sur les boutons. (b) L\u2019instruction <code>display.clear()</code> permet d\u2019\u00e9teindre les pixels de l\u2019\u00e9cran.  Utiliser les instructions vues pr\u00e9c\u00e9demment pour r\u00e9aliser un badge de vote, c\u2019est-\u00e0-dire que :  </p> <ul> <li>L\u2019appui sur le bouton [A] affiche l\u2019image <code>Image.YES</code> </li> <li>Un appui sur le bouton [B] affiche l\u2019image <code>Image.NO</code> </li> <li>Un appui simultan\u00e9 sur [A]+[B] efface l\u2019\u00e9cran.</li> </ul> </li> </ol>"},{"location":"formation/debuter_microbit/#exercice-2-utiliser-des-boucles","title":"Exercice 2. Utiliser des boucles","text":"<ol> <li> <p>(a) Que r\u00e9alise le programme ci-dessous lorsqu'on l'ex\u00e9cute sur la carte ? <pre><code>from microbit import *\nwhile True :\n    display.show(1)\n    sleep(500)\n    display.clear()\n    sleep(500)\n</code></pre> (b) Saisir et flasher le code et v\u00e9rifier.</p> </li> <li> <p>En s'inspirant du programme pr\u00e9c\u00e9dent, \u00e9crire un programme qui permet de faire clignoter une image choisie parmi celles disponibles.  </p> </li> <li>Que r\u00e9alise le programme ci-dessous lorsqu'on l'ex\u00e9cute sur la carte ? <pre><code>from microbit import *\nfor k in range(10) :\n    display.show(k)\n    sleep(500)\n</code></pre> Rappel : L\u2019instruction <code>for k in range(n)</code> avec n entier, signifie que k prend pour valeur 0 puis 1 puis 2 etc, jusqu\u2019\u00e0 n - 1 inclus.  </li> <li>Modifier le programme pour que les nombres 0 \u00e0 9 d\u00e9filent ind\u00e9finiment.</li> </ol>"},{"location":"formation/debuter_microbit/#exercice-3-creation-dimages-choix-aleatoire","title":"Exercice 3. Cr\u00e9ation d'images - Choix al\u00e9atoire","text":"<p>Le but de cet exercice est d\u2019\u00e9crire un programme qui, lorsqu\u2019on appuie sur le bouton A de la carte, simule le lancer d\u2019un d\u00e9 et affiche le r\u00e9sultat sous la forme d\u2019une face de d\u00e9.</p> <ol> <li>On a vu qu\u2019il existe des images \u00e0 disposition, mais on peut aussi cr\u00e9er sa propre image en indiquant l\u2019intensit\u00e9 de chaque pixel \u00e0 l\u2019aide d\u2019un entier entre 0 (pixel \u00e9teint) et 9 (pixel d\u2019intensit\u00e9 maximale). On peut pr\u00e9ciser les valeurs soit ligne par ligne, soit en une seule ligne.  Reproduire et ex\u00e9cuter ce programme : <pre><code>from microbit import *\neclat1 = Image(\"00300:\"\n               \"03630:\"\n               \"36963:\"\n               \"03630:\"\n               \"00300\")\neclat2 = Image(\"00300:03330:33333:03330:00300\")\nwhile True:\n    if button_a.is_pressed():\n        display.show(eclat1)\n        sleep(1000)\n        display.show(eclat2)\n</code></pre></li> <li>Cr\u00e9er les six images permettant de repr\u00e9senter les six faces du d\u00e9 en compl\u00e9tant le code ci-dessous. <pre><code>from microbit import *\nun  = Image(\"00000:00000:00900:00000:00000\")\ndeux = Image(\".....\")\ntrois  = Image(\".....\")\nquatre = Image(\".....\")\ncinq  = Image(\".....\")\nsix = Image(\".....\")\n</code></pre></li> <li>Pour choisir une image parmi les six images repr\u00e9sentant une face du d\u00e9, on utilise la fonction <code>choice</code> du module <code>random</code> qui permet de choisir au hasard un \u00e9l\u00e9ment dans une liste : <pre><code>from microbit import *\nfrom random import choice\nun  = Image(\"00000:00000:00900:00000:00000\")\ndeux = Image(\".....\")\ntrois  = Image(\".....\")\nquatre = Image(\".....\")\ncinq  = Image(\".....\")\nsix = Image(\".....\")\n# on d\u00e9finit la liste contenant le nom des images que l'on a d\u00e9finit pr\u00e9c\u00e9demment\nliste_faces = [un, deux, trois, quatre, cinq, six]\nface = choice(liste_faces)\ndisplay.show(face)\n</code></pre> Ex\u00e9cuter plusieurs fois le programme apr\u00e8s l\u2019avoir compl\u00e9t\u00e9.</li> <li>Compl\u00e9ter le programme  pour qu'il permette de relancer le d\u00e9 lorsqu\u2019on appuie sur le bouton A de la carte. (Voir l\u2019exercice 1.)</li> </ol>"},{"location":"formation/debuter_microbit/#exercice-4-radio","title":"Exercice 4. Radio","text":"<p>L\u2019objectif de cet exercice est de finaliser le badge de vote, commenc\u00e9 \u00e0 l\u2019exercice 1. On utilise la fonctionnalit\u00e9 radio sur chaque badge de vote, et une nouvelle carte va r\u00e9ceptionner les votes.</p> <p>Sur les cartes de vote : <pre><code>from microbit import *\nimport radio\nradio.on()\nvote_ok = True # cette variable vaut True tant qu'aucun vote n'a \u00e9t\u00e9 envoy\u00e9\nwhile vote_ok:\n    display.show(Image.SQUARE_SMALL)\n    sleep(100)\n    if button_a.is_pressed():\n        display.show(Image.YES)\n    elif button_b.is_pressed():\n        display.show(Image.NO)\n    if button_a.was_pressed():\n        radio.send(\"A\")\n        vote_ok = False\n    elif button_b.was_pressed():\n        radio.send(\"B\")\n        vote_ok = False\n</code></pre></p> <p>Sur la carte r\u00e9ceptrice : <pre><code>from microbit import *\nimport radio\nradio.on()\nvoix_A = 0\nvoix_B = 0\nwhile True:\n    message = radio.receive()\n    if message =='A':\n        voix_A = voix_A + 1\n    elif message =='B':\n        voix_B = voix_B + 1\n</code></pre></p> <p>Reproduire ces programmes et compl\u00e9ter le programme de la carte r\u00e9ceptrice pour que lors de l\u2019appui sur le bouton A elle affiche le nombre de votes OUI, et lors de l\u2019appui sur le bouton B elle affiche le nombre de votes NON.</p> <p>Ce programme a utilis\u00e9 :</p> <p><code>import radio</code> pour importer le module radio <code>radio.on()</code>pour activer la fonctionnalit\u00e9 radio (\u00e9mission et/ou r\u00e9ception)</p> <p><code>radio.send(\"A\")</code> pour envoyer le message \u2019A\u2019 \u00e0 toutes les cartes qui \u00e9coutent</p> <p><code>radio.receive()</code> pour r\u00e9ceptionner les messages \u00e9mis.</p> <p>Si n\u00e9cessaire, on peut configurer la carte sur un groupe pr\u00e9cis, pour que seules les cartes d\u2019un m\u00eame groupe puissent communiquer. La valeur est comprise entre 0 et 255 : par exemple, <code>radio.config(group=7)</code>.</p> <p>En savoir plus sur la fonctionnalit\u00e9 radio</p> Approfondissement <p>Parcours : Atteindre une cible sur un plan inclin\u00e9</p>"},{"location":"formation/debuter_pil/","title":"D\u00e9buter avec la biblioth\u00e8que PIL en SNT","text":""},{"location":"formation/debuter_pil/#1-le-module-pillow","title":"1. Le module Pil(low)","text":""},{"location":"formation/debuter_pil/#presentation","title":"Pr\u00e9sentation","text":"<p>Pillow est une biblioth\u00e8que de traitement d'image, successeur du projet PIL (Python Imaging Library). Elle est con\u00e7ue de mani\u00e8re \u00e0 offrir un acc\u00e8s rapide aux donn\u00e9es contenues dans une image,  et offre un support pour diff\u00e9rents formats de fichiers tels que PPM, PNG, JPEG, GIF, TIFF et BMP.  Pillow dispose de capacit\u00e9s de traitement d'images relativement puissantes, et a pour but d'offrir une solide base \u00e0 toute application g\u00e9n\u00e9rale de traitement d'images.</p> <p>Le programme doit commencer par <code>from PIL import Image</code>  pour importer les fonctions du module, qui seront ensuite pr\u00e9fix\u00e9es par <code>Image</code>.  </p>"},{"location":"formation/debuter_pil/#les-attributs-dune-image","title":"Les attributs d'une image","text":"<p>La biblioth\u00e8que utilise le principe d'images matricielles c'est-\u00e0-dire que chaque \u00e9l\u00e9ment de la matrice repr\u00e9sente un point avec une couleur associ\u00e9e (= un pixel) selon diff\u00e9rents modes possibles.  </p> <p>Les modes les plus connus sont :</p> <ul> <li>L (nuances de gris),</li> <li>RGB (couleur)</li> <li>et RGBA (couleur et transparence),</li> </ul> <p>qui repr\u00e9sentent respectivement les pixels sur 8 bits, 3x8 bits et 4x8 bits.</p> <p>On ouvre un fichier avec la fonction <code>open(nom_fichier)</code>  o\u00f9  <code>nom_fichier</code> est le nom complet du fichier (nom et extension) \u00e9crit entre guillemets ; cette instruction renvoie un objet <code>Image</code>  contenant les donn\u00e9es du fichier que l'on pourra ensuite manipuler.</p> <p>Voici quelques attributs d'un tel objet :</p> <ul> <li><code>format</code> : indique le format de l'image PPM, PNG, JPEG, GIF, TIFF et BMP.</li> <li><code>mode</code> : indique le mode L, RGB, RGBA</li> <li><code>size</code> : indique la taille de l'image sous la forme d'un couple (largeur, hauteur)</li> <li><code>width</code> : indique le nombre de pixels en largeur</li> <li><code>height</code> : indique le nombre de pixels en hauteur</li> </ul> <p>Exemple</p> Le codeLe r\u00e9sultat <p>En utilisant l'image sous le titre <pre><code>from PIL import Image\n\nimg = Image.open(\"pillow.png\")\nprint(\"le format est\", img.format)\nprint(\"le mode est\", img.mode)\nlargeur, hauteur = img.size\nprint(\"le nombre de pixels en largeur est\", largeur)\nprint(\"le nombre de pixels en hauteur est\", hauteur)\n</code></pre></p> <pre><code>le format est PNG\nle mode est RGBA\nle nombre de pixels en largeur est 160\nle nombre de pixels en hauteur est 161\n</code></pre>"},{"location":"formation/debuter_pil/#methodes-disponibles","title":"M\u00e9thodes disponibles","text":"<p>Les m\u00e9thodes \u00e0 appliquer aux objets <code>Image</code> sont :</p> <ul> <li><code>close()</code> ferme l'image charg\u00e9e en m\u00e9moire ;</li> <li><code>show()</code> afficher l'image dans un outil externe ;</li> <li><code>save(nom_fichier, format)</code> sauvegarde l'image dans le format sp\u00e9cifi\u00e9 par l'extension ;</li> <li><code>getpixel(x, y)</code>  r\u00e9cup\u00e8re les attributs du pixel \u00e0 la position  <code>x, y</code> ;</li> <li><code>putpixel((x, y), (r, g, b))</code>  modifie les attributs du pixel \u00e0 la position donn\u00e9e ; par exemple, ici pour un mode RGB.</li> </ul> Remarque <p>Les coordonn\u00e9es d'un pixel sont d\u00e9finies dans un rep\u00e8re o\u00f9 l'origine est le point en haut \u00e0 gauche, l'axe des abscisses est orient\u00e9 dans le sens gauche-droite et l'axe des ordonn\u00e9es dans le sens haut-bas.</p> <p></p> <p>Exemple</p> Le codeLe r\u00e9sultat <pre><code>from PIL import Image\n\nimg = Image.open(\"pillow.png\")\nimg.show()\n\nprint(\"le pixel (50, 50) est cod\u00e9 par :\", img.getpixel((50, 50)))\n\nfor x in range(60, 101):\n    for y in range(60, 101):\n        img.putpixel((x, y), (180, 180, 180, 255))\nimg.show()\n# on ferme !\nimg.close()\n</code></pre> <p></p>"},{"location":"formation/debuter_pil/#fonctions-de-traitement-dimage-predefinies","title":"Fonctions de traitement d'image pr\u00e9d\u00e9finies","text":"<p>Il existe d'autres fonctions du module <code>Image</code> qui permettent de faire du traitement d'images automatiquement :</p> <ul> <li><code>copy()</code> : permet de faire une copie de l'image</li> <li><code>convert(\"L\")</code> : permet de convertir en nuances de gris</li> <li><code>convert(\"RGB\")</code> : permet de convertir en RGB</li> <li><code>convert(\"1\")</code> : permet de  convertir en noir et blanc</li> <li><code>resize((L, H))</code> : permet de modifier la taille de l'image</li> <li><code>rotate(angle)</code> : permet de faire une rotation de angle dans le sens anti-horaire</li> </ul> <p>Exemple</p> Le codeLe r\u00e9sultat <pre><code>from PIL import Image\n\nimg = Image.open(\"pillow.png\")\nlargeur, hauteur = img.size\n\nimgNB = img.convert(\"L\")\nimgNB.show()\n\nimgPetit = img.resize((largeur // 2, hauteur // 2))\nimgPetit.show()\n\nimgR = img.rotate(45)\nimgR.show()\n\n# on ferme !\nimg.close()\n</code></pre> <p></p> En savoir plus <p>En savoir plus sur le module Image</p>"},{"location":"formation/debuter_pil/#2-parcours-manipulation-dimages","title":"2. Parcours Manipulation d'images","text":""},{"location":"formation/debuter_pil/#sur-capytale","title":"Sur Capytale","text":"<p>Se connecter \u00e0 l'ENT puis ouvrir le notebook sur Capytale</p>"},{"location":"formation/debuter_pil/#sur-basthon","title":"Sur Basthon","text":"<p>Ouvrir le notebook dans Basthon</p>"},{"location":"formation/debuter_turtle/","title":"D\u00e9buter avec Turtle en SNT","text":""},{"location":"formation/debuter_turtle/#1-utiliser-le-parcours-algorea","title":"1. Utiliser le parcours Algor\u00e9a","text":"<p>Le site Algor\u00e9a comporte un ensemble de parcours SNT destin\u00e9s \u00e0 \u00eatre utilis\u00e9s en cours par enseignants et \u00e9l\u00e8ves. Certains parcours sont finalis\u00e9s, d'autres sont en cours de d\u00e9veloppement. Le site est r\u00e9alis\u00e9 par une \u00e9quipe de France IOI  et  s'appuie en partie sur les vid\u00e9os du MOOC SNT et les exercices du Castor informatique.</p> <p>L\u2019un des parcours propose une initiation \u00e0 Python gr\u00e2ce \u00e0 une biblioth\u00e8que graphique intitul\u00e9e Turtle. On code les d\u00e9placements d'une tortue qui laisse une trace de son passage. Dans ces parcours, la tortue doit r\u00e9aliser des motifs impos\u00e9s.</p> <p>La programmation se fait en ligne dans une interface qui \u00e9value le code produit par les \u00e9l\u00e8ves. L'objectif est de proposer aux \u00e9l\u00e8ves un contexte d'apprentissage leur permettant de s'approprier les premi\u00e8res notions de Python, de fa\u00e7on progressive, avec une \u00e9valuation rapide de leurs productions pour pouvoir r\u00e9agir face aux erreurs et les corriger.</p> <p>L'acc\u00e8s est possible sans connexion pour  enseignants et \u00e9l\u00e8ves. Mais si l'enseignant se cr\u00e9e un compte sur le site, il peut administrer un groupe, que les \u00e9l\u00e8ves rejoignent avec un code.  En demandant aux \u00e9l\u00e8ves de se cr\u00e9er un pseudo identifiable par l'enseignant, celui-ci a alors une visibilit\u00e9 sur le travail des \u00e9l\u00e8ves, et les \u00e9l\u00e8ves conservent leur travail.</p> <p>La s\u00e9lection suivante propose quelques exercices que l'on peut proposer \u00e0 tous les \u00e9l\u00e8ves.</p> <p>Rejoindre le parcours.algorea &gt; SNT &gt; Quelques bases en programmation &gt; En python</p> Instructions du module Turtle utilis\u00e9es dans ces parcours <p>Le programme doit commencer par la ligne :</p> <p><pre><code>from turtle import *\n</code></pre> pour importer les fonctions li\u00e9es aux d\u00e9placements de la tortue.</p> <p>Les fonctions disponibles pour contr\u00f4ler la tortue sont :</p> <ul> <li><code>forward()</code> : la tortue avance du nombre de pas indiqu\u00e9 en param\u00e8tre.  Exemple : <code>forward(50)</code></li> <li><code>backward()</code>: la tortue recule du nombre de pas indiqu\u00e9 en param\u00e8tre.  Exemple : <code>backward(50)</code></li> <li><code>left()</code>: la tortue tourne vers la gauche du nombre de degr\u00e9s indiqu\u00e9 en param\u00e8tre.  Exemple : <code>left(90)</code></li> <li><code>right()</code>: la tortue tourne vers la droite du nombre de degr\u00e9s indiqu\u00e9 en param\u00e8tre.  Exemple : <code>right(90)</code></li> </ul> <p>Boucle born\u00e9e : Exemple : <pre><code>for loop in range(4):\n    forward(200)\n    left(90)\n</code></pre> Cette boucle permet de r\u00e9p\u00e9ter 4 fois : \"avancer de 200 pas et tourner de 90\u00b0 \u00e0 gauche\".  </p> <p>L'indentation (d\u00e9calage \u00e0 droite de 4 espaces) permet de d\u00e9limiter le bloc de contenu de la boucle : ce qui est indent\u00e9 sera r\u00e9p\u00e9t\u00e9 4 fois. Attention au double point en fin de ligne pour d\u00e9buter un bloc indent\u00e9.</p> <p>Affectation d'une valeur \u00e0 une variable : <pre><code>nom_variable = valeur_variable\n</code></pre> exemple : <code>longueur = 50</code> </p> <p>Ajout d'une valeur \u00e0 une variable : <pre><code>nom_variable = nom_variable + valeur_ajoutee\n</code></pre> exemple : <code>longueur = longueur + 10</code></p>"},{"location":"formation/debuter_turtle/#parcours-boucles-bornees","title":"Parcours boucles born\u00e9es","text":"<p>Parcours boucles born\u00e9es, exercices  et </p> <p> </p> Aide pour la version  <p>Copier-coller le code suivant pour l'exercice .  Il ne s'agit pas de la solution, mais ce code en est proche. <pre><code>from turtle import *\nfor loop in range(4) :\n    forward(100)\n    left(90)\n</code></pre> Ex\u00e9cuter ce code, constater le probl\u00e8me et apporter les corrections n\u00e9cessaires.</p>"},{"location":"formation/debuter_turtle/#parcours-boucles-imbriquees","title":"Parcours boucles imbriqu\u00e9es","text":"<p>Parcours boucles imbriqu\u00e9es, exercice  </p> <p></p> Aide pour la version  <p>Copier-coller le code suivant pour l'exercice .  Il ne s'agit pas de la solution, mais ce code en est proche. <pre><code>from turtle import *\nfor loop1 in range(2):\n    for loop2 in range(4):\n        forward(100)\n        left(90)\n    left(165)\n</code></pre> Ex\u00e9cuter ce code, constater le probl\u00e8me et apporter les corrections n\u00e9cessaires.</p>"},{"location":"formation/debuter_turtle/#parcours-variables","title":"Parcours variables","text":"<p>Parcours variables, exercices  et </p> <p> </p> Aide pour la version  <p>Copier-coller le code suivant pour l'exercice .  Il ne s'agit pas de la solution, mais ce code en est proche. <pre><code>from turtle import *\nlongueur = 50\nfor nb_segment in range(4):\n    forward(longueur)\n    left(90)\n    longueur = longueur + 5\n</code></pre> Ex\u00e9cuter ce code, constater le probl\u00e8me et apporter les corrections n\u00e9cessaires.</p>"},{"location":"formation/debuter_turtle/#2-utiliser-turtle-dans-basthon","title":"2. Utiliser Turtle dans Basthon","text":"<p>L'interface de programmation de Basthon.fr (ou Capytale - code  de l'activit\u00e9 9953-374398) permet de r\u00e9aliser ses propres programmes en utilisant le module Turtle.</p> <p>Le programme doit commencer par l\u2019instruction : <pre><code>from turtle import *\n</code></pre> et finir par l\u2019instruction : <pre><code>done()\n</code></pre></p> <p>Les instructions sp\u00e9cifiques \u00e0 Turtle sont mises \u00e0 disposition dans les deux documents ci-dessous :</p> <p>M\u00e9mo de transition Scratch  - Python  (pdf) M\u00e9mo Turtle  (notebook)</p>"},{"location":"formation/debuter_turtle/#une-fonction-dans-un-trace","title":"Une fonction dans un trac\u00e9","text":""},{"location":"formation/debuter_turtle/#fonction-sans-parametre","title":"Fonction sans param\u00e8tre","text":"<p>Voici le code d\u2019un trac\u00e9 utilisant une fonction.</p> <pre><code>from turtle import *\npencolor(\"green\")\nshape(\"triangle\")\n\ndef figure():\n    for cote in range(4) :\n        forward(100)\n        left(90)\n\nfor etape in range(5) :\n    figure()\n    right(72)\n\ndone()\n</code></pre> <p>Le bloc <pre><code>def figure():\n    for cote in range(4) :\n        forward(100)\n        left(90)\n</code></pre> d\u00e9finit une fonction, intitul\u00e9e <code>figure</code>, et qui comporte 3 lignes d\u2019instructions.  </p> <p>Question</p> <p>Cette fonction contient les instructions pour tracer une figure. Laquelle ?</p> <p>Mais si on ex\u00e9cute ce code seul, aucun trac\u00e9 ne se produit... Cependant,  \u00e0 tout endroit du programme, l\u2019instruction <code>figure()</code> d\u00e9clenchera l\u2019ex\u00e9cution de toutes les instructions de la fonction <code>figure()</code>. On parle d\u2019appel de la fonction.</p> <p>Question</p> <p>Reproduire le code complet dans Basthon.fr et observer le r\u00e9sultat produit.</p> <p>Combien de fois la fonction <code>figure()</code> est-elle ex\u00e9cut\u00e9e ?</p>"},{"location":"formation/debuter_turtle/#fonction-avec-parametre","title":"Fonction avec param\u00e8tre","text":"<p>La figure produite ci-dessus a toujours les m\u00eames caract\u00e9ristiques. On peut choisir de donner \u00e0 la fonction des param\u00e8tres qui auront une influence sur la figure trac\u00e9e.</p> <p>Question</p> <p>Modifier ainsi le code de la fonction <code>figure()</code>: <pre><code>def figure(longueur):\n    for cote in range(4) :\n        forward(longueur)\n        left(90)\n</code></pre></p> <p>Question</p> <p>D\u00e9sormais, la fonction <code>figure()</code> d\u00e9pend du param\u00e8tre <code>longueur</code>. Quelle est l\u2019influence de ce param\u00e8tre sur le trac\u00e9 ?</p> <p>Pour appeler la fonction, il faut d\u00e9sormais donner une valeur \u00e0 ce param\u00e8tre : <code>figure(100)</code> signifie qu\u2019on appelle la fonction <code>figure()</code> en donnant \u00e0 <code>longueur</code>  la valeur 100.</p> <p>Question</p> <p>Modifier le code du reste du programme pour obtenir le m\u00eame trac\u00e9 que pr\u00e9c\u00e9demment, avec la fonction modifi\u00e9e.</p> <p>Question</p> <p>Modifier le code du reste du programme pour obtenir un trac\u00e9 deux fois plus petit que pr\u00e9c\u00e9demment, avec la fonction modifi\u00e9e.</p> <p>Question</p> <p>Remplacer les 4 derni\u00e8res lignes du programme par celles-ci : <pre><code>for etape in range(5) :\n    figure(100)\n    figure(50)\n    right(72)\ndone()\n</code></pre></p> <p>Question</p> <p>Combien de fois la fonction <code>figure()</code> est-elle appel\u00e9e au cours de l\u2019ex\u00e9cution de ce programme ?</p> <p>Question</p> <p>Modifier le code de la fonction <code>figure()</code> pour obtenir le r\u00e9sultat suivant, sans changer les autres lignes du programme : </p> <p>Question</p> <p>Que r\u00e9alise le code suivant ? <pre><code>from turtle import *\nshape(\"triangle\")\n\ndef figure(longueur):\n    for etape in range(3) :\n        forward(longueur)\n        left(120)\n\nfor etape in range(10) :\n    if etape % 2 == 0:\n        pencolor(\"red\")\n        figure(100)   \n    else :       \n        pencolor(\"blue\")       \n        figure(50)   \n    right(36)\ndone()\n</code></pre></p>"},{"location":"formation/maths_p5/","title":"Cr\u00e9er des animations en math\u00e9matiques avec p5","text":"Titre du notebook Description Pr\u00e9sentation pr\u00e9sentation de p5 Parcours J1 : cr\u00e9er des animations utilisant des math\u00e9matiques Survol, projection, intersection, mouvement"},{"location":"formation/ywc_carte/","title":"Pr\u00e9sentation de la carte micro:bit","text":""},{"location":"formation/ywc_carte/#1-quest-ce-quune-carte-microbit","title":"1. Qu'est-ce qu'une carte micro:bit ?","text":"<p>La carte BBC micro:bit est une carte micro-contr\u00f4leur de 5 cm sur 4 cm, qui a \u00e9t\u00e9 con\u00e7ue \u2014 notamment par la BBC \u2014 dans un objectif p\u00e9dagogique. Elle se programme \u00e0 l'aide de diff\u00e9rentes interfaces et diff\u00e9rents langages, permettant \u00e0 des \u00e9l\u00e8ves de tous niveaux d\u2019aborder la robotique et d'interagir avec le monde r\u00e9el.</p> <p> </p>"},{"location":"formation/ywc_carte/#2-description-des-composants","title":"2. Description des composants","text":"Composants visibles \u00e0 l'avant : Num\u00e9ro Description Version 1 Version 2 1 deux boutons poussoirs A et B programmables x x 2 25 LEDs rouges, programmables pour afficher du texte qui d\u00e9file ou des images ; elles sont aussi des capteurs de lumi\u00e8re x x 3 des broches de connexion x x 4 une broche d'alimentation 3V x x 5 une broche de masse x x 6 un logo tactile x 7 une LED, t\u00e9moin lumineux du microphone x Composants visibles \u00e0 l'arri\u00e8re : Num\u00e9ro Description Version 1 Version 2 1 une antenne radio et bluetooth x x 2 un micro-processeur et capteur de temp\u00e9rature x x 3 un magn\u00e9tom\u00e8tre (boussole) permettant de mesurer des champs magn\u00e9tiques x x 4 un acc\u00e9l\u00e9rom\u00e8tre permettant de capter des mouvements en trois dimensions x x 5 des broches de connexion pour contr\u00f4ler des composants externes x x 6 un port micro-USB permettant d'alimenter la carte et de transf\u00e9rer des programmes x x 7 une led, t\u00e9moin lumineux pour l'alimentation  ou le t\u00e9l\u00e9chargement de programme x 8 un bouton de r\u00e9initialisation x 9 un connecteur d'alimentation (2 piles AAA - 3V) x x 10 une puce d'interface USB x x 11 un haut-parleur x 12 un microphone x 13 une LED rouge,  t\u00e9moin d'alimentation x 14 une LED jaune, t\u00e9moin de communication USB x 15 un bouton de r\u00e9initialisation et de marche/arr\u00eat x"},{"location":"formation/ywc_carte/#3-lediteur-mu","title":"3. L'\u00e9diteur Mu","text":"<p>Ouvrir l'\u00e9diteur de code Mu. Cliquer sur   et choisir micro:bit. Ce logiciel va permettre de saisir les programmes en python, de les v\u00e9rifier et de les envoyer (flasher) sur la carte micro:bit.</p> <p>Python poss\u00e8de de nombreuses biblioth\u00e8ques sp\u00e9cialis\u00e9es. Pour contr\u00f4ler la carte micro:bit avec Python, il faut importer la biblioth\u00e8que <code>microbit</code> avec cette ligne au d\u00e9but de chaque programme : <pre><code>from microbit import *\n</code></pre></p> En savoir plus sur la carte et les \u00e9diteurs <p>- La carte : approfondissement - Les diff\u00e9rents \u00e9diteurs</p>"},{"location":"formation/ywc_carte/#4-parcours-de-decouverte","title":"4. Parcours de d\u00e9couverte","text":"<p>Info</p> <p>Le parcours permet, \u00e0 travers quatre exercices,  de d\u00e9couvrir les \u00e9l\u00e9ments suivants :</p> <ul> <li>les instructions d'affichage sur la carte micro:bit</li> <li>les instructions usuelles de programmation suivantes :<ul> <li>la boucle non born\u00e9e (<code>while</code>) et la boucle infinie (<code>while True</code>)</li> <li>la boucle born\u00e9e (<code>for ... in range(...)</code>)</li> <li>l'instruction conditionnelle (<code>if ... elif ... else ...</code>)</li> </ul> </li> <li>l'import de fonction(s) depuis un module</li> <li>la s\u00e9lection al\u00e9atoire avec la fonction <code>choice</code></li> <li>les instructions permettant d'utiliser les boutons</li> <li>les instructions de communication par radio</li> </ul> <p>Le parcours permet notamment de r\u00e9aliser les deux programmes permettant \u00e0 deux cartes micro:bit de communiquer par radio, pour servir de boitier de vote.</p>"},{"location":"formation/ywc_carte/#exercice-1-afficher-un-texte-une-image","title":"Exercice 1. Afficher un texte, une image","text":"<ol> <li> <p>(a) Recopier le code suivant et le flasher sur la carte : <pre><code>from microbit import *\ndisplay.scroll(\"Hello, World!\")\n</code></pre> (b) Que r\u00e9alise la fonction <code>display.scroll</code> ? (c) Modifier le message dans le programme et flasher \u00e0 nouveau le programme sur la carte.</p> </li> <li> <p>(a) Remplacer le code pr\u00e9c\u00e9dent par : <pre><code>from microbit import *\ndisplay.show(Image.HAPPY)\n</code></pre> (b) Que r\u00e9alise la fonction <code>display.show</code>? (c) La liste des images disponibles se trouve sur ce site : https://microbit-micropython.readthedocs.io/fr/latest/tutorials/images.html En choisir quelques-unes et les afficher sur la carte.</p> </li> </ol>"},{"location":"formation/ywc_carte/#exercice-2-utiliser-les-boutons-les-instructions-conditionnelles","title":"Exercice 2. Utiliser les boutons, les instructions conditionnelles","text":"<ol> <li>La carte poss\u00e8de deux boutons A et B. Recopier le code ci-dessous. Anticiper le comportement de la carte lorsqu'on ex\u00e9cute ce programme, puis v\u00e9rifier en l'ex\u00e9cutant. <pre><code>from microbit import *\ndisplay.show(\"?\")\nwhile True:\n    if button_a.is_pressed():\n        display.show(Image.YES)\n    elif button_b.is_pressed():\n        display.show(Image.NO)\n</code></pre> Remarque : La condition <code>while True</code> \u00e9tant toujours v\u00e9rifi\u00e9e, la boucle s\u2019ex\u00e9cute ind\u00e9finiment. Le programme est ainsi \u00e0 l\u2019\u00e9coute des \u00e9v\u00e9nements, ici l\u2019appui sur les boutons.  </li> <li>L\u2019instruction <code>display.clear()</code> permet d\u2019\u00e9teindre les pixels de l\u2019\u00e9cran.  Utiliser les instructions vues pr\u00e9c\u00e9demment pour que :<ul> <li>l\u2019appui sur le bouton [A] affiche l\u2019image <code>Image.YES</code>,</li> <li>l'appui sur le bouton [B] affiche l\u2019image <code>Image.NO</code>,</li> <li>et un rel\u00e2chement des boutons efface l\u2019\u00e9cran.    </li> </ul> </li> </ol> Approfondissement : is_pressed() et was_pressed() <p>Comparer le programme r\u00e9alis\u00e9 avec celui ci-dessous ; quelles diff\u00e9rences note-t-on lors de leur ex\u00e9cution ? <pre><code>from microbit import *\ndisplay.show(\"?\")\nwhile True:\n    if button_a.was_pressed():\n        display.show(Image.YES)\n        sleep(200)\n    elif button_b.was_pressed():\n        display.show(Image.NO)\n        sleep(200)\n    else :\n        display.clear()\n</code></pre></p>"},{"location":"formation/ywc_carte/#exercice-3-faire-clignoter-un-affichage-utiliser-des-boucles","title":"Exercice 3. Faire clignoter un affichage. Utiliser des boucles","text":"<ol> <li> <p>(a) Que r\u00e9alise le programme ci-dessous lorsqu'on l'ex\u00e9cute sur la carte ? <pre><code>from microbit import *\nwhile True :\n    display.show(1)\n    sleep(500)\n    display.clear()\n    sleep(500)\n</code></pre> (b) Saisir et flasher le code et v\u00e9rifier.</p> </li> <li> <p>En s'inspirant du programme pr\u00e9c\u00e9dent, \u00e9crire un programme qui permet de faire clignoter une image choisie parmi celles disponibles.  </p> </li> <li> <p>Que r\u00e9alise le programme ci-dessous lorsqu'on l'ex\u00e9cute sur la carte ? <pre><code>from microbit import *\nfor k in range(10):\n    display.show(k)\n    sleep(500)\n</code></pre> L\u2019instruction <code>for k in range(n)</code> avec n entier, signifie que k prend pour valeur 0 puis 1 puis 2 etc, jusqu\u2019\u00e0 n - 1 inclus. Cette instruction permet de cr\u00e9er des boucles born\u00e9es.   </p> </li> <li> <p>Modifier le programme pour que les nombres 0 \u00e0 9 d\u00e9filent ind\u00e9finiment.</p> </li> </ol>"},{"location":"formation/ywc_carte/#exercice-4-creation-dimages-choix-aleatoire-geste","title":"Exercice 4. Cr\u00e9ation d'images - Choix al\u00e9atoire - Geste","text":"<ol> <li>On a vu qu\u2019il existe des images \u00e0 disposition, mais on peut aussi cr\u00e9er sa propre image en indiquant l\u2019intensit\u00e9 de chaque pixel \u00e0 l\u2019aide d\u2019un entier entre 0 (pixel \u00e9teint) et 9 (pixel d\u2019intensit\u00e9 maximale). On peut pr\u00e9ciser les valeurs soit ligne par ligne, soit en une seule ligne.  Reproduire et ex\u00e9cuter ce programme : <pre><code>from microbit import *\neclat1 = Image(\"00300:\"\n               \"03630:\"\n               \"36963:\"\n               \"03630:\"\n               \"00300\")\neclat2 = Image(\"00300:03330:33333:03330:00300\")\nwhile True:\n    if button_a.is_pressed():\n        display.show(eclat1)\n        sleep(1000)\n        display.show(eclat2)\n</code></pre></li> <li>Cr\u00e9er les six images permettant de repr\u00e9senter les six faces du d\u00e9 en compl\u00e9tant le code ci-dessous. <pre><code>from microbit import *\nun  = Image(\"00000:00000:00900:00000:00000\")\ndeux = Image(\".....\")\ntrois  = Image(\".....\")\nquatre = Image(\".....\")\ncinq  = Image(\".....\")\nsix = Image(\".....\")\n</code></pre></li> <li>Pour choisir une image parmi les six images repr\u00e9sentant une face du d\u00e9, on utilise la fonction <code>choice</code> du module <code>random</code> qui permet de choisir au hasard un \u00e9l\u00e9ment dans une liste : <pre><code>from microbit import *\nfrom random import choice\nun  = Image(\"00000:00000:00900:00000:00000\")\ndeux = Image(\".....\")\ntrois  = Image(\".....\")\nquatre = Image(\".....\")\ncinq  = Image(\".....\")\nsix = Image(\".....\")\n# on d\u00e9finit la liste contenant le nom des images que l'on a d\u00e9finit pr\u00e9c\u00e9demment\nliste_faces = [un, deux, trois, quatre, cinq, six]\nface = choice(liste_faces)\ndisplay.show(face)\n</code></pre> Ex\u00e9cuter plusieurs fois le programme apr\u00e8s l\u2019avoir compl\u00e9t\u00e9.</li> <li>Compl\u00e9ter le programme  pour qu'il permette de relancer le d\u00e9 lorsqu\u2019on appuie sur le bouton A de la carte. (Voir l\u2019exercice 2.)</li> <li>L'expression <code>accelerometer.current_gesture() == 'shake'</code> vaut <code>True</code> lorsqu'on secoue la carte.  Modifier le programme pour que le lancer de d\u00e9 soit r\u00e9alis\u00e9 lorsqu'on secoue la carte (au lieu de l'appui sur le bouton A).</li> </ol>"},{"location":"formation/ywc_carte/#exercice-5-radio-compteur","title":"Exercice 5. Radio - Compteur","text":"<p>L\u2019objectif de cet exercice est de finaliser le badge de vote, commenc\u00e9 \u00e0 l\u2019exercice 2. On utilise la fonctionnalit\u00e9 radio sur plusieurs cartes de vote, et une nouvelle carte va r\u00e9ceptionner les votes.</p> <p>Sur les cartes de vote : <pre><code>from microbit import *\nimport radio\nradio.on()\nvote_ok = True # cette variable vaut True tant qu'aucun vote n'a \u00e9t\u00e9 envoy\u00e9\nwhile vote_ok:\n    display.show(Image.SQUARE_SMALL)\n    sleep(100)\n    if button_a.is_pressed():\n        display.show(Image.YES)\n    elif button_b.is_pressed():\n        display.show(Image.NO)\n    if button_a.was_pressed():\n        radio.send(\"A\")\n        vote_ok = False\n    elif button_b.was_pressed():\n        radio.send(\"B\")\n        vote_ok = False\n</code></pre></p> <p>Sur la carte r\u00e9ceptrice : <pre><code>from microbit import *\nimport radio\nradio.on()\nvoix_A = 0\nvoix_B = 0\nwhile True:\n    message = radio.receive()\n    if message =='A':\n        voix_A = voix_A + 1\n    elif message =='B':\n        voix_B = voix_B + 1\n</code></pre></p> <p>Reproduire ces programmes et compl\u00e9ter le programme de la carte r\u00e9ceptrice pour que lors de l\u2019appui sur le bouton A elle affiche le nombre de votes OUI, et lors de l\u2019appui sur le bouton B elle affiche le nombre de votes NON.</p> <p>Ce programme a utilis\u00e9 :</p> <p><code>import radio</code> pour importer le module radio <code>radio.on()</code>pour activer la fonctionnalit\u00e9 radio (\u00e9mission et/ou r\u00e9ception)</p> <p><code>radio.send(\"A\")</code> pour envoyer le message \u2019A\u2019 \u00e0 toutes les cartes qui \u00e9coutent</p> <p><code>radio.receive()</code> pour r\u00e9ceptionner les messages \u00e9mis.</p> <p>Si n\u00e9cessaire, on peut configurer la carte sur un groupe pr\u00e9cis, pour que seules les cartes d\u2019un m\u00eame groupe puissent communiquer. La valeur est comprise entre 0 et 255 : par exemple, <code>radio.config(group=7)</code>.</p> <p>En savoir plus sur la fonctionnalit\u00e9 radio</p> Approfondissement <p>Parcours : Atteindre une cible sur un plan inclin\u00e9</p>"},{"location":"formation/ywc_carte/#exercice-6-ruban-de-leds-neopixel","title":"Exercice 6. Ruban de leds Neopixel","text":"<ol> <li>Placer la carte micro-bit sur le shield Grove et connecter le ruban de led NeoPixel sur le connecteur P0-P14.  </li> <li> <p>Lire le programme suivant et anticiper l'effet produit sur le ruban NeoPixel : quelles leds sont allum\u00e9es, dans quel ordre, de quelle(s) couleurs(s) ? <pre><code>from microbit import *\nimport neopixel\n# pour une connexion d'un ruban de 30 leds sur le connecteur P0/P14\nnp = neopixel.NeoPixel(pin0, 30)\n\nwhile True:\n    for i in range(30): # i prend les valeurs 0 \u00e0 29\n        np[i] = (255, 0, 0)\n        sleep(200)\n        np.show()\n    np.clear()\n</code></pre></p> </li> <li> <p>Saisir ce programme et le flasher sur une carte micro:bit, connect\u00e9e. V\u00e9rifier si l'effet constat\u00e9 correspond \u00e0 celui anticip\u00e9.</p> </li> <li>Indenter l'instruction <code>np.clear()</code> pour qu'elle soit align\u00e9e avec le <code>np.show()</code> de la ligne 10. Quel effet cela a-t-il sur l'affichage produit sur le ruban ? Pourquoi ?</li> <li>Modifier une valeur du programme pour augmenter la \"vitesse\" du point lumineux.  </li> <li>Modifier une ou plusieurs valeurs pour que le point allum\u00e9 soit jaune.</li> <li>Poursuivre le programme pr\u00e9c\u00e9dent pour que le point lumineux fasse des allers-retours entre les deux extr\u00e9mit\u00e9s du ruban.</li> </ol>"},{"location":"formation/ywc_couleurs_envirobit/","title":"Transfert de couleur sur un ruban NeoPixel","text":"<p>Mat\u00e9riel : 2 cartes micro:bit, 1 ruban neopixel et une source de lumi\u00e8re color\u00e9e (un smartphone par exemple)  </p> <p>Fonctionnement attendu :  </p> <ul> <li>La source lumineuse color\u00e9e est approch\u00e9e du module enviro:bit pour lecture des composantes RVB.</li> <li>Les composantes sont envoy\u00e9es par radio \u00e0 une 2e carte qui pilote le ruban NeoPixel : toutes les leds sont allum\u00e9es avec les valeurs RVB re\u00e7ues par la carte.</li> </ul>"},{"location":"formation/ywc_nim_neopixel/","title":"Jeu de Nim sur un ruban NeoPixel","text":"<p>Mat\u00e9riel : 3 cartes micro:bit, 1 ruban neopixel  </p> <p>Fonctionnement attendu :  </p> <ul> <li>Deux joueurs s'affrontent au jeu de Nim. Chacun joue \u00e0 l'aide d'une carte micro:bit. L'un des joueurs a la couleur rouge, l'autre la couleur bleu.</li> <li>Le ruban NeoPixel est pilot\u00e9 par une 3e carte : il est totalement allum\u00e9 et toutes ses leds sont \u00e9clair\u00e9es en blanc.</li> <li>Les joueurs doivent s'approprier tour \u00e0 tour entre une et trois led(s) qui s'afficheront en rouge ou bleu selon le joueur. Celui qui s'empare de la derni\u00e8re led du ruban gagne la partie.  </li> <li>Chacun leur tour, les joueurs appuient 1, 2 ou 3 fois sur le bouton A, et valident leur choix avec le bouton B. La carte affiche les chiffres 1, 2 ou 3 lors des appuis sur le bouton A et l'image <code>Image.YES</code> lors de la validation avec le bouton B.</li> <li>La valeur choisie est envoy\u00e9e par radio \u00e0 la carte qui pilote le ruban de leds. Le nombre correspondant de leds s'allume en couleur sur le ruban, en rouge ou bleu selon le joueur.</li> <li>Lorsque la derni\u00e8re led est atteinte, le ruban fait clignoter ses leds de la couleur du joueur gagnant.</li> </ul>"},{"location":"jupyter/debuter_jupyter/","title":"Notebooks Jupyter","text":""},{"location":"jupyter/debuter_jupyter/#les-notebooks-jupyter","title":"Les notebooks Jupyter","text":"<p>Jupyter Notebook est un environnement de programmation interactif bas\u00e9 sur le web permettant de cr\u00e9er des document intitul\u00e9s \"notebooks\". Il s'agit de documents se pr\u00e9sentant sous la forme d'une succession de cellules. Celles-ci peuvent contenir du code, du texte, des formules math\u00e9matiques, des graphiques et des m\u00e9dias interactifs. Les notebooks poss\u00e8dent g\u00e9n\u00e9ralement l'extension <code>.ipynb</code>.</p> <p>Voici par exemple la barre d'outils propos\u00e9e par l'interface de basthon.fr:</p> <p></p>"},{"location":"jupyter/debuter_jupyter/#cellules-de-code-python","title":"Cellules de code Python","text":"<p>Par d\u00e9faut les cellules sont des cellules de code Python. Elles sont pr\u00e9c\u00e9d\u00e9es de In[ ].</p> <p>Pour ex\u00e9cuter le code contenu dans une cellule, on peut taper au clavier Shift+Enter ou cliquer sur le bouton Run.</p> <p>Si le code demande l'\u00e9valuation d'une expression, une nouvelle ligne est cr\u00e9\u00e9e, pr\u00e9c\u00e9d\u00e9e de Out[ ] et la valeur est affich\u00e9e.</p> <p></p> <p>Si le code demande l'affichage d'une valeur, celui-ci est r\u00e9alis\u00e9 sans faire pr\u00e9c\u00e9der la ligne de Out[ ].</p> <p></p>"},{"location":"jupyter/debuter_jupyter/#cellules-de-texte-markdown","title":"Cellules de texte Markdown","text":"<p>On change le type d'une cellule \u00e0 l'aide du menu d\u00e9roulant de la barre d'outils : choisir Markdown pour un contenu autre que du code. En utilisant la syntaxe markdown, on peut mettre en forme du texte, ins\u00e9rer des liens, des tableaux, des images ou des formules math\u00e9matiques. Les balises <code>html</code> et le code \\(\\LaTeX\\) sont \u00e9galement utilisables dans les cellules Markdown.</p> <p>Les cellules Markdown mettent en forme leur contenu lorsqu'on tape au clavier Shift+Enter ou lorsqu'on clique sur le bouton Run.</p> <p>Voici un exemple avec une m\u00eame cellule Markdown lors de l'\u00e9dition puis apr\u00e8s mise en forme de l'affichage :</p> <p></p> <p></p>"},{"location":"jupyter/doctest/","title":"Effectuer des tests automatis\u00e9s avec doctest dans un notebook Jupyter","text":"<p>On peut r\u00e9aliser des tests automatis\u00e9s dans un fichier python gr\u00e2ce \u00e0 la biblioth\u00e8que doctest.</p> <p>La biblioth\u00e8que doctest permet de d\u00e9tecter automatiquement les tests \u00e9crits dans la docstring, ou chaine de documentation, de les lancer et d\u2019afficher un rapport. Les valeurs \u00e0 tester doivent \u00eatre pr\u00e9c\u00e9d\u00e9es de <code>&gt;&gt;&gt;</code>, et le r\u00e9sultat attendu doit \u00eatre en d\u00e9but de ligne suivante.</p> <p>Voici un exemple pour la fonction <code>est_parfait</code> : <pre><code>def est_parfait(n) : \n'''n est un entier strictement positif\n    parfait(n) vaut True si l'entier n est parfait ou False sinon.\n    Un nombre parfait est tel que la somme de ses diviseurs est \u00e9gale \u00e0 son double.\n    &gt;&gt;&gt; est_parfait(2)\n    False\n    &gt;&gt;&gt; est_parfait(6)\n    True\n    &gt;&gt;&gt; est_parfait(27)\n    False\n    &gt;&gt;&gt; est_parfait(28)\n    True\n    '''\n\n   assert(n&gt;0 and type(n)==int), \"l'argument doit \u00eatre un entier strictement positif\"\n   diviseurs = [i for i in range(1,n+1) if n%i == 0]\n   return sum(diviseurs) == 2*n\n</code></pre></p> <p>On ex\u00e9cute dans une cellule du notebook les instructions suivantes : <pre><code>import doctest\ndoctest.testmod()\n</code></pre></p> <p>Un rapport concis des tests est alors affich\u00e9 (attention, les tests sont lanc\u00e9s sur l\u2019ensemble du notebook) : <code>TestResults(failed=0, attempted=4)</code> ce qui signifie ici que les 4 tests n'ont donn\u00e9 lieu \u00e0 aucun \u00e9chec.  </p> <p>On peut ajouter l\u2019argument <code>verbose=True</code> en \u00e9crivant <code>doctest.testmod(verbose=True)</code>: le rapport produit est alors plus explicite.  </p> <pre><code>Trying:\n    est_parfait(2)\nExpecting:\n    False\nok\nTrying:\n    est_parfait(6)\nExpecting:\n    True\nok\nTrying:\n    est_parfait(27)\nExpecting:\n    False\nok\nTrying:\n    est_parfait(28)\nExpecting:\n    True\nok\n1 items had no tests:\n    __main__\n1 items passed all tests:\n   4 tests in __main__.est_parfait\n4 tests in 2 items.\n4 passed and 0 failed.\nTest passed.\nTestResults(failed=0, attempted=4)\n</code></pre>"},{"location":"jupyter/ipythonblocks/","title":"ipythonblocks : pr\u00e9sentation","text":"<p>ipythonblocks est un outil p\u00e9dagogique qui propose de cr\u00e9er des grilles de cases color\u00e9es. Il permet d'exp\u00e9rimenter les concepts de contr\u00f4le de flux Python et de voir imm\u00e9diatement les effets du code repr\u00e9sent\u00e9s de mani\u00e8re color\u00e9e et attrayante.</p>"},{"location":"jupyter/ipythonblocks/#0-generalites","title":"0. G\u00e9n\u00e9ralit\u00e9s","text":""},{"location":"jupyter/ipythonblocks/#-ipythonbocks-sur-pypi","title":"- ipythonbocks sur PyPI","text":"<p>Pour retrouver la derni\u00e8re version, les conseils d'installation : https://pypi.org/project/ipythonblocks/</p>"},{"location":"jupyter/ipythonblocks/#-le-site-ipythonblocksorg","title":"- Le site ipythonblocks.org","text":"<p>Le site ipythonblocks.org propose de publier ses images et de consulter des exemples de grilles.</p>"},{"location":"jupyter/ipythonblocks/#1-grille-classe-blockgrid","title":"1. Grille : classe BlockGrid","text":"<p>ipythonblocks fournit une classe BlockGrid dont la repr\u00e9sentation est une grille. Pour cr\u00e9er (instancier) une grille, on appelle la m\u00e9thode <code>BlockGrid(width, height)</code> o\u00f9 :</p> <ul> <li><code>width</code> est un entier : nombre de blocs par ligne  </li> <li><code>height</code>est un entier : nombre de blocs par colonne  </li> </ul> <p>Des param\u00e8tres optionnels peuvent \u00eatre pr\u00e9cis\u00e9s :</p> <ul> <li><code>fill</code> est un triplet d'entiers, repr\u00e9sentant les niveaux de (rouge, vert, bleu) entre 0 et 255. Sa valeur par d\u00e9faut est (0, 0, 0), ce qui d\u00e9finit des blocs de couleur noire.  </li> <li><code>block_size</code> est un entier, repr\u00e9sentant la longueur des c\u00f4t\u00e9s des blocs de la grille en pixels. Sa valeur par d\u00e9faut est 20, et sa valeur minimale est 1.  </li> <li><code>lines_on</code> est un bool\u00e9en, pr\u00e9cisant si les lignes ente les blocs doivent \u00eatre affich\u00e9s ou non. Sa valeur par d\u00e9faut est True.</li> </ul> <pre><code>from ipythonblocks import BlockGrid\n</code></pre>"},{"location":"jupyter/ipythonblocks/#exemple-1","title":"Exemple 1","text":"<pre><code>grille_A = BlockGrid(12, 4)\ngrille_A\n</code></pre>"},{"location":"jupyter/ipythonblocks/#exemple-2","title":"Exemple 2","text":"<pre><code>grille_B = BlockGrid(5, 6, fill=(230, 92, 92))\ngrille_B\n</code></pre>"},{"location":"jupyter/ipythonblocks/#exemple-3","title":"Exemple 3","text":"<pre><code>grille_C = BlockGrid(30, 10, block_size=8, fill=(52, 52, 150))\ngrille_C\n</code></pre>"},{"location":"jupyter/ipythonblocks/#2-cellule-classe-block","title":"2. Cellule : classe Block","text":"<p>Les cellules de la grille sont repr\u00e9sent\u00e9es par des objets de la classe Block .  On acc\u00e8de \u00e0 une cellule de la grille en pr\u00e9cisant ses coordonn\u00e9es dans la grille entre crochets. La premi\u00e8re coordonn\u00e9e est l'indice de ligne, la seconde l'indice de colonne. Les indices d\u00e9butent \u00e0 0.  </p> <pre><code>cellule = grille_C[0, 29] # cellule en haut \u00e0 droite\ncellule\n</code></pre> <p>Chaque cellule est dot\u00e9e d'attributs gr\u00e2ce auxquels on peut lire et modifier les propri\u00e9t\u00e9s de cette cellule :  </p> <ul> <li><code>red</code>, <code>green</code> et <code>blue</code> : entier indiquant le niveau de chaque couleur  </li> <li><code>rgb</code> : triplet d'entiers indiquant les niveaux de (rouge, vert, bleu)  </li> <li><code>size</code> : entier indiquant la dimension de la cellule  </li> </ul> <p>La position de la cellule dans la grille est donn\u00e9e par des attributs qu'on ne peut pas modifier :</p> <ul> <li><code>row</code>: indice de ligne de la cellule  </li> <li><code>col</code>: indice de colonne de la cellule  </li> </ul> <p>La m\u00e9thode <code>set_colors</code> permet de modifier les niveaux de (rouge, vert, bleu). Au survol de la souris, les coordonn\u00e9es et la couleur de la cellule sont affich\u00e9es.</p> <pre><code>cellule.red = 240\ncellule\n</code></pre> <pre><code>grille_C\n</code></pre> <pre><code>couleurs = ['rouge', 'vert', 'bleu']\nvaleurs = cellule.rgb\nfor couleur, valeur in zip(couleurs, valeurs):\n    print(couleur, valeur)\n</code></pre> <pre><code>rouge 240\nvert 52\nbleu 150\n</code></pre>"},{"location":"jupyter/ipythonblocks/#exemples","title":"Exemples","text":"<pre><code>grille_D = BlockGrid(10, 10)\nfor cellule in grille_D:\n    if (cellule.row + cellule.col) % 2 == 0:\n        cellule.set_colors(255, 255, 255)\ngrille_D\n</code></pre> <pre><code>grille_E = BlockGrid(10, 10)\nfor cellule in grille_E:\n    if (cellule.row * cellule.col) % 2 == 0:\n        cellule.set_colors(225, 225, 225)\ngrille_E\n</code></pre> <pre><code>grille_F = BlockGrid(10, 10)\nfor cellule in grille_F:\n    if (cellule.row == 7 or cellule.col == 3):\n        cellule.set_colors(235, 235, 235)\ngrille_F\n</code></pre> <pre><code>grille_G = BlockGrid(10, 10)\nfor cellule in grille_G:\n    if (cellule.row &gt; 7 or cellule.col &lt;= 3):\n        cellule.set_colors(205, 90, 90)\ngrille_G\n</code></pre> <pre><code>grille_H = BlockGrid(10, 10)\nfor cellule in grille_H:\n    k = cellule.row + cellule.col\n    cellule.set_colors(20*k, 8*k, 10*k)\ngrille_H\n</code></pre>"},{"location":"jupyter/ipythonblocks/#3-animation","title":"3. Animation","text":""},{"location":"jupyter/ipythonblocks/#exemples_1","title":"Exemples","text":""},{"location":"jupyter/ipythonblocks/#methode-1","title":"M\u00e9thode 1","text":"<pre><code>import time\nfrom IPython.display import clear_output\n</code></pre> <pre><code>grille = BlockGrid(4, 3, block_size=30, fill=(52, 52, 100))\n\nprec_cellule = None\n\nfor i in range(3):\n    for cellule in grille:\n        clear_output()\n        cellule.blue = 255\n\n        if prec_cellule is not None:\n            prec_cellule.blue = 100\n\n        grille.show()\n        time.sleep(0.3)\n        prec_cellule = cellule\n</code></pre>"},{"location":"jupyter/ipythonblocks/#methode-2","title":"M\u00e9thode 2","text":"<pre><code>grille = BlockGrid(4, 3, block_size=30, fill=(52, 52, 100))\n\nprec_cellule = None\n\nfor i in range(3):\n    for cellule in grille:\n        clear_output()\n        cellule.blue = 255\n\n        if prec_cellule is not None:\n            prec_cellule.blue = 100\n\n        grille.flash(display_time=0.5)\n        prec_cellule = cellule\n\ngrille.show()     \n</code></pre>"},{"location":"jupyter/memo/","title":"M\u00e9mos","text":"<p>Des m\u00e9mos pour pr\u00e9senter des modules utilisables dans Basthon.fr</p> <p>M\u00e9mo Matplotlib  M\u00e9mo Turtle  M\u00e9mo Folium </p>"},{"location":"jupyter/memolatex/","title":"M\u00e9mo \\(\\LaTeX\\)","text":"<p>Comment afficher une formule \\(\\LaTeX\\) dans une cellule Markdown d'un notebook Jupyter ?</p> <p>Info</p> <p>Les affichages sont obtenus en saisissant la syntaxe pr\u00e9cis\u00e9e entre deux symboles $ dans une cellule au format Markdown.</p>"},{"location":"jupyter/memolatex/#symboles-courants","title":"Symboles courants","text":"syntaxe affichage \\times \\(\\times\\) \\approx, \\neq \\(\\approx,  \\neq\\) \\leqslant,\\geqslant \\(\\leqslant,\\geqslant\\) \\sqrt{x} \\(\\sqrt{x}\\) \\in, \\notin \\(\\in, \\notin\\) \\subset, \\not \\subset \\(\\subset, \\not \\subset\\) \\emptyset \\(\\emptyset\\) \\cap \\(\\cap\\) \\cup \\(\\cup\\) \\infty \\(\\infty\\) \\Bbb{N}, \\Bbb{R} \\(\\Bbb{N,  R}\\) \\alpha, \\beta \\(\\alpha, \\beta\\) \\pi \\(\\pi\\) \\sigma \\(\\sigma\\) \\perp \\(\\perp\\) \\dots, \\cdots \\(\\dots, \\cdots\\)"},{"location":"jupyter/memolatex/#indices-exposants","title":"Indices, exposants","text":"syntaxe affichage u_n \\(u_n\\) u_{n+1} \\(u_{n+1}\\) 2^3 \\(2^3\\) 2^{n+1} \\(2^{n+1}\\) {2^3 }^4 \\({2^3}^4\\) \\sqrt[3]{8} \\(\\sqrt[3]{8}\\)"},{"location":"jupyter/memolatex/#fractions","title":"Fractions","text":"syntaxe affichage \\dfrac{a+1}{b+1} \\(\\dfrac{a+1}{b+1}\\) \\dfrac{\\frac{a}{b}+1}{\\frac{c}{d}+1} \\(\\dfrac{\\frac{a}{b}+1}{\\frac{c}{d}+1}\\)"},{"location":"jupyter/memolatex/#fleches","title":"Fl\u00e8ches","text":"syntaxe affichage \\Leftrightarrow \\(\\Leftrightarrow\\) \\leftrightarrows \\(\\leftrightarrows\\) \\Longleftrightarrow \\(\\Longleftrightarrow\\) \\iff \\(\\iff\\) \\Rightarrow \\(\\Rightarrow\\) \\rightarrow \\(\\rightarrow\\) \\to \\(\\to\\) \\Longrightarrow \\(\\Longrightarrow\\) \\implies \\(\\implies\\) \\Leftarrow \\(\\Leftarrow\\) \\leftarrow \\(\\leftarrow\\) \\mapsto \\(\\mapsto\\) \\longmapsto \\(\\longmapsto\\) \\uparrow, \\downarrow \\(\\uparrow, \\downarrow\\) \\nearrow,\\searrow \\(\\nearrow,\\searrow\\)"},{"location":"jupyter/memolatex/#vecteur-angle-etc","title":"Vecteur, angle, etc.","text":"syntaxe affichage \\overrightarrow{AB} \\(\\overrightarrow{AB}\\) \\vec{u} \\(\\vec{u}\\) (O,\\vec{\\imath},\\vec{\\jmath}) \\((O, \\vec{\\imath},\\vec{\\jmath})\\) \\widehat{ABC} \\(\\widehat{ABC}\\) \\hat{a} \\(\\hat{a}\\) \\overline{A} \\(\\overline{A}\\)"},{"location":"jupyter/memolatex/#coordonnees-matrice-coefficient-binomial-etc","title":"Coordonn\u00e9es, matrice, coefficient binomial, etc.","text":"syntaxe affichage \\binom n k \\(\\binom n k\\) \\dbinom n k \\(\\dbinom n k\\) \\begin{pmatrix}  a  \\\\  b   \\end{pmatrix} \\(\\begin{pmatrix} a \\\\ b \\end{pmatrix}\\) \\begin{matrix}  a &amp; b \\\\ c &amp; d   \\end{matrix} \\(\\begin{matrix} a &amp; b \\\\ c &amp; d \\end{matrix}\\) \\begin{bmatrix}  a &amp; b \\\\ c &amp; d  \\end{bmatrix} \\(\\begin{bmatrix} a &amp; b \\\\ c &amp; d \\end{bmatrix}\\)"},{"location":"jupyter/memolatex/#sommes-integrales-limites","title":"Sommes, int\u00e9grales, limites","text":"syntaxe affichage \\sum _{k=1}^{n}k \\(\\sum _{k=1}^{n}k\\) \\int _{1}^{n}f(x)  \\mathrm{d} x \\(\\int _{1}^{n}f(x)\\,\\mathrm{d}x\\) \\lim_{n \\to +\\infty}x_n=\\ell \\(\\lim_{n \\to +\\infty}x_n=\\ell\\) \\lim\\limits_{x \\to -\\infty} f(x) \\(\\lim\\limits_{x \\to -\\infty} f(x)\\) \\lim\\limits_{\\substack{x \\to 0 \\ x&lt;0}} \\dfrac{1}{x} \\(\\lim\\limits_{\\substack{x \\to 0 \\\\ x&lt;0}} \\dfrac{1}{x}\\) <p>En mode display, (<code>$$ formule $$</code>),  <code>\\sum _{k=1}^{n}k</code> s'affiche :</p> \\[ \\sum _{k=1}^{n}k\\] <p>et <code>\\int _{1}^{n}f(x)\\,\\mathrm{d}x</code>  s'affiche :</p> \\[ \\int _{1}^{n}f(x)\\,\\mathrm{d}x\\]"},{"location":"jupyter/memolatex/#delimiteurs","title":"D\u00e9limiteurs","text":"syntaxe affichage \\cos\\left(\\dfrac{\\pi}{6}\\right) \\(\\cos\\left(\\dfrac{\\pi}{6}\\right)\\) \\left\\vert x-3 \\right \\vert \\(\\left\\vert x-3 \\right \\vert\\) \\left \\| u-v \\right \\| \\(\\left\\| u-v \\right \\|\\) \\left( \\dfrac{1}{2} +2(x + 1) \\right) \\(\\left( \\dfrac{1}{2} +2(x + 1) \\right)\\) \\left {\\begin{array}{rcl}  x + y &amp; = &amp; a \\\\  x - y &amp; = &amp; b \\end{array} \\right. \\(\\left \\{\\begin{array}{rcl} x+y&amp;=&amp;a \\\\ x-y&amp;=&amp;b \\end{array} \\right.\\)"},{"location":"jupyter/memomd/","title":"M\u00e9mo Markdown","text":"<p>Markdown a \u00e9t\u00e9 cr\u00e9\u00e9 par John Gruber en 2004. Markdown est con\u00e7u pour \u00eatre aussi facile \u00e0 lire et \u00e0 \u00e9crire que possible. Il est ais\u00e9ment convertible en HTML. Les fichiers Markdown poss\u00e8dent l\u2019extension <code>.md</code>. Markdown est \u00e9galement le langage des cellules de texte d'un notebook Jupyter.  </p> <p>Voici la plupart des \u00e9l\u00e9ments de la syntaxe Markdown et leur \u00e9quivalent en HTML.</p>"},{"location":"jupyter/memomd/#titres","title":"Titres","text":"MarkdownHTML <pre><code># Titre de niveau 1  \n## Titre de niveau 2\n### Titre de niveau 3\n#### Titre de niveau 4\n##### Titre de niveau 5\n###### Titre de niveau 6\n</code></pre> <pre><code>&lt;h1&gt;Titre de niveau 1&lt;/h1&gt;\n&lt;h2&gt;Titre de niveau 2&lt;/h2&gt;\n&lt;h3&gt;Titre de niveau 3&lt;/h3&gt;\n&lt;h4&gt;Titre de niveau 4&lt;/h4&gt;\n&lt;h5&gt;Titre de niveau 5&lt;/h5&gt;\n&lt;h6&gt;Titre de niveau 6&lt;/h6&gt;\n</code></pre>"},{"location":"jupyter/memomd/#emphase","title":"Emphase","text":"MarkdownHTMLAper\u00e7u <pre><code>*Texte en italique*\n**Texte en gras**   \n~~Texte barr\u00e9~~\n</code></pre> <pre><code>&lt;p&gt;&lt;em&gt;Texte en italique&lt;/em&gt;&lt;/p&gt;\n&lt;p&gt;&lt;strong&gt;Texte en gras&lt;/strong&gt; &lt;/p&gt;\n&lt;p&gt;&lt;s&gt;Texte barr\u00e9&lt;/s&gt;&lt;/p&gt;\n</code></pre> <p>Texte en italique Texte en gras Texte barr\u00e9</p>"},{"location":"jupyter/memomd/#listes","title":"Listes","text":""},{"location":"jupyter/memomd/#listes-a-puces","title":"Listes \u00e0 puces","text":"MarkdownHTMLAper\u00e7u <pre><code>* \u00c9l\u00e9ment 1\n* \u00c9l\u00e9ment 2\n    * Sous-\u00e9l\u00e9ment 1\n    * Sous \u00e9l\u00e9ment 2\n* \u00c9l\u00e9ment 3\n</code></pre> <pre><code>&lt;ul&gt;\n&lt;li&gt;\u00c9l\u00e9ment 1&lt;/li&gt;\n&lt;li&gt;\u00c9l\u00e9ment 2\n    &lt;ul&gt;\n        &lt;li&gt;Sous-\u00e9l\u00e9ment 1&lt;/li&gt;\n        &lt;li&gt;Sous \u00e9l\u00e9ment 2&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\u00c9l\u00e9ment 3&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <ul> <li>\u00c9l\u00e9ment 1</li> <li>\u00c9l\u00e9ment 2<ul> <li>Sous-\u00e9l\u00e9ment 1</li> <li>Sous \u00e9l\u00e9ment 2</li> </ul> </li> <li>\u00c9l\u00e9ment 3</li> </ul>"},{"location":"jupyter/memomd/#listes-ordonnees","title":"Listes ordonn\u00e9es","text":"MarkdownHTMLAper\u00e7u <pre><code>1. \u00c9l\u00e9ment 1\n2. \u00c9l\u00e9ment 2\n    1. Sous-\u00e9l\u00e9ment 1\n    2. Sous \u00e9l\u00e9ment 2\n3. \u00c9l\u00e9ment 3\n</code></pre> <pre><code>&lt;ol&gt;\n&lt;li&gt;\u00c9l\u00e9ment 1&lt;/li&gt;\n&lt;li&gt;\u00c9l\u00e9ment 2\n    &lt;ol&gt;\n        &lt;li&gt;Sous-\u00e9l\u00e9ment 1&lt;/li&gt;\n        &lt;li&gt;Sous \u00e9l\u00e9ment 2&lt;/li&gt;\n    &lt;/ol&gt;\n&lt;/li&gt;\n&lt;li&gt;\u00c9l\u00e9ment 3&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre> <ol> <li>\u00c9l\u00e9ment 1</li> <li>\u00c9l\u00e9ment 2<ol> <li>Sous-\u00e9l\u00e9ment 1</li> <li>Sous \u00e9l\u00e9ment 2</li> </ol> </li> <li>\u00c9l\u00e9ment 3</li> </ol> <p>Remarque : la valeur num\u00e9rique des entr\u00e9es des \u00e9l\u00e9ments n'a pas d'importance :   </p> MarkdownAper\u00e7u <pre><code>1. \u00c9l\u00e9ment 1\n1. \u00c9l\u00e9ment 2\n4. \u00c9l\u00e9ment 3\n</code></pre> <ol> <li>\u00c9l\u00e9ment 1</li> <li>\u00c9l\u00e9ment 2</li> <li>\u00c9l\u00e9ment 3</li> </ol>"},{"location":"jupyter/memomd/#listes-a-cocher","title":"Listes \u00e0 cocher","text":"MarkdownHTMLAper\u00e7u <pre><code>- [x] \u00c9l\u00e9ment 1, coch\u00e9\n- [ ] \u00c9l\u00e9ment 2, non-coch\u00e9\n    - [x] Sous-\u00e9l\u00e9ment 2.1, coch\u00e9\n    - [ ] Sous-\u00e9l\u00e9ment 2.2, non-coch\u00e9\n- [ ] \u00c9l\u00e9ment 3, non-coch\u00e9\n</code></pre> <pre><code>&lt;ul&gt;\n&lt;li&gt;\n    &lt;label&gt;\n        &lt;input type=\"checkbox\" checked&gt;\n        \u00c9l\u00e9ment 1, coch\u00e9\n    &lt;/label&gt;\n&lt;/li&gt;\n&lt;li&gt;\n    &lt;label&gt;\n        &lt;input type=\"checkbox\"&gt;\n        \u00c9l\u00e9ment 2, non-coch\u00e9\n    &lt;/label&gt;\n&lt;/li&gt;\n&lt;ul&gt;\n    &lt;li&gt;\n        &lt;label&gt;\n            &lt;input type=\"checkbox\" checked&gt;\n            Sous-\u00e9l\u00e9ment 2.1, coch\u00e9\n        &lt;/label&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;label&gt;\n            &lt;input type=\"checkbox\"&gt;\n            Sous-\u00e9l\u00e9ment 2.2, non-coch\u00e9\n        &lt;/label&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;li&gt;\n    &lt;label&gt;\n        &lt;input type=\"checkbox\"&gt;\n        \u00c9l\u00e9ment 3, non-coch\u00e9\n    &lt;/label&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <ul> <li> \u00c9l\u00e9ment 1, coch\u00e9</li> <li> \u00c9l\u00e9ment 2, non-coch\u00e9<ul> <li> Sous-\u00e9l\u00e9ment 2.1, coch\u00e9</li> <li> Sous-\u00e9l\u00e9ment 2.2, non-coch\u00e9</li> </ul> </li> <li> \u00c9l\u00e9ment 3, non-coch\u00e9</li> </ul>"},{"location":"jupyter/memomd/#citations","title":"Citations","text":"MarkdownHTMLAper\u00e7u <pre><code>&gt; Voici une citation  \n&gt; sur plusieurs lignes\n</code></pre> <pre><code>&lt;blockquote&gt;\n&lt;p&gt;Voici une citation&lt;/p&gt;  \n&lt;p&gt;sur plusieurs lignes&lt;/p&gt;  \n&lt;/blockquote&gt;\n</code></pre> <p>Voici une citation sur plusieurs lignes</p>"},{"location":"jupyter/memomd/#separateurs-horizontaux","title":"S\u00e9parateurs horizontaux","text":"MarkdownHTMLAper\u00e7u <pre><code> ---  \n\nou *** ou ___  \n</code></pre> <pre><code>&lt;hr/&gt;\n</code></pre>"},{"location":"jupyter/memomd/#liens","title":"Liens","text":"MarkdownHTMLAper\u00e7u <pre><code>[Ceci est le texte du lien](https://www.carnets.info)\n\n[Ceci est un lien avec un titre au survol](https://www.carnets.info \"Le titre du lien\")\n\n Ceci est un lien automatique : https://www.carnets.info\n On rencontre aussi cette syntaxe : &lt;https://www.carnets.info&gt;\n</code></pre> <pre><code>&lt;p&gt;&lt;a href=\"https://www.carnets.info\"&gt;Ceci est le texte du lien&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.carnets.info\" title=\"Le titre du lien\"&gt;Ceci est un lien avec un titre au survol&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Ceci est un lien automatique : &lt;a href=\"https://www.carnets.info\"&gt;https://www.carnets.info&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt; On rencontre aussi cette syntaxe : &lt;a href=\"https://www.carnets.info\"&gt;https://www.carnets.info&lt;/a&gt;&lt;/p&gt;\n</code></pre> <p>Ceci est le texte du lien</p> <p>Ceci est un lien avec un titre au survol</p> <p>Ceci est un lien automatique : https://www.carnets.info On rencontre aussi cette syntaxe : https://www.carnets.info</p>"},{"location":"jupyter/memomd/#images","title":"Images","text":"MarkdownHTMLAper\u00e7u <pre><code>![logo Markdown](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Markdown\"){width=30}\n</code></pre> <pre><code>&lt;img\nsrc=\"https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png\"\nalt=\"logo Markdown\"\ntitle=\"Logo Markdown\"\nwidth=30\n&gt;\n</code></pre>"},{"location":"jupyter/memomd/#tableaux","title":"Tableaux","text":"MarkdownHTMLAper\u00e7u <pre><code>Titre colonne 1 (gauche) | Titre colonne 2 (centr\u00e9) | Titre colonne 3 (droite)\n:--- | :---: | ---:\nCellule 1.1 | Cellule 1.2 | Cellule 1.3\nCellule 2.1 | Cellule 2.2 | Cellule 2.3\n</code></pre> <pre><code>&lt;table&gt;\n&lt;thead&gt;\n    &lt;tr&gt;\n        &lt;th&gt;Titre colonne 1&lt;/th&gt;\n        &lt;th&gt;Titre colonne 2&lt;/th&gt;\n        &lt;th&gt;Titre colonne 3&lt;/th&gt;\n    &lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Cellule 1.1&lt;/td&gt;\n        &lt;td&gt;Cellule 1.2&lt;/td&gt;\n        &lt;td&gt;Cellule 1.3&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Cellule 2.1&lt;/td&gt;\n        &lt;td&gt;Cellule 2.2&lt;/td&gt;\n        &lt;td&gt;Cellule 2.3&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre> Titre colonne 1 (gauche) Titre colonne 2 (centr\u00e9) Titre colonne 3 (droite) Cellule 1.1 Cellule 1.2 Cellule 1.3 Cellule 2.1 Cellule 2.2 Cellule 2.3"},{"location":"jupyter/memomd/#code","title":"Code","text":""},{"location":"jupyter/memomd/#code-en-ligne","title":"Code en ligne","text":"MarkdownHTMLAper\u00e7u <pre><code>insertion de code en ligne : `print(\"Hello World!\")`  \navec coloration syntaxique (MkDocs +  InlineHilite) : `#!py3 print(\"Hello World!)\"\n</code></pre> <pre><code>&lt;p&gt;insertion de code en ligne : &lt;code&gt;print(\"Hello World!\")&lt;/code&gt;&lt;/p&gt;\n</code></pre> <p>insertion de code en ligne :  <code>print(\"Hello World!\")</code> avec coloration syntaxique (MkDocs +  InlineHilite) : <code>print(\"Hello World!\")</code></p>"},{"location":"jupyter/memomd/#bloc-de-code","title":"Bloc de code","text":""},{"location":"jupyter/memomd/#bloc-de-code-simple","title":"Bloc de code simple","text":"MarkdownHTMLAper\u00e7u <pre><code>```python\nprint(\"Hello World!\")\n```\n</code></pre> <pre><code>&lt;pre&gt; print(\"Hello World!\")&lt;/pre&gt;\n</code></pre> <pre><code>print(\"Hello World!\")\n</code></pre>"},{"location":"jupyter/memomd/#bloc-de-code-avec-titre","title":"Bloc de code avec titre","text":"Markdown (MkDocs)Aper\u00e7u <pre><code>```python title=\"Bloc de code avec titre\"\nprint(\"Hello World!\")\n```\n</code></pre> Bloc de code avec titre<pre><code>print(\"Hello World!\")\n</code></pre>"},{"location":"jupyter/memomd/#bloc-de-code-avec-lignes-numerotees","title":"Bloc de code avec lignes num\u00e9rot\u00e9es","text":"Markdown (MkDocs)Aper\u00e7u <pre><code>```python linenums=\"1\"\nprint(\"Hello World!\")\nprint(\"Hello World!\")\n```\n</code></pre> <pre><code>print(\"Hello World!\")\nprint(\"Hello World!\")\n</code></pre>"},{"location":"jupyter/memomd/#bloc-de-code-avec-annotation","title":"Bloc de code avec annotation","text":"Markdown (MkDocs)Aper\u00e7u <pre><code>```python\nprint(\"Hello World!\") # (1)!\n```\n1.  :man_raising_hand: I'm a code annotation! I can contain `code`, __formatted text__, images, ... basically anything that can be written in Markdown.\n</code></pre> <pre><code>print(\"Hello World!\") # (1)!\n</code></pre> <ol> <li> I'm a code annotation! I can contain <code>code</code>, formatted text, images, ... basically anything that can be written in Markdown.</li> </ol> <p>en savoir plus</p>"},{"location":"jupyter/memomd/#bloc-de-code-avec-lignes-surlignees","title":"Bloc de code avec lignes surlign\u00e9es","text":"Markdown (MkDocs)Aper\u00e7u <pre><code>``` python hl_lines=\"2 3\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n</code></pre> <pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <p>en savoir plus</p>"},{"location":"jupyter/memomd/#boites-colorees-dans-un-notebook-jupyter","title":"Boites color\u00e9es dans un notebook Jupyter","text":"Markdown/HTMLAper\u00e7u  <pre><code>&lt;div class = \"alert alert-block alert-info\"&gt; Boite bleue&lt;/div&gt;\n&lt;div class = \"alert alert-block alert-success\"&gt; Boite verte&lt;/div&gt;\n&lt;div class = \"alert alert-block alert-warning\"&gt; Boite jaune&lt;/div&gt;\n&lt;div class = \"alert alert-block alert-danger\"&gt; Boite rouge&lt;/div&gt;\nExemple de style personnalis\u00e9\n&lt;div class=\"alert alert-success\" style=\"border-left: 10px solid #3c763d;border-radius:2px;\"&gt; &lt;/div&gt;\n</code></pre>"},{"location":"jupyter/memomd/#formules-latex","title":"Formules LaTeX","text":"MarkdownAper\u00e7u <pre><code>Mode en ligne :  \nOn cherche les solutions de l'\u00e9quation (E) : $x^2 + 3x -7 = 0$    \n\nMode bloc (display) :  \nOn trouve :  \n\n$$x = \\frac{-3 \\pm \\sqrt{37}}{2}$$\n</code></pre> <p>Mode en ligne : On cherche les solutions de l'\u00e9quation (E) :  \\(x^2 + 3x -7 = 0\\) </p> <p>Mode bloc (display) : On trouve :  </p> \\[x = \\frac{-3 \\pm \\sqrt{37}}{2}\\] <p>M\u00e9mo LaTeX</p> <p>Liste des fonctions \\(\\TeX\\)</p>"},{"location":"jupyter/memomd/#caracteres-specifiques","title":"Caract\u00e8res sp\u00e9cifiques","text":""},{"location":"jupyter/memomd/#tirets","title":"Tirets","text":"<p>Il n'y a pas de balise Markdown sp\u00e9cifique pour r\u00e9aliser des tirets cadratins ou demi-cadratins. On utilise des balises HTML pour cr\u00e9er ces tirets.</p> <ul> <li>tiret long ou tiret cadratin :</li> </ul> HTMLAper\u00e7u <p><code>&amp;mdash;</code></p> <p>\u2014</p> <ul> <li>tiret moyen ou tiret demi-cadratin</li> </ul> HTMLAper\u00e7u <p><code>&amp;ndash;</code></p> <p>\u2013</p>"},{"location":"jupyter/memomd/#touches-clavier","title":"Touches clavier","text":"MarkdownHTMLAper\u00e7u <pre><code>++ctrl+alt+del++\n</code></pre> <pre><code>&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt;\n</code></pre> <p>Ctrl+Alt+Del</p>"},{"location":"jupyter/memomd/#notes-de-bas-de-page","title":"Notes de bas de page","text":"Markdown <pre><code>Voici une r\u00e9f\u00e9rence \u00e0 une note de bas de page[^a].\nEt une autre[^b].  \nOn peut rappeler une m\u00eame r\u00e9f\u00e9rence plusieurs fois[^b].\n\n[^a]: Les notes de bas de page peuvent \u00eatre **mises en forme**,  \net sur plusieurs lignes.  \n[^b]: Autre note de bas de page.\n</code></pre> <p>Aper\u00e7u :  Voici une r\u00e9f\u00e9rence \u00e0 une note de bas de page1. Et une autre2. On peut rappeler une m\u00eame r\u00e9f\u00e9rence plusieurs fois2.</p> <ol> <li> <p>Les notes de bas de page peuvent \u00eatre mises en forme, et sur plusieurs lignes.\u00a0\u21a9</p> </li> <li> <p>Autre note de bas de page.\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"jupyter/notebooks/","title":"Quelques notebooks","text":"<p>Les liens suivants ouvriront les notebooks vis\u00e9s dans basthon.fr.</p> <p> </p> <ul> <li>Positionner des milieux </li> <li> <p>Positionner des centres de gravit\u00e9</p> </li> <li> <p>Lumi\u00e8re !</p> </li> </ul>"},{"location":"jupyter/p5brouillon/","title":"P5brouillon","text":""},{"location":"jupyter/p5brouillon/#dom","title":"DOM","text":""},{"location":"jupyter/p5brouillon/#creationsuppression-delements","title":"Cr\u00e9ation/suppression d'\u00e9l\u00e9ments","text":"syntaxe description createDiv(contenu html) Cr\u00e9e un \u00e9l\u00e9ment <code>&lt;div&gt;&lt;/div&gt;</code> createP(contenu html) Cr\u00e9e un \u00e9l\u00e9ment <code>&lt;p&gt;&lt;/p&gt;</code> createElement(balise, contenu) Cr\u00e9e un \u00e9l\u00e9ment <code>&lt;balise&gt;&lt;/balise&gt;</code> createInput() Cr\u00e9e un \u00e9l\u00e9ment <code>&lt;input&gt;&lt;/input&gt;</code> pour ins\u00e9rer du texte createButton() createCheckbox() Cr\u00e9e un \u00e9l\u00e9ment <code>&lt;input&gt;&lt;/input&gt;</code>  de type checkbox (case \u00e0 cocher). La valeur bool\u00e9enne de la case est donn\u00e9e par la m\u00e9thode <code>.checked()</code>. createSlider() Cr\u00e9e un \u00e9l\u00e9ment <code>&lt;input&gt;&lt;/input&gt;</code>  de type range (curseur) removeElements() supprime les \u00e9l\u00e9ments cr\u00e9\u00e9s (sauf celui cr\u00e9\u00e9 par createCanvas)"},{"location":"jupyter/p5brouillon/#methodes-liees-aux-elements","title":"M\u00e9thodes li\u00e9es aux \u00e9l\u00e9ments","text":"syntaxe description element.size(largeur, hauteur) M\u00e9thode qui sp\u00e9cifie les dimensions de <code>element</code> element.position(x, y) M\u00e9thode qui sp\u00e9cifie la position de <code>element</code> element.style(propri\u00e9t\u00e9, valeur) M\u00e9thode qui sp\u00e9cifie la valeur attribu\u00e9e \u00e0 une propri\u00e9t\u00e9 CSS de <code>element</code>. element.value() M\u00e9thode qui renvoie la valeur de <code>element</code> element.show() Rend <code>element</code> visible element.hide() Rend <code>element</code> invisible element.remove() Supprime <code>element</code> du DOM"},{"location":"microbit/bme280/","title":"Bme280","text":"In\u00a0[\u00a0]: Copied! In\u00a0[\u00a0]: Copied! <pre>import microbit\nimport gc\nimport struct\n</pre> import microbit import gc import struct In\u00a0[\u00a0]: Copied! <pre>ADDR=0x76\n</pre> ADDR=0x76 In\u00a0[\u00a0]: Copied! <pre># 500ms standby time, 16 filter coef\nCONFIG = 0b10010000\n</pre> # 500ms standby time, 16 filter coef CONFIG = 0b10010000 In\u00a0[\u00a0]: Copied! <pre># x16 oversampling, normal mode\nCTRL_MEAS = 0b10110111\n</pre> # x16 oversampling, normal mode CTRL_MEAS = 0b10110111 In\u00a0[\u00a0]: Copied! <pre># x16 humidity oversampling\nCTRL_HUM = 0b00000101\n</pre> # x16 humidity oversampling CTRL_HUM = 0b00000101 In\u00a0[\u00a0]: Copied! <pre>R_CHIPID = 0xD0\nR_VERSION = 0xD1\nR_SOFTRESET = 0xE0\nR_CONTROL = 0xF4\nR_HCONTROL = 0xF2\nR_CONFIG  = 0xF5\nR_STATUS = 0xF3\n</pre> R_CHIPID = 0xD0 R_VERSION = 0xD1 R_SOFTRESET = 0xE0 R_CONTROL = 0xF4 R_HCONTROL = 0xF2 R_CONFIG  = 0xF5 R_STATUS = 0xF3 In\u00a0[\u00a0]: Copied! <pre>def i2c_read(address, reg, length=1):\n    microbit.i2c.write(address, bytes([reg]), repeat=True)\n    return microbit.i2c.read(address, length)\n</pre> def i2c_read(address, reg, length=1):     microbit.i2c.write(address, bytes([reg]), repeat=True)     return microbit.i2c.read(address, length) In\u00a0[\u00a0]: Copied! <pre>def i2c_write(address, reg, value):\n    microbit.i2c.write(address, bytes([reg, value]))\n</pre> def i2c_write(address, reg, value):     microbit.i2c.write(address, bytes([reg, value])) In\u00a0[\u00a0]: Copied! <pre>class bme280():\n    def __init__(self, i2c_bus=None, addr=ADDR):\n        self._temperature = 0\n        self._pressure = 0\n        self._altitude = 0\n        self._qnh = 1013.25 # hPa\n\n        self.addr = addr\n\n        i2c_write(self.addr, R_SOFTRESET, 0xB6)\n        microbit.sleep(200)\n        i2c_write(self.addr, R_HCONTROL, CTRL_HUM)\n        microbit.sleep(200)\n        i2c_write(self.addr, R_CONTROL, CTRL_MEAS)\n        microbit.sleep(200)\n        i2c_write(self.addr, R_CONFIG, CONFIG)\n        microbit.sleep(200)\n\n        self.compensation = i2c_read(self.addr, 0x88, 26)\n        self.compensation += i2c_read(self.addr, 0xe1, 7)\n\n    def set_qnh(self, qnh):\n        self._qnh = qnh\n\n    def temperature(self):\n        self.update()\n        gc.collect()\n        return self._temperature\n\n    def pressure(self):\n        self.update()\n        gc.collect()\n        return self._pressure\n        \n    def humidity(self):\n        self.update()\n        gc.collect()\n        return self._humidity\n\n    def altitude(self):\n        self.update()\n        gc.collect()\n        return self._altitude\n        \n    def all(self):\n        self.update()\n        gc.collect()\n        return self._temperature, self._pressure, self._humidity, self._altitude\n\n    def update(self):\n        dig_T1, dig_T2, dig_T3, \\\n            dig_P1, dig_P2, dig_P3, \\\n            dig_P4, dig_P5, dig_P6, \\\n            dig_P7, dig_P8, dig_P9, \\\n            _, \\\n            dig_H1, dig_H2, dig_H3, \\\n            reg_E4, reg_E5, reg_E6, \\\n            dig_H6 = struct.unpack(\"&lt;HhhHhhhhhhhhbBhBbBbb\", self.compensation)\n\n        dig_H4 = (reg_E5 &amp; 0x0f) | (reg_E4 &lt;&lt; 4)\n        dig_H5 = (reg_E5 &gt;&gt; 4) | (reg_E6 &lt;&lt; 4)\n\n        if dig_H4 &amp; (1 &lt;&lt; 12):\n            dig_H4 -= 1 &lt;&lt; 12\n        if dig_H5 &amp; (1 &lt;&lt; 11):\n            dig_H5 -= 1 &lt;&lt; 12\n            \n        raw = i2c_read(self.addr, 0xF7, 8)\n\n        raw_temp=(raw[3]&lt;&lt;12)|(raw[4]&lt;&lt;4)|(raw[5]&gt;&gt;4)\n        raw_press=(raw[0]&lt;&lt;12)|(raw[1]&lt;&lt;4)|(raw[2]&gt;&gt;4)\n        raw_hum=(raw[6]&lt;&lt;8)|raw[7]\n\n        var1=(raw_temp/16384.0-dig_T1/1024.0)*dig_T2\n        var2=(raw_temp/131072.0-dig_T1/8192.0)*(raw_temp/131072.0-dig_T1/8192.0)*dig_T3\n        temp=(var1+var2)/5120.0\n        t_fine=(var1+var2)\n\n        var1=t_fine/2.0-64000.0\n        var2=var1*var1*dig_P6/32768.0\n        var2=var2+var1*dig_P5*2\n        var2=var2/4.0+dig_P4*65536.0\n        var1=(dig_P3*var1*var1/524288.0+dig_P2*var1)/524288.0\n        var1=(1.0+var1/32768.0)*dig_P1\n        press=1048576.0-raw_press\n        press=(press-var2/4096.0)*6250.0/var1\n        var1=dig_P9*press*press/2147483648.0\n        var2=press*dig_P8/32768.0\n        press=press+(var1+var2+dig_P7)/16.0\n\n        var1 = t_fine - 76800.0\n        var2 = dig_H4 * 64.0 + (dig_H5 / 16384.0) * var1\n        var3 = raw_hum - var2\n        var4 = dig_H2 / 65536.0\n        var5 = 1.0 + (dig_H3 / 67108864.0) * var1\n        var6 = 1.0 + (dig_H6 / 67108864.0) * var1 * var5\n        var6 = var3 * var4 * (var5 * var6)\n\n        h = var6 * (1.0 - dig_H1 * var6 / 524288.0)\n        h = max(0, min(100, h))\n\n        self._temperature = temp\n        self._pressure = press / 100.0\n        self._humidity = h\n        self._altitude = 44330.0 * (1.0 - pow(self._pressure / self._qnh, (1.0/5.255)))\n</pre> class bme280():     def __init__(self, i2c_bus=None, addr=ADDR):         self._temperature = 0         self._pressure = 0         self._altitude = 0         self._qnh = 1013.25 # hPa          self.addr = addr          i2c_write(self.addr, R_SOFTRESET, 0xB6)         microbit.sleep(200)         i2c_write(self.addr, R_HCONTROL, CTRL_HUM)         microbit.sleep(200)         i2c_write(self.addr, R_CONTROL, CTRL_MEAS)         microbit.sleep(200)         i2c_write(self.addr, R_CONFIG, CONFIG)         microbit.sleep(200)          self.compensation = i2c_read(self.addr, 0x88, 26)         self.compensation += i2c_read(self.addr, 0xe1, 7)      def set_qnh(self, qnh):         self._qnh = qnh      def temperature(self):         self.update()         gc.collect()         return self._temperature      def pressure(self):         self.update()         gc.collect()         return self._pressure              def humidity(self):         self.update()         gc.collect()         return self._humidity      def altitude(self):         self.update()         gc.collect()         return self._altitude              def all(self):         self.update()         gc.collect()         return self._temperature, self._pressure, self._humidity, self._altitude      def update(self):         dig_T1, dig_T2, dig_T3, \\             dig_P1, dig_P2, dig_P3, \\             dig_P4, dig_P5, dig_P6, \\             dig_P7, dig_P8, dig_P9, \\             _, \\             dig_H1, dig_H2, dig_H3, \\             reg_E4, reg_E5, reg_E6, \\             dig_H6 = struct.unpack(\"&gt; 4) | (reg_E6 &lt;&lt; 4)          if dig_H4 &amp; (1 &lt;&lt; 12):             dig_H4 -= 1 &lt;&lt; 12         if dig_H5 &amp; (1 &lt;&lt; 11):             dig_H5 -= 1 &lt;&lt; 12                      raw = i2c_read(self.addr, 0xF7, 8)          raw_temp=(raw[3]&lt;&lt;12)|(raw[4]&lt;&lt;4)|(raw[5]&gt;&gt;4)         raw_press=(raw[0]&lt;&lt;12)|(raw[1]&lt;&lt;4)|(raw[2]&gt;&gt;4)         raw_hum=(raw[6]&lt;&lt;8)|raw[7]          var1=(raw_temp/16384.0-dig_T1/1024.0)*dig_T2         var2=(raw_temp/131072.0-dig_T1/8192.0)*(raw_temp/131072.0-dig_T1/8192.0)*dig_T3         temp=(var1+var2)/5120.0         t_fine=(var1+var2)          var1=t_fine/2.0-64000.0         var2=var1*var1*dig_P6/32768.0         var2=var2+var1*dig_P5*2         var2=var2/4.0+dig_P4*65536.0         var1=(dig_P3*var1*var1/524288.0+dig_P2*var1)/524288.0         var1=(1.0+var1/32768.0)*dig_P1         press=1048576.0-raw_press         press=(press-var2/4096.0)*6250.0/var1         var1=dig_P9*press*press/2147483648.0         var2=press*dig_P8/32768.0         press=press+(var1+var2+dig_P7)/16.0          var1 = t_fine - 76800.0         var2 = dig_H4 * 64.0 + (dig_H5 / 16384.0) * var1         var3 = raw_hum - var2         var4 = dig_H2 / 65536.0         var5 = 1.0 + (dig_H3 / 67108864.0) * var1         var6 = 1.0 + (dig_H6 / 67108864.0) * var1 * var5         var6 = var3 * var4 * (var5 * var6)          h = var6 * (1.0 - dig_H1 * var6 / 524288.0)         h = max(0, min(100, h))          self._temperature = temp         self._pressure = press / 100.0         self._humidity = h         self._altitude = 44330.0 * (1.0 - pow(self._pressure / self._qnh, (1.0/5.255))) In\u00a0[\u00a0]: Copied! <pre>bmp280 = bme280\n</pre> bmp280 = bme280 In\u00a0[\u00a0]: Copied! <pre>if __name__ == \"__main__\":\n    b = bme280()\n    while True:\n        t, p, h, a = b.all()\n        print(\"T: {t}, P: {p}, H: {h}, A: {a}\".format(t=t,p=p,h=h,a=a))\n        microbit.sleep(1000)\n</pre> if __name__ == \"__main__\":     b = bme280()     while True:         t, p, h, a = b.all()         print(\"T: {t}, P: {p}, H: {h}, A: {a}\".format(t=t,p=p,h=h,a=a))         microbit.sleep(1000)"},{"location":"microbit/decouvrir_microbit/","title":"La carte micro:bit","text":""},{"location":"microbit/decouvrir_microbit/#quest-ce-quune-carte-microbit","title":"Qu'est-ce qu'une carte micro:bit ?","text":"<p>La carte BBC micro:bit est une carte micro-contr\u00f4leur de 5 cm sur 4 cm, qui a \u00e9t\u00e9 con\u00e7ue \u2014 notamment par la BBC \u2014 dans un objectif p\u00e9dagogique. Elle se programme \u00e0 l'aide de diff\u00e9rentes interfaces et diff\u00e9rents langages, permettant \u00e0 des \u00e9l\u00e8ves de tous niveaux d\u2019aborder la robotique et d'interagir avec le monde r\u00e9el.</p> <p> </p>"},{"location":"microbit/decouvrir_microbit/#description-des-composants","title":"Description des composants","text":"<p>Elle comporte \u00e0 l'avant:  </p> <ul> <li>25 LEDs rouges, programmables pour afficher du texte qui d\u00e9file ou des images ; elles sont aussi des capteurs de lumi\u00e8re</li> <li>deux boutons poussoirs A et B programmables,</li> <li>des broches de connexion.</li> </ul> <p>Et \u00e0 l'arri\u00e8re : </p> <ol> <li>une antenne radio et bluetooth,</li> <li>un micro-processeur et capteur de temp\u00e9rature, </li> <li>un magn\u00e9tom\u00e8tre (boussole) permettant de mesurer des champs magn\u00e9tiques,</li> <li>un acc\u00e9l\u00e9rom\u00e8tre permettant de capter des mouvements en trois dimensions. Il d\u00e9termine le tangage, le roulis et le lacet.</li> <li>des broches de connexion pour contr\u00f4ler des composants externes</li> <li>un port micro-USB permettant d'alimenter la carte et de transf\u00e9rer des programmes,</li> <li>une led qui sert de t\u00e9moin lumineux pour l'alimentation de la carte ou le t\u00e9l\u00e9chargement de programme,</li> <li>un bouton de r\u00e9initialisation,</li> <li>un connecteur d'alimentation (2 piles AAA - 3V),</li> <li>une puce d'interface USB.</li> </ol> <p>La version 2, distribu\u00e9e \u00e0 partir de fin 2020, comporte \u00e9galement un micro et un haut-parleur.</p> <p>L'alimentation se fait par le port micro-USB lorsqu'il est connect\u00e9 \u00e0 un ordinateur ou \u00e0 l'aide de piles.  </p>"},{"location":"microbit/decouvrir_microbit/#calibrer-la-boussole","title":"Calibrer la boussole","text":"<p>Lors de l'usage de certaines fonctionnalit\u00e9s de la carte comme la boussole, un calibrage est n\u00e9cessaire. Le message TILT TO FILL SCREEN d\u00e9file \u00e0 l'\u00e9cran et le pixel central clignote. En inclinant la carte, ce pixel semble se d\u00e9placer comme sous l'effet de la pesanteur, en allumant toutes les leds rencontr\u00e9es sur son chemin. Incliner la micro:bit dans tous les sens jusqu\u2019\u00e0 ce que les leds du panneau d'affichage soient toutes allum\u00e9es. D\u00e9monstration en vid\u00e9o</p>"},{"location":"microbit/decouvrir_microbit/#programmer-la-carte-microbit","title":"Programmer la carte micro:bit","text":"<p>Plusieurs interfaces permettent de programmer la carte, dans diff\u00e9rents langages, dans un navigateur ou \u00e0 l'aide d'un logiciel install\u00e9. Les programmes se transf\u00e8rent dans la carte depuis un ordinateur \u00e0 l'aide d'un c\u00e2ble USB connect\u00e9 au port micro-USB ou sans fil par Bluetooth. </p> <p>Ce site propose des exemples : - de programmation par blocs avec MakeCode - de programmation par blocs avec Scratch - de programmation Python avec l'\u00e9diteur Python en ligne ou Mu </p>"},{"location":"microbit/decouvrir_microbit/#mettre-a-jour-le-firmware-de-la-carte-microbit","title":"Mettre \u00e0 jour le firmware de la carte micro:bit","text":"<p>Le firmware est un logiciel qui est physiquement stock\u00e9 dans la puce de la carte micro:bit mais qui n'est pas modifi\u00e9 lors de l'\u00e9criture de programmes ou lorsque la carte micro:bit est \u00e9teinte. Il est possible de  mettre \u00e0 jour le firmware pour utiliser de nouvelles fonctionnalit\u00e9s telles que WebUSB.  </p>"},{"location":"microbit/decouvrir_microbit/#connaitre-la-version-du-firmware-installe","title":"Conna\u00eetre la version du firmware install\u00e9","text":"<p>Pour conna\u00eetre la version du firmware install\u00e9 sur une carte micro:bit, connecter la carte \u00e0 l'aide du c\u00e2ble USB \u00e0 un ordianateur : elle appara\u00eet dans le gestionnaire de fichiers sous le nom MICROBIT. Ouvrir le fichier DETAILS.TXT du lecteur MICROBIT et rechercher le num\u00e9ro sur la ligne qui commence par \u00ab Interface Version \u00bb.</p>"},{"location":"microbit/decouvrir_microbit/#comment-mettre-a-jour-le-firmware","title":"Comment mettre \u00e0 jour le firmware ?","text":"<ol> <li>D\u00e9connecter le c\u00e2ble USB et la batterie de la carte micro:bit.  </li> <li> <p>Maintenir le bouton de r\u00e9initialisation \u00e0 l'arri\u00e8re la carte tout en connectant la carte \u00e0 un ordinateur \u00e0 l'aide du c\u00e2ble USB. Un lecteur devrait appara\u00eetre dans le gestionnaire de fichiers appel\u00e9 MAINTENANCE (au lieu de MICROBIT). </p> </li> <li> <p>T\u00e9l\u00e9charger le fichier <code>.hex</code> de cette page sur votre ordinateur.  </p> </li> <li>Faire glisser et d\u00e9poser le nouveau fichier <code>.hex</code> du firmware  sur le lecteur MAINTENANCE et attendre que le voyant orange \u00e0 l'arri\u00e8re de la carte cesse de clignoter. Lorsque la mise \u00e0 niveau est termin\u00e9e, la carte micro:bit se r\u00e9initialise, s\u2019\u00e9jecte de l\u2019ordinateur et r\u00e9appara\u00eet sous le nom MICROBIT habituel.  </li> <li>En consultant le fichier DETAILS.TXT qui se trouve sur le lecteur MICROBIT on peut s'assurer que le firmware a le m\u00eame num\u00e9ro de version que celle qui a \u00e9t\u00e9 t\u00e9l\u00e9charg\u00e9e.</li> </ol>"},{"location":"microbit/decouvrir_microbit/#utiliser-la-fonctionnalite-webusb","title":"Utiliser la fonctionnalit\u00e9 WebUSB","text":"<p>Le transfert de programme se fait g\u00e9n\u00e9ralement en t\u00e9l\u00e9chargeant le fichier <code>.hex</code> du programme, puis en le copiant sur la carte.</p> <p>Avec un navigateur Web r\u00e9cent, on peut envoyer ses programmes directement \u00e0 la carte micro:bit \u00e0 partir des \u00e9diteurs MakeCode et Python sans avoir \u00e0 t\u00e9l\u00e9charger, faire glisser et d\u00e9poser des fichiers <code>.hex</code>. Le t\u00e9l\u00e9chargement direct fait gagner du temps et simplifie la mise \u00e0 jour du code sur la carte. Il utilise un processus appel\u00e9 WebUSB, qui \u00e9tablit une connexion entre le navigateur ou l'application et la carte micro:bit via le c\u00e2ble USB.</p> <p>Pour utiliser cette fonctionnalit\u00e9, utiliser un navigateur bas\u00e9 sur Chrome, et une carte micro:bit dont la version de firmware est au moins 243 (si besoin, mettre \u00e0 jour le firmware de la carte). Lorsque cette fonctionnalit\u00e9 est disponible, le navigateur vous proposer de connecter (ou appairer) la carte. Une fois la connexion \u00e9tablie, le t\u00e9l\u00e9chargement direct en un clic est possible.</p>"},{"location":"microbit/decouvrir_microbit/#references","title":"R\u00e9f\u00e9rences","text":"<p>R\u00e9f\u00e9rences</p> <ul> <li>le site de la fondation micro:bit </li> <li>le site de documentation technique de la carte </li> <li>l'article micro:bit sur wikipedia </li> <li>la page d\u00e9di\u00e9e \u00e0 micro:bit sur le site de la C2ITice</li> </ul>"},{"location":"microbit/makecode/","title":"Programmer la carte avec l'\u00e9diteur Blocs de MakeCode pour micro:bit","text":""},{"location":"microbit/makecode/#interface-de-programmation-par-blocs","title":"Interface de programmation par blocs","text":"<p>Cette interface, d\u00e9velopp\u00e9e par MakeCode en partenariat avec micro:bit, se trouve en ligne et s'utilise directement dans un navigateur. Elle est sans doute id\u00e9ale pour d\u00e9buter : aucun pr\u00e9-requis n'est n\u00e9cessaire, et on peut param\u00e9trer l'affichage en fran\u00e7ais.  </p> <p> L'utilisateur manipule et emboite des blocs pour cr\u00e9er son programme. Le simulateur affiche le fonctionnement du programme.  </p>"},{"location":"microbit/makecode/#le-simulateur","title":"Le simulateur","text":"<p>L'interface MakeCode dispose d'un simulateur de la carte micro:bit qui permet d'observer le fonctionnement du programme et d'effectuer les premi\u00e8res corrections. Les donn\u00e9es des capteurs peuvent \u00eatre simul\u00e9es \u00e9galement, avec des curseurs manipulables \u00e0 la souris, et on peut simuler le fait de secouer la carte.</p> <p></p>"},{"location":"microbit/makecode/#sauvegarder-son-programme","title":"Sauvegarder son programme","text":"<p>Le navigateur conserve par d\u00e9faut les donn\u00e9es des programmes r\u00e9alis\u00e9s et une ouverture ult\u00e9rieure de l'\u00e9diteur affiche le dernier programme par d\u00e9faut.</p>"},{"location":"microbit/makecode/#methode-classique","title":"M\u00e9thode classique","text":"<p>Le programme r\u00e9alis\u00e9 est \u00e0 t\u00e9l\u00e9charger pour \u00eatre copi\u00e9 dans la carte micro:bit. Lui donner un nom puis cliquer sur T\u00e9l\u00e9charger. Le format du fichier t\u00e9l\u00e9charg\u00e9 est <code>.hex</code>: c'est \u00e0 la fois le fichier \u00e0 copier dans la carte pour qu'elle l'ex\u00e9cute et celui \u00e0 sauvegarder dans ses documents personnels pour ouvrir ult\u00e9rieurement le programme dans l'\u00e9diteur. </p> <p>Lorsque la carte est connect\u00e9e \u00e0 l'ordinateur par port USB elle appara\u00eet sous le nom MICROBIT. Aucun pilote n'est n\u00e9cessaire. Copier-coller le programme <code>.hex</code> t\u00e9l\u00e9charg\u00e9 sur la carte : une led orange clignote pendant le chargement. Apr\u00e8s le transfert, la carte micro:bit s\u2019\u00e9jecte de l\u2019ordinateur puis se reconnecte. Le fichier t\u00e9l\u00e9charg\u00e9 n'apparait pas sur la carte dans le gestionnaire de fichiers comme sur une cl\u00e9 USB, mais le programme doit s'ex\u00e9cuter directement sur la carte apr\u00e8s le transfert. </p>"},{"location":"microbit/makecode/#methode-webusb","title":"M\u00e9thode WebUSB","text":"<p>Depuis la version 243 du firmware, les navigateurs bas\u00e9s sur Chrome (versions 65 et +) proposent d'appairer la carte, permettant le t\u00e9l\u00e9chargement du programme en un clic, en utilisant la norme WebUSB.</p>"},{"location":"microbit/makecode/#le-mode-debug","title":"Le mode Debug","text":"<p>Ce mode s'active en cliquant sur l'ic\u00f4ne .  Il permet : - d'ex\u00e9cuter le programme pas \u00e0 pas ou au ralenti, en mettant en \u00e9vidence l'instruction ex\u00e9cut\u00e9e - de placer des points d'arr\u00eat dans le programme : lorsqu'une instruction marqu\u00e9e d'un point est sur le point d'\u00eatre ex\u00e9cut\u00e9e, le programme s'interrompt -d'afficher les valeurs des variables.  </p> <p>Il est tr\u00e8s utile pour d\u00e9celer les bugs d'un programme ou pour expliquer le fonctionnement d'un programme correct.</p> <p></p>"},{"location":"microbit/makecode/#le-mode-multi","title":"Le mode Multi","text":"<p>Ce mode permet l'affichage de deux interfaces de programmation : il est tr\u00e8s utile pour connecter et programmer deux cartes avec des programmes diff\u00e9rents. Par exemple, si une carte doit \u00e9mettre un signal radio et une autre le r\u00e9ceptionner.   </p> <p>Lors de l'appairage des cartes, les identifiants complets des cartes sont affich\u00e9s pour les diff\u00e9rencier. </p>"},{"location":"microbit/makecode/#references","title":"R\u00e9f\u00e9rences","text":"<p>Cliquer sur les logos pour acc\u00e9der \u00e0 la documentation micro:bit sur chaque type de blocs.  </p> Type de blocs Exemple de blocs <code>montrer nombre</code>, <code>montrer LEDs</code>, <code>montrer l'ic\u00f4ne</code>, <code>afficher texte</code>, <code>effacer l'\u00e9cran</code>, <code>toujours</code>, <code>au d\u00e9marrage</code>, <code>pause</code>, <code>montrer la fl\u00e8che</code>. <code>lorsque le bouton A est press\u00e9</code>, <code>lorsque secouer</code>, <code>lorsque la broche P0 est activ\u00e9e</code>, <code>bouton A press\u00e9</code>, <code>acc\u00e9l\u00e9ration</code>, <code>niveau d'intensit\u00e9 lumineuse</code>, <code>direction de la boussole</code> , <code>temp\u00e9rature</code>, etc. <code>jouer la m\u00e9lodie</code>, <code>jouer ton</code>, <code>buzz</code>, etc. <code>allumer x y</code>, <code>activer/d\u00e9sactiver x y</code>,  <code>\u00e9teindre</code>,<code>tracer le graphe</code>, etc. <code>d\u00e9finir radio groupe</code>, <code>envoyer le nombre  par radio</code>, <code>envoyer la chaine par radio</code>, <code>envoyer la valeur par radio</code>, <code>quand une donn\u00e9e est re\u00e7ue par radio</code>, etc. <code>r\u00e9p\u00e9ter n fois</code>, <code>tant que</code>, <code>pour index variant de 0 \u00e0 4</code>, <code>pour l'\u00e9l\u00e9ment valeur de list</code>, etc. <code>si \u2026 alors \u2026</code>, <code>si \u2026 alors \u2026 sinon</code>, comparaisons, <code>et</code>, <code>ou</code>, <code>non</code>, etc. <code>cr\u00e9er une variable</code>, etc. <code>+</code>, <code>\u2014</code>, <code>x</code>, <code>\u00f7</code>, <code>reste</code>, <code>min</code>, <code>max</code>, <code>choisir au hasard</code>, etc."},{"location":"microbit/mb_lcd_mono_grove/","title":"(c) 2021 Christophe Gueneau","text":"In\u00a0[\u00a0]: Copied! <pre># (c) 2021 Christophe Gueneau\nfrom microbit import *\nimport time\n</pre> # (c) 2021 Christophe Gueneau from microbit import * import time In\u00a0[\u00a0]: Copied! <pre>class mb_lcd_mono_grove():\n    def __init__(self):\n        self.disp_func = 0x04 | 0x08\n        time.sleep_ms(50)\n        self.cmd(0x20 | self.disp_func)\n        time.sleep_us(4500)\n        self.cmd(0x20 | self.disp_func)\n        time.sleep_us(150)\n        self.cmd(0x20 | self.disp_func)\n        self.cmd(0x20 | self.disp_func)\n        self.disp_ctrl = 0x04 | 0x00 | 0x00\n        self.display1(True)\n        self.clear()\n        self.disp_mode = 0x02 | 0x00\n        self.cmd(0x04 | self.disp_mode)\n\n    def cmd(self, command):\n        assert command &gt;= 0 and command &lt; 256\n        val = bytes((0x80, command))\n        i2c.write(0x3e, val)\n\n    def write_char(self, c):\n        assert c &gt;= 0 and c &lt; 256\n        val = bytes((0x40, c))\n        i2c.write(0x3e, val)\n\n    def write(self, text):\n        text = str(text)\n        for char in text:\n            self.write_char(ord(char))\n\n    def setCursor(self, col, row):\n        col = (col | 0x80) if row == 0 else (col | 0xc0)\n        self.cmd(col)\n\n    def display1(self, state):\n        if state:\n            self.disp_ctrl |= 0x04\n            self.cmd(0x08  | self.disp_ctrl)\n        else:\n            self.disp_ctrl &amp;= ~0x04\n            self.cmd(0x08  | self.disp_ctrl)\n\n    def clear(self):\n        self.cmd(0x01)\n        time.sleep_ms(2)\n</pre> class mb_lcd_mono_grove():     def __init__(self):         self.disp_func = 0x04 | 0x08         time.sleep_ms(50)         self.cmd(0x20 | self.disp_func)         time.sleep_us(4500)         self.cmd(0x20 | self.disp_func)         time.sleep_us(150)         self.cmd(0x20 | self.disp_func)         self.cmd(0x20 | self.disp_func)         self.disp_ctrl = 0x04 | 0x00 | 0x00         self.display1(True)         self.clear()         self.disp_mode = 0x02 | 0x00         self.cmd(0x04 | self.disp_mode)      def cmd(self, command):         assert command &gt;= 0 and command &lt; 256         val = bytes((0x80, command))         i2c.write(0x3e, val)      def write_char(self, c):         assert c &gt;= 0 and c &lt; 256         val = bytes((0x40, c))         i2c.write(0x3e, val)      def write(self, text):         text = str(text)         for char in text:             self.write_char(ord(char))      def setCursor(self, col, row):         col = (col | 0x80) if row == 0 else (col | 0xc0)         self.cmd(col)      def display1(self, state):         if state:             self.disp_ctrl |= 0x04             self.cmd(0x08  | self.disp_ctrl)         else:             self.disp_ctrl &amp;= ~0x04             self.cmd(0x08  | self.disp_ctrl)      def clear(self):         self.cmd(0x01)         time.sleep_ms(2) In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"microbit/mc_radio/","title":"Un parcours pour d\u00e9couvrir la fonctionnalit\u00e9 radio","text":""},{"location":"microbit/mc_radio/#le-mode-multi","title":"Le mode Multi","text":"<p>Ce mode permet l'affichage de deux interfaces de programmation : il est tr\u00e8s utile pour connecter et programmer deux cartes avec des programmes diff\u00e9rents. Par exemple, si une carte doit \u00e9mettre un signal radio et une autre le r\u00e9ceptionner.   </p>"},{"location":"microbit/python_accelerometre/","title":"L'acc\u00e9l\u00e9rom\u00e8tre","text":""},{"location":"microbit/python_accelerometre/#laccelerometre_1","title":"L'acc\u00e9lerom\u00e8tre","text":"<p>La carte micro:bit comporte un acc\u00e9l\u00e9rom\u00e8tre, d\u00e9sign\u00e9 par <code>accelerometer</code>. Il permet de conna\u00eetre l'orientation de la carte selon 3 axes :  </p> <ul> <li><code>x</code>, l\u2019inclinaison de gauche \u00e0 droite (roulis),</li> <li><code>y</code>, l\u2019inclinaison d\u2019avant en arri\u00e8re (tangage),</li> <li><code>z</code>, le mouvement haut et bas.</li> </ul> Instructions Effet <code>accelerometer.get_x()</code> renvoie une valeur d'inclinaison gauche - droite <code>accelerometer.get_y()</code> renvoie une valeur d'inclinaison avant - arri\u00e8re <code>accelerometer.get_z()</code> renvoie la mesure de l'acc\u00e9l\u00e9ration selon l'axe <code>z</code> <code>accelerometer.get_values()</code> affiche un triplet (tuple) des 3 mesures selon <code>x</code>, <code>y</code>, et <code>z</code>."},{"location":"microbit/python_accelerometre/#les-gestes","title":"Les gestes","text":"<p>Gr\u00e2ce \u00e0 l'acc\u00e9l\u00e9rom\u00e8tre, la carte micro:bit reconna\u00eet les mouvements qu'elle subit ainsi que son orientation. Elle peut d\u00e9tecter les gestes suivants : <code>up, down, left, right, face up, face down, freefall, 3g, 6g, 8g, shake</code></p> Instructions Effet <code>accelerometer.current_gesture()</code> Renvoie le nom du geste actuel <code>accelerometer.is_gesture(nom)</code> Vaut <code>True</code> si <code>nom</code> correspond au geste actuel <code>accelerometer.was_gesture(nom)</code> Vaut <code>True</code> si le geste <code>nom</code> a \u00e9t\u00e9 activ\u00e9 depuis le dernier appel <code>accelerometer.get_gestures()</code> Renvoie un p-uplet (tuple) contenant l'historique des gestes activ\u00e9s depuis le dernier appel"},{"location":"microbit/python_accelerometre/#exemple","title":"Exemple","text":"<p><pre><code>from microbit import *\n\nwhile True:\n    if(accelerometer.current_gesture() == 'up'):\n        display.show(Image.ARROW_N)\n    elif(accelerometer.current_gesture() == 'down'):\n        display.show(Image.ARROW_S)\n    elif(accelerometer.current_gesture() == 'left'):\n        display.show(Image.ARROW_E)\n    elif(accelerometer.current_gesture() == 'right'):\n        display.show(Image.ARROW_W)\n    else:\n        display.clear()\n    sleep(100)\n</code></pre> Lorsqu'on ex\u00e9cute ce programme, une fl\u00e8che d\u00e9signe le c\u00f4t\u00e9 de la carte tourn\u00e9 vers le haut. Si la carte est pos\u00e9e \"\u00e0 plat\" aucun affichage n'est r\u00e9alis\u00e9.</p>"},{"location":"microbit/python_accelerometre/#references","title":"R\u00e9f\u00e9rences","text":"<p>Gestes La classe Accelerometer</p>"},{"location":"microbit/python_boutons/","title":"Les boutons","text":""},{"location":"microbit/python_boutons/#les-boutons_1","title":"Les boutons","text":"<p>La carte micro:bit comporte deux boutons, nomm\u00e9s <code>button_a</code> et <code>button_b</code>.</p>"},{"location":"microbit/python_boutons/#detecter-lappui-sur-un-bouton","title":"D\u00e9tecter l'appui sur un bouton","text":"<p>La m\u00e9thode <code>is_pressed()</code> permet de savoir si un bouton est press\u00e9 au moment o\u00f9 la m\u00e9thode est invoqu\u00e9e.</p> Instructions Effet <code>button_a.is_pressed()</code> Vaut <code>True</code> si le bouton A est appuy\u00e9, <code>False</code> sinon"},{"location":"microbit/python_boutons/#detecter-si-un-bouton-a-ete-appuye","title":"D\u00e9tecter si un bouton a \u00e9t\u00e9 appuy\u00e9","text":"<p>Il est utile d'avoir recours \u00e0 la m\u00e9thode <code>was_pressed()</code> pour savoir si un bouton a \u00e9t\u00e9 actionn\u00e9 pendant que le programme \u00e9tait occup\u00e9 \u00e0 une autre t\u00e2che.</p> Instructions Effet <code>button_a.was_pressed()</code> Vaut <code>True</code> si le bouton A a \u00e9t\u00e9 appuy\u00e9, <code>False</code> sinon"},{"location":"microbit/python_boutons/#compter-les-appuis","title":"Compter les appuis","text":"Instructions Effet <code>button_a.get_presses()</code> Renvoie le nombre d'appuis sur le bouton A et remet \u00e0 z\u00e9ro le compteur d'appuis"},{"location":"microbit/python_boutons/#exemple","title":"Exemple","text":"<p><pre><code>from microbit import *\n\nwhile True:\n    if button_a.is_pressed():\n        display.show(Image.YES)\n    elif button_b.is_pressed():\n        display.show(Image.NO)\n    else:\n        display.clear()\n</code></pre> Lorsqu'on ex\u00e9cute ce programme :  </p> <ul> <li>l'image <code>YES</code> s'affiche lorsque l'on appuie sur le bouton A mais dispara\u00eet si on le rel\u00e2che</li> <li>l'image <code>NO</code> s'affiche lorsque l'on appuie sur le bouton B mais dispara\u00eet si on le rel\u00e2che</li> <li>les pixels sont tous \u00e9teints si l'on n'appuie sur aucun bouton.</li> </ul>"},{"location":"microbit/python_boutons/#references","title":"R\u00e9f\u00e9rences","text":"<p>La classe Button</p>"},{"location":"microbit/python_decouverte/","title":"Parcours de d\u00e9couverte : atteindre le niveau !","text":"<p>led acc\u00e9l\u00e9rom\u00e8tre </p> <p></p>"},{"location":"microbit/python_decouverte/#objectif","title":"Objectif","text":"<p>Ce parcours combine des instructions d'affichage d'images, de mesure du niveau de lumi\u00e8re, de d\u00e9tection de mouvements. L'objectif est de d\u00e9couvrir diff\u00e9rents capteurs de la carte et de comprendre et modifier des programmes permettant de d\u00e9tecter une valeur ou un seuil fix\u00e9 pour l'information mesur\u00e9e.</p>"},{"location":"microbit/python_decouverte/#materiel-necessaire","title":"Mat\u00e9riel n\u00e9cessaire :","text":"<ul> <li>une carte micro:bit, une lampe (par exemple celle d'un smartphone), le boitier de piles \u00e0 connecter \u00e0 la carte, un \u00e9lastique  </li> <li>en option : capteur de lumi\u00e8re du kit Grove</li> </ul>"},{"location":"microbit/python_decouverte/#de-la-lumiere","title":"De la lumi\u00e8re !","text":""},{"location":"microbit/python_decouverte/#1-afficher-une-image-predefinie","title":"1 Afficher une image pr\u00e9d\u00e9finie","text":"<p>Voici un premier programme : <pre><code>from microbit import *\ndisplay.show(Image.YES)\n</code></pre></p> <ul> <li>Saisir ce programme et le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur. Que constate-t-on ?  </li> <li>Remplacer dans le programme le mot YES par l'un des mots suivants : CHESSBOARD - DIAMOND - HAPPY - HEART - NO - SAD - SQUARE</li> <li>Choisir l'une des images et la reproduire sur une feuille \u00e0 l'aide d'un quadrillage de 5 carreaux sur 5.</li> </ul>"},{"location":"microbit/python_decouverte/#2-afficher-une-image-personnalisee","title":"2 Afficher une image personnalis\u00e9e","text":"<ul> <li> <p>Saisir ce programme et le flasher sur la carte. Que constate-t-on ? \u00c0 quoi correspondent les 0 et les 9 ? <pre><code>from microbit import *\nmon_image = Image(\"90909:\"\n                  \"09990:\"\n                  \"99999:\"\n                  \"09990:\"\n                  \"90909\")\ndisplay.show(Image.mon_image)\n</code></pre></p> </li> <li> <p>Dessiner sur une feuille \u00e0 l'aide d'un quadrillage de 5 carreaux sur 5 une image personnelle et modifier le programme pr\u00e9c\u00e9dent pour la faire appara\u00eetre sur la carte micro:bit.</p> </li> </ul>"},{"location":"microbit/python_decouverte/#3-detecter-lintensite-lumineuse","title":"3 D\u00e9tecter l'intensit\u00e9 lumineuse","text":"<p>Les LED de la carte peuvent d\u00e9tecter le niveau de lumi\u00e8re ambiante : la fonction <code>display.read_light_level()</code> renvoie une valeur comprise entre 0 et 255 : plus la valeur est \u00e9lev\u00e9e, plus l'environnement est lumineux.</p> <pre><code>from microbit import *\nwhile True:\n    niveau = display.read_light_level()\n    if niveau &gt; 220:\n        display.show(Image.YES)\n    else :\n        display.show(Image.NO)\n    sleep(200)\n</code></pre> <ul> <li>Saisir ce programme et le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur. Que faut-il faire pour que l'image Image.YES s'affiche ?  </li> <li>Modifier ce programme pour que la carte affiche un carr\u00e9 en luminosit\u00e9 \"normale\" et un diamant dans la p\u00e9nombre.</li> </ul>"},{"location":"microbit/python_decouverte/#4-option-avec-un-detecteur-de-lumiere-grove","title":"4 Option : avec un d\u00e9tecteur de lumi\u00e8re Grove","text":"<p>Placer la carte micro-bit sur le shield Grove et connecter le d\u00e9tecteur de lumi\u00e8re sur la broche P0-P14. Ce capteur renvoie sur la broche sur laquelle il est connect\u00e9 une tension proportionnelle \u00e0 l'intensit\u00e9 lumineuse. Par exemple, si le capteur est connect\u00e9 sur la broche P0, la fonction <code>pin0.read_analog()</code> renvoie une valeur enti\u00e8re d'autant plus \u00e9lev\u00e9e que l'environnement est lumineux.</p> <p>Saisir et flasher le programme suivant : <pre><code>from microbit import *\nwhile True:\n    mesure = pin0.read_analog()\n    if mesure &gt; 600:\n        display.show(Image.YES)\n    else :\n        display.show(Image.NO)\n    sleep(100)\n</code></pre></p> <ul> <li>Que peut-on faire pour que l'image Image.NO s'affiche sur la carte micro:bit ?  </li> <li>Emballer le capteur (connect\u00e9 \u00e0 la carte) dans une feuille de papier.  Modifier le programme pour que la carte affiche l'image Image.YES tant que le capteur reste emball\u00e9 et l'image Image.NO d\u00e8s que l'emballage est ouvert.</li> </ul>"},{"location":"microbit/python_decouverte/#du-mouvement","title":"Du mouvement !","text":""},{"location":"microbit/python_decouverte/#1-detecter-une-secousse","title":"1 D\u00e9tecter une secousse","text":"<p>Gr\u00e2ce \u00e0 un acc\u00e9l\u00e9rom\u00e8tre, la carte micro:bit est capable de d\u00e9tecter des gestes, et notamment lorsqu'on la secoue. L'expression <code>accelerometer.is_gesture('shake')</code> vaut <code>True</code> (vrai) lorsque la carte est secou\u00e9e et <code>False</code> (faux) sinon.</p> <ul> <li>Lire le programme suivant et d\u00e9crire le comportement que devrait avoir la carte apr\u00e8s l'ex\u00e9cution de ce programme.</li> </ul> <pre><code>from microbit import *\nwhile True:\n    secoue = accelerometer.is_gesture('shake')\n    if secoue:\n        display.show(Image.YES)\n        sleep(50)\n        display.clear()\n</code></pre> <ul> <li> <p>Saisir le programme et le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur. V\u00e9rifier si le comportement anticip\u00e9 est conforme \u00e0 celui observ\u00e9.</p> </li> <li> <p>En utilisant les gestes <code>face up</code> et <code>face down</code> d\u00e9tect\u00e9s par l'acc\u00e9l\u00e9rom\u00e8tre, modifier le programme pr\u00e9c\u00e9dent pour que la carte affiche l'image Image.YES lorsqu'elle est tourn\u00e9e vers le plafond,  l'image Image.NO lorsqu'elle est tourn\u00e9e vers le sol, et rien dans les autres cas.</p> </li> </ul>"},{"location":"microbit/python_decouverte/#2-detecter-linclinaison-de-la-carte","title":"2 D\u00e9tecter l'inclinaison de la carte","text":"<p>On souhaite d\u00e9placer un pixel sur l'\u00e9cran en fonction des valeurs des inclinaisons gauche-droite et avant-arri\u00e8re de la carte, comme une bille qui se d\u00e9placerait sur un plan inclin\u00e9.</p> <p>On utilise la valeur d\u00e9tect\u00e9e pour <code>accelerometer.get_x()</code> (inclinaison gauche-droite) et <code>accelerometer.get_y()</code> (inclinaison avant-arri\u00e8re) et selon leur valeur, on donne \u00e0 l'abscisse <code>x</code> et \u00e0 l'ordonn\u00e9e <code>y</code> d'un pixel allum\u00e9 la valeur 0, 1, 2, 3 ou 4. Par exemple, voici la valeur donn\u00e9e \u00e0 <code>x</code> selon la valeur de <code>accelerometer.get_x()</code> :</p> <p></p> <ul> <li>Compl\u00e9ter le programme suivant pour qu'il respecte les indications pr\u00e9c\u00e9dentes pour d\u00e9terminer la valeur de <code>x</code>. <pre><code>from microbit import *\n\nx = 2\ny = 2\n\nwhile True:\n    display.set_pixel(x,y,0)\n    acc_x = accelerometer.get_x()\n    if acc_x &gt; ...:\n        x = 4\n    elif acc_x &gt; 200:\n        x = ...\n    elif acc_x &lt; -400:\n        x = ...\n    elif acc_x &lt; ...:\n        x = 1\n    else:\n        x = ...\n    display.set_pixel(x,y,9)\n    sleep(100)\n</code></pre></li> <li>Saisir le programme et le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur. V\u00e9rifier si le comportement anticip\u00e9 est conforme \u00e0 celui observ\u00e9.  </li> <li>Compl\u00e9ter le programme en proc\u00e9dant de fa\u00e7on analogue pour d\u00e9terminer la valeur que doit en prendre l'ordonn\u00e9e du pixel <code>y</code> selon les valeurs de <code>accelerometer.get_y()</code></li> </ul>"},{"location":"microbit/python_defis/","title":"D\u00e9fis","text":""},{"location":"microbit/python_defis/#cible-sur-plan-incline","title":"Cible sur plan inclin\u00e9","text":"<p>led acc\u00e9l\u00e9rom\u00e8tre</p> <p>Fonctionnement attendu :  </p> <ul> <li>Un pixel cible, d\u00e9termin\u00e9 al\u00e9atoirement, clignote sur l'\u00e9cran de 25 led de la micro:bit.  </li> <li>Le joueur \"d\u00e9place\" un pixel positionn\u00e9 initialement au centre de la carte en inclinant la carte micro:bit (avant-arri\u00e8re, gauche-droite)  </li> <li>Lorsque les 2 pixels se superposent, la partie est gagn\u00e9e : un c\u0153ur s'affiche et le jeu s'arr\u00eate.</li> </ul> Info <ul> <li>Pour cr\u00e9er un pixel al\u00e9atoire, voir la page Les LED </li> <li>Pour d\u00e9placer un pixel selon l'inclinaison de la carte, voir l'exercice 3.5</li> </ul>"},{"location":"microbit/python_defis/#jeu-de-nim-sur-un-ruban-neopixel","title":"Jeu de Nim sur un ruban NeoPixel","text":"<p>led boutons radio neopixel</p> <p>Mat\u00e9riel : 3 cartes micro:bit, 1 ruban neopixel  </p> <p>Fonctionnement attendu :  </p> <ul> <li>Deux joueurs s'affrontent au jeu de Nim. Chacun joue \u00e0 l'aide d'une carte micro:bit. L'un des joueurs a la couleur rouge, l'autre la couleur bleu.</li> <li>Le ruban NeoPixel est pilot\u00e9 par une 3e carte : il est totalement allum\u00e9 et toutes ses leds sont \u00e9clair\u00e9es en blanc. </li> <li>Les joueurs doivent s'approprier tour \u00e0 tour entre une et trois led qui s'afficheront en rouge ou bleu selon le joueur. Celui qui s'empare de la derni\u00e8re led du ruban gagne la partie.  </li> <li>Chacun leur tour, les joueurs appuient 1, 2 ou 3 fois sur le bouton A, et valident leur choix avec le bouton B. La carte affiche les chiffres 1, 2 ou 3 lors des appuis sur le bouton A et l'image <code>Image.YES</code> lors de la validation avec le bouton B. </li> <li>La valeur choisie est envoy\u00e9e par radio \u00e0 la carte qui pilote le ruban de led. Le nombre correspondant de led s'allume en couleur sur le ruban, en rouge ou bleu selon le joueur. </li> <li>Lorsque la derni\u00e8re led est atteinte, le ruban fait clignoter ses led de la couleur du joueur gagnant.</li> </ul>"},{"location":"microbit/python_editeur/","title":"Quel \u00e9diteur ?","text":""},{"location":"microbit/python_editeur/#micropython","title":"MicroPython","text":"<p>La carte micro:bit peut \u00eatre programm\u00e9e en Python. La version de Python qui s'ex\u00e9cute sur la carte micro:bit s'appelle MicroPython. C'est une impl\u00e9mentation l\u00e9g\u00e8re et efficace du langage de programmation Python 3 qui comprend un sous-ensemble de la biblioth\u00e8que standard Python et qui est optimis\u00e9e pour s'ex\u00e9cuter sur des microcontr\u00f4leurs.</p> <p>Le site microbit-micropython.readthedocs.io pr\u00e9sente les instructions de r\u00e9f\u00e9rence et propose quelques projets.  </p>"},{"location":"microbit/python_editeur/#quel-editeur-python-utiliser","title":"Quel \u00e9diteur Python utiliser ?","text":"<p>Pour \u00e9crire des programmes et les t\u00e9l\u00e9charger sur la carte micro:bit, plusieurs \u00e9diteurs existent.</p> <p>Attention</p> <p>Le code python obtenu via les diff\u00e9rentes interfaces n'est pas interchangeable car les modules import\u00e9s peuvent diff\u00e9rer.  </p> <p>Voici une s\u00e9lection parmi les interfaces disponibles :  </p>"},{"location":"microbit/python_editeur/#-lediteur-python-en-ligne-du-site-microbitorg","title":"- L'\u00e9diteur Python en ligne du site <code>microbit.org</code>","text":"<p>L'\u00e9diteur Python en ligne ne n\u00e9cessite pas d'installation. Il a consid\u00e9rablement \u00e9volu\u00e9 et dispose d\u00e9sormais de l'auto-compl\u00e9tion, d'une version en fran\u00e7ais et d'un simulateur.</p> <p>Un onglet R\u00e9f\u00e9rences permet de disposer de structures de code minimales, id\u00e9ales pour les d\u00e9butants ou pour d\u00e9couvrir de nouvelles fonctionnalit\u00e9s.</p>"},{"location":"microbit/python_editeur/#-le-logiciel-mu","title":"- le logiciel <code>Mu</code>","text":"<p>Mu est un \u00e9diteur de code multiplateforme. Cette interface dispose de l'auto-compl\u00e9tion et d'une indentation automatique, ainsi que d'une version en fran\u00e7ais. Mu propose diff\u00e9rents modes dont l'un est destin\u00e9 \u00e0 la carte micro:bit. Ce mode propose l'affichage graphique des donn\u00e9es envoy\u00e9es sur le port s\u00e9rie et une console interactive REPL (read, evaluate, print, loop).</p>"},{"location":"microbit/python_editeur/#-le-logiciel-thonny","title":"- le logiciel <code>Thonny</code>","text":"<p> Thonny est \u00e9galement un \u00e9diteur de code multiplateforme. Cette interface dispose d'une version en fran\u00e7ais, mais pas de l'auto-compl\u00e9tion. Thonny propose diff\u00e9rents modes dont l'un est destin\u00e9 \u00e0 la carte micro:bit, comportant \u00e9galement l'affichage graphique des donn\u00e9es envoy\u00e9es sur le port s\u00e9rie et une console interactive REPL (read, evaluate, print, loop). Un outil de d\u00e9buggage et de suivi des valeurs de variables est \u00e9galement tr\u00e8s utile.</p>"},{"location":"microbit/python_editeur/#-lediteur-en-ligne-vittascience","title":"- l'\u00e9diteur en ligne <code>Vittascience</code>","text":"<p>L' \u00e9diteur fran\u00e7ais Vittascience propose l'\u00e9criture de programmes \u00e0 l'aide de blocs de programmation en fran\u00e7ais, ou de code en python. Un mode hybride permet une transition de l'un vers l'autre en affichant les 2 simultan\u00e9ment. Cet \u00e9diteur dispose de plus d'un simulateur de carte, permettant de tester son programme, m\u00eame en l'absence de connexion \u00e0 une carte micro:bit. On trouve aussi l'affichage graphique des donn\u00e9es envoy\u00e9es sur le port s\u00e9rie et l'export des donn\u00e9es. Enfin, les instructions n\u00e9cessaires au fonctionnement des capteurs et actionneurs du kit Grove sont pr\u00e9sents. Il est possible de se cr\u00e9er un compte et de sauvegarder ses programmes en ligne, de les partager, etc.</p>"},{"location":"microbit/python_editeur/#-lediteur-en-ligne-edublocks","title":"- l'\u00e9diteur en ligne <code>Edublocks</code>","text":"<p>L'\u00e9diteur Edublocks est un projet d\u00e9velopp\u00e9 par Joshua Lowe, jeune britannique. L\u2019interface permet de programmer en Python en s\u00e9lectionnant et imbriquant des blocs. La version textuelle appara\u00eet en parall\u00e8le et le contenu est identique dans les 2 cas. Des extensions sont disponibles pour quelques kits, mais pas pour le kit Grove. Il est possible de se cr\u00e9er un compte et de sauvegarder ses programmes en ligne, de les partager, de les int\u00e9grer, etc.</p>"},{"location":"microbit/python_editeur/#synthese-janvier-2023","title":"Synth\u00e8se (janvier 2023)","text":"\u00e9diteur micro:bit Mu Thonny Vittascience Edublocks En ligne Auto-compl\u00e9tion version fran\u00e7aise transfert rapide sur la carte (WebUSB, flash) Affichage de graphiques Simulateur"},{"location":"microbit/python_envirobit/","title":"La carte Enviro:bit","text":"<p>La carte Enviro:bit permet la mesure de plusieurs donn\u00e9es :  temp\u00e9rature, humidit\u00e9, pression, lumi\u00e8re, couleur et son.</p> <p>Pour une utilisation avec mu-Editor, il faut te\u0301le\u0301charger trois librairies sur la page github de Pimoroni : https://github.com/pimoroni/micropython-envirobit/tree/master/library</p> <p>\u00c0  t\u00e9l\u00e9charger : bme.py - sound.py - tcs3472.py</p> <p>Ces biblioth\u00e8ques sont \u00e0 placer dans les fichiers disponibles sur la carte, en les copiant au pr\u00e9alable dans le dossier mu_code (<code>C:\\Users\\YourUserName\\mu_code</code>  sur Windows ou <code>/Users/YourUserName/mu_code</code> sur macOS).</p>"},{"location":"microbit/python_envirobit/#capteur-de-temperature-pression-et-humidite","title":"Capteur de temp\u00e9rature, pression et humidit\u00e9","text":"<p>Ce capteur n\u00e9cessite de t\u00e9l\u00e9charger la biblioth\u00e8que bme280.</p> <pre><code>import bme280\nbme = bme280.bme280()\n</code></pre> <p>L'instance de classe <code>bme</code> dispose des m\u00e9thodes suivantes :</p> Instructions Effet bme.temperature() renvoie la temp\u00e9rature en degr\u00e9s Celsius bme.pressure() renvoie la pression en hectoPascal bme.humidity() renvoie l'humidit\u00e9 relative en % bme.altitude() renvoie l'altitude en pied, calcul\u00e9e par rapport \u00e0 la valeur QNH (pression atmosph\u00e9rique au niveau de la mer) bme.set_qnh(value) d\u00e9finit la valeur QNH pour la calcul de l'altitude"},{"location":"microbit/python_envirobit/#microphone","title":"Microphone","text":"<p>Ce capteur n\u00e9cessite de t\u00e9l\u00e9charger la biblioth\u00e8que  <code>sound</code>.</p> <pre><code>import sound\nson = sound.sound()\n</code></pre> <p>L'instance de classe <code>son</code> dispose des m\u00e9thodes suivantes :</p> Instructions Effet son.read() renvoie la valeur du niveau sonore son.wait_for_double_clap() d\u00e9tecte un niveau sonore \u00e9lev\u00e9 deux fois par seconde, renvoie True s'il est d\u00e9tect\u00e9 son.wait_for_clap() d\u00e9tecte un niveau sonore \u00e9lev\u00e9 une fois par seconde, renvoie True s'il est d\u00e9tect\u00e9"},{"location":"microbit/python_envirobit/#capteur-de-couleurs","title":"Capteur de couleurs","text":"<p>Ce capteur n\u00e9cessite de t\u00e9l\u00e9charger la biblioth\u00e8que  <code>tcs3472</code>.</p> <pre><code>import tcs3472\nlum = tcs3472.tcs3472()\n</code></pre> <p>L'instance de classe <code>lum</code> dispose des m\u00e9thodes suivantes :</p> Instructions Effet lum.rgb() renvoie les valeurs des composantes RGB lum.scaled() envoie les quantit\u00e9s de rouge, de vert et de bleu sur une \u00e9chelle de 0 \u00e0 1 lum.light() renvoie une lecture brute du niveau de lumi\u00e8re sur une \u00e9chelle de 0 \u00e0 65535 lum.set_leds() allumer et \u00e9teindre les leds avec 0 ou 1 <p>Exemples issus de https://github.com/pimoroni/micropython-envirobit/tree/master/examples</p> <pre><code>import tcs3472\nimport microbit\n\nlum = tcs3472.tcs3472()\n\n#flash lights twice, read on third flash\nwhile True:\n    lum.set_leds(1)\n    microbit.sleep(300)\n    lum.set_leds(0)\n    microbit.sleep(300)\n    lum.set_leds(1)\n    microbit.sleep(300)\n    lum.set_leds(0)\n    microbit.sleep(300)\n    lum.set_leds(1)\n    microbit.sleep(300)\n    reading = lum.rgb()\n    microbit.display.scroll(str(reading))\n    lum.set_leds(0)\n    microbit.sleep(3000)\n</code></pre> <pre><code>from microbit import *\nimport tcs3472\n\nlum = tcs3472.tcs3472()\n\ntrigger = 400\n\nwhile True:\n    light_level = lum.light()\n    if light_level &lt; trigger :\n        display.show(Image.SURPRISED)\n    else:\n        display.show(Image.HAPPY)\n</code></pre> <pre><code>from microbit import sleep\nimport tcs3472\n\nlight_sensor = tcs3472.tcs3472()\n\nwhile True:\n    light_sensor.set_leds(1)\n    sleep(1000)\n    light_sensor.set_leds(0)\n    sleep(1000)\n</code></pre> <pre><code>import tcs3472\nimport microbit\n\nlum = tcs3472.tcs3472()\n\ndef light_level():\n    max_level = 0\n    for i in range(0, 10):\n        light_level = lum.brightness() / 100\n        if light_level &gt; max_level:\n            max_level = light_level\n    return max_level\n\ndef bargraph(a):\n    microbit.display.clear()\n    for y in range (0, 5):\n        if a &gt; y:\n            for x in range (0, 5):\n                microbit.display.set_pixel(x, 4-y, 9)\n\nwhile True:\n    bargraph(light_level())\n    microbit.sleep(10)\n</code></pre>"},{"location":"microbit/python_exercices/","title":"Exercices","text":""},{"location":"microbit/python_exercices/#1-afficher-une-image","title":"1. Afficher une image","text":""},{"location":"microbit/python_exercices/#11-afficher-une-image-predefinie","title":"1.1 Afficher une image pr\u00e9d\u00e9finie","text":"<p>led</p> <p></p> <p>Voici un premier programme : <pre><code>from microbit import *\ndisplay.show(Image.YES)\n</code></pre></p> <ul> <li>Saisir ce programme et le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur. Que constate-t-on ?  </li> <li>Remplacer dans le programme le mot YES par l'un des mots suivants : CHESSBOARD - DIAMOND - HAPPY - HEART - NO - SAD - SQUARE</li> <li>Choisir l'une des images et la reproduire sur une feuille \u00e0 l'aide d'un quadrillage de 5 carreaux sur 5.</li> </ul>"},{"location":"microbit/python_exercices/#12-afficher-une-image-personnalisee","title":"1.2 Afficher une image personnalis\u00e9e","text":"<p>led</p> <ul> <li>Saisir le programme suivant et le flasher sur la carte. Que constate-t-on ? \u00c0 quoi correspondent les 0 et les 9 ?</li> </ul> <pre><code>from microbit import *\nmon_image = Image(\"90909:\"\n                  \"09990:\"\n                  \"99999:\"\n                  \"09990:\"\n                  \"90909\")\ndisplay.show(mon_image)\n</code></pre> <ul> <li>Dessiner sur une feuille \u00e0 l'aide d'un quadrillage de 5 carreaux sur 5 une image personnelle et modifier le programme pr\u00e9c\u00e9dent pour la faire appara\u00eetre sur la carte micro:bit.</li> </ul>"},{"location":"microbit/python_exercices/#13-faire-alterner-deux-images","title":"1.3 Faire alterner deux images","text":"<p>led</p> <p></p> <p>Cr\u00e9er une animation affichant successivement et en boucle deux images pr\u00e9d\u00e9finies, par exemple Image.SQUARE et Image.SQUARE_SMALL.</p> Aide : une proposition \u00e0 compl\u00e9ter <pre><code>from microbit import *\nmes_images = [Image.SQUARE, Image.SQUARE_SMALL]\ndisplay.show(..., delay=..., loop=...)\n</code></pre> Une solution <pre><code>from microbit import *\nmes_images = [Image.SQUARE, Image.SQUARE_SMALL]\ndisplay.show(mes_images, delay=500, loop=True)\n</code></pre>"},{"location":"microbit/python_exercices/#2-faire-clignoter-une-led","title":"2. Faire clignoter une LED","text":""},{"location":"microbit/python_exercices/#21-faire-clignoter-une-led-de-la-carte","title":"2.1 Faire clignoter une LED de la carte","text":"<p>led</p> <p></p> <p>Choisir l'une des LED de la carte et la faire clignoter.</p> Aide : une proposition \u00e0 compl\u00e9ter <pre><code>from microbit import *\nwhile True:\n    # choisir un pixel \u00e0 allumer\n    display.set_pixel(..., ..., 9)\n    sleep(500)\n    # \u00e9teindre le m\u00eame pixel\n    display.set_pixel(..., ..., ...)\n    sleep(500)\n</code></pre> Une solution <pre><code>from microbit import *\nwhile True:\n    display.set_pixel(1, 1, 9)\n    sleep(500)\n    display.set_pixel(1, 1, 0)\n    sleep(500)\n</code></pre>"},{"location":"microbit/python_exercices/#22-faire-varier-le-rythme-avec-un-potentiometre","title":"2.2 Faire varier le rythme avec un potentiom\u00e8tre","text":"<p>led potentiom\u00e8tre</p> <p></p> <p>Placer la carte micro-bit sur le shield Grove et connecter le potentiom\u00e8tre sur la broche P0-P14. La fonction <code>pin0.read_analog()</code> renvoie une valeur qui d\u00e9pend de l'angle de rotation de l'axe du potentiom\u00e8tre.</p> <ul> <li>Modifier le programme pr\u00e9c\u00e9dent en ajoutant au d\u00e9but de la boucle <code>while</code> l'intruction : <code>mesure = pin0.read_analog()</code> puis en rempla\u00e7ant les temps durant lesquels la LED est allum\u00e9e ou \u00e9teinte par <code>mesure</code>.</li> <li>Quel effet observe-t-on sur le clignotement lorsque l'on tourne l'axe du potentiom\u00e8tre ?</li> </ul> Une solution <pre><code>from microbit import *\nwhile True:\n    mesure = pin0.read_analog()\n    display.set_pixel(1, 1, 9)\n    sleep(mesure)\n    display.set_pixel(1, 1, 0)\n    sleep(mesure)\n</code></pre>"},{"location":"microbit/python_exercices/#23-faire-clignoter-la-led-du-kit-grove","title":"2.3 Faire clignoter la LED du kit Grove","text":"<p>led grove potentiom\u00e8tre</p> <p></p> <p>Connecter la LED sur le shield Grove sur la broche P1-P15 ( en plus  du potentiom\u00e8tre d\u00e9j\u00e0 connect\u00e9 sur la broche P0-P14). L'instruction <code>pin1.write_digital(1)</code> permet d'allumer la LED lorsqu'elle est sur la broche P1, et l'instruction <code>pin1.write_digital(0)</code> permet de l'\u00e9teindre.</p> <ul> <li>Modifier le programme pr\u00e9c\u00e9dent pour faire clignoter la LED Grove, au lieu d'une LED de la carte.</li> <li>Le potentiom\u00e8tre conserve-t-il son  effet ?</li> </ul> Une solution <pre><code>from microbit import *\nwhile True:\n    mesure = pin0.read_analog()\n    pin1.write_digital(1)\n    sleep(mesure)\n    pin1.write_digital(0)\n    sleep(mesure)\n</code></pre>"},{"location":"microbit/python_exercices/#3-deplacer-un-point-lumineux","title":"3. D\u00e9placer un point lumineux","text":""},{"location":"microbit/python_exercices/#31-programmer-le-deplacement-dun-point-lumineux-sur-la-carte","title":"3.1 Programmer le d\u00e9placement d'un point lumineux sur la carte","text":"<p>led</p> <ul> <li>Lire le programme suivant et anticiper l'effet produit sur la carte micro:bit : <pre><code>from microbit import *\nwhile True:\n    for x in range(5): # x prend les valeurs 0 \u00e0 4\n        display.set_pixel(x, 0, 9)\n        sleep(300)\n    display.clear()\n</code></pre></li> <li>Saisir ce programme et le flasher sur une carte micro:bit. V\u00e9rifier si l'effet constat\u00e9 correspond \u00e0 celui anticip\u00e9.</li> <li>Indenter l'instruction <code>display.clear()</code> pour qu'elle soit align\u00e9e avec le <code>sleep(300)</code> de la ligne 5. Quel effet cela a-t-il sur l'affichage produit sur la carte ? Pourquoi ?</li> <li>Poursuivre le programme pr\u00e9c\u00e9dent pour que le point lumineux allum\u00e9 fasse le tour du carr\u00e9 de 25 LED.</li> </ul> Aide : une proposition \u00e0 compl\u00e9ter <pre><code>from microbit import *\nwhile True:\n    for x in range(5):   # x prend les valeurs 0 \u00e0 4\n        display.set_pixel(x, 0, 9)\n        sleep(300)\n        display.clear()\n    for y in range(1,5):   # y prend les valeurs 1 \u00e0 4\n        display.set_pixel(..., y, 9)\n        sleep(300)\n        display.clear()\n    for x in range(3, -1, -1):   # x prend les valeurs 3 \u00e0 0\n        display.set_pixel(x, ..., 9)\n        sleep(300)\n        display.clear()\n    for y in range(3, -1, -1):   # x prend les valeurs 0 \u00e0 4\n        display.set_pixel(..., y, 9)\n        sleep(300)\n        display.clear()\n</code></pre> Une solution <pre><code>from microbit import *\nwhile True:\n    for x in range(5):   # x prend les valeurs 0 \u00e0 4\n        display.set_pixel(x, 0, 9)\n        sleep(300)\n        display.clear()\n    for y in range(1, 5):   # y prend les valeurs 1 \u00e0 4\n        display.set_pixel(4, y, 9)\n        sleep(300)\n        display.clear()\n    for x in range(3, -1, -1):   # x prend les valeurs 3 \u00e0 0\n        display.set_pixel(x, 4, 9)\n        sleep(300)\n        display.clear()\n    for y in range(3, -1, -1):   # x prend les valeurs 0 \u00e0 4\n        display.set_pixel(0, y, 9)\n        sleep(300)\n        display.clear()\n</code></pre>"},{"location":"microbit/python_exercices/#32-programmer-le-deplacement-dun-point-lumineux-sur-le-ruban-neopixel","title":"3.2 Programmer le d\u00e9placement d'un point lumineux sur le ruban NeoPixel","text":"<p>neopixel</p> <p></p> <ul> <li>Placer la carte micro-bit sur le shield Grove et connecter le ruban de led NeoPixel sur le connecteur P0-P14.  </li> <li> <p>Lire le programme suivant et anticiper l'effet produit sur le ruban NeoPixel : quels pixels sont allum\u00e9s, dans quel ordre, de quelle(s) couleurs(s) ? <pre><code>from microbit import *\nimport neopixel\n# pour une connexion sur connecteur P0/P14\nnp = neopixel.NeoPixel(pin0, 30)\n\nwhile True:\n    for x in range(30): # x prend les valeurs 0 \u00e0 29\n        np[x] = (255, 0, 0)\n        sleep(200)\n        np.show()\n    np.clear()\n</code></pre></p> </li> <li> <p>Saisir ce programme et le flasher sur une carte micro:bit, connect\u00e9e. V\u00e9rifier si l'effet constat\u00e9 correspond \u00e0 celui anticip\u00e9.</p> </li> <li>Indenter l'instruction <code>np.clear()</code> pour qu'elle soit align\u00e9e avec le <code>np.show()</code> de la ligne 10. Quel effet cela a-t-il sur l'affichage produit sur le ruban ? Pourquoi ?</li> <li>Modifier une valeur du programme pour augmenter la \"vitesse\" du point lumineux.  </li> <li>Modifier une ou plusieurs valeurs pour que le pixel allum\u00e9 soit jaune.</li> <li>Poursuivre le programme pr\u00e9c\u00e9dent pour que le point lumineux fasse des allers-retours entre les deux extr\u00e9mit\u00e9s du ruban.</li> </ul>"},{"location":"microbit/python_exercices/#33-deplacer-un-pixel-sur-la-carte-avec-les-boutons","title":"3.3 D\u00e9placer un pixel sur la carte avec les boutons","text":"<p>led boutons</p> <p>Fonctionnement attendu : Une led est allum\u00e9e au centre de l'\u00e9cran. En appuyant sur le bouton A, elle se \"d\u00e9place\" d'un pixel vers la gauche, et en appuyant sur le bouton B, elle se \"d\u00e9place\" d'un pixel vers la droite. Lorsqu'elle atteint un bord (gauche ou droit), l'appui sur le bouton correspondant \u00e0 ce bord n'a plus d'effet.</p> Aide : une proposition \u00e0 compl\u00e9ter <pre><code>from microbit import *\n#positionnement initial au centre\nx = ...\ny = ...\n\nwhile True:\n    display.set_pixel(x,y,0) # on \u00e9teint le pixel\n    if button_a.was_pressed():\n        if x ...:      # si le pixel n'est pas d\u00e9j\u00e0 au bord gauche\n            x = x ...  # on le d\u00e9place d'une unit\u00e9 vers la gauche\n    if button_b.was_pressed():\n        if x ...:      # si le pixel n'est pas d\u00e9j\u00e0 au bord droit\n             x = x ... # on le d\u00e9place d'une unit\u00e9 vers la droite\n    display.set_pixel(x,y,9) # on allume le pixel\n    sleep(20)\n</code></pre> Une solution <pre><code>from microbit import *\nx = 2\ny = 2\nwhile True:\n    display.set_pixel(x,y,0)\n    if button_a.was_pressed():\n        if x &gt; 0:\n            x = x - 1\n    if button_b.was_pressed():\n        if x &lt; 4:\n             x = x + 1\n    display.set_pixel(x,y,9)\n    sleep(20)\n</code></pre>"},{"location":"microbit/python_exercices/#34-deplacer-un-point-lumineux-sur-un-ruban-neopixel-avec-les-boutons","title":"3.4 D\u00e9placer un point lumineux sur un ruban NeoPixel avec les boutons","text":"<p>boutons neopixel</p> <p>Fonctionnement attendu : Une led NeoPixel est allum\u00e9e au d\u00e9but du ruban de led NeoPixel. En appuyant sur le bouton A, un point lumineux se \"d\u00e9place\" d'un pixel vers la fin du ruban, et en appuyant sur le bouton B, elle revient d'un pixel vers le d\u00e9but du ruban. Lorsque le point lumineux atteint une extr\u00e9mit\u00e9, l'appui sur le bouton correspondant \u00e0 cette extr\u00e9mit\u00e9 n'a plus d'effet.</p> Aide : une proposition \u00e0 compl\u00e9ter <pre><code>from microbit import *\nimport neopixel\n# pour une connexion sur connecteur P0/P14\nnp = neopixel.NeoPixel(pin0, 30)\n\nposition = 0\n\nwhile True:\n    np.clear()\n    if button_a.was_pressed():\n        if position ...:      # si le pixel n'est pas d\u00e9j\u00e0 au d\u00e9but du ruban\n            position = position ...    # on le d\u00e9place d'une unit\u00e9 vers le d\u00e9but\n    if button_b.was_pressed():\n        if position ...:      # si le pixel n'est pas d\u00e9j\u00e0 \u00e0 la fin du ruban\n             position = position ...    # on le d\u00e9place d'une unit\u00e9 vers la fin\n    np[position] = (..., 0, 0)    # on allume le pixel en rouge\n    np.show()\n    sleep(20)\n</code></pre> Une solution <pre><code>from microbit import *\nimport neopixel\n# pour une connexion sur connecteur P0/P14\nnp = neopixel.NeoPixel(pin0, 30)\n\nposition = 0\n\nwhile True:\n    np.clear()\n    if button_a.was_pressed():\n        if position &gt; 0:      # si le pixel n'est pas d\u00e9j\u00e0 au d\u00e9but du ruban\n            position = position -1    # on le d\u00e9place d'une unit\u00e9 vers le d\u00e9but\n    if button_b.was_pressed():\n        if position &lt; 29:      # si le pixel n'est pas d\u00e9j\u00e0 \u00e0 la fin du ruban\n             position = position + 1    # on le d\u00e9place d'une unit\u00e9 vers la fin\n    np[position] = (255, 0, 0)    # on allume le pixel en rouge\n    np.show()\n    sleep(20)\n</code></pre>"},{"location":"microbit/python_exercices/#35-deplacer-un-point-lumineux-avec-linclinaison-de-la-carte","title":"3.5 D\u00e9placer un point lumineux avec l'inclinaison de la carte","text":"<p>led acc\u00e9l\u00e9rom\u00e8tre</p> <p>On souhaite d\u00e9placer un point lumineux sur l'\u00e9cran en fonction des valeurs des inclinaisons gauche-droite et avant-arri\u00e8re de la carte, comme une bille qui se d\u00e9placerait sur un plan inclin\u00e9.</p> <p>On utilise la valeur d\u00e9tect\u00e9e pour <code>accelerometer.get_x()</code> (inclinaison gauche-droite) et <code>accelerometer.get_y()</code> (inclinaison avant-arri\u00e8re) et selon leur valeur, on donne \u00e0 l'abscisse <code>x</code> et \u00e0 l'ordonn\u00e9e <code>y</code> d'un pixel allum\u00e9 la valeur 0, 1, 2, 3 ou 4. Par exemple, voici la valeur que l'on peut donner \u00e0 <code>x</code> selon la valeur de <code>accelerometer.get_x()</code> :</p> <p></p> <ul> <li>Compl\u00e9ter le programme suivant pour qu'il respecte les indications pr\u00e9c\u00e9dentes pour d\u00e9terminer la valeur de <code>x</code>.</li> </ul> <pre><code>from microbit import *\n\nx = 2\ny = 2\n\nwhile True:\n    display.set_pixel(x, y, 0)\n    acc_x = accelerometer.get_x()\n    if acc_x &gt; ...:\n        x = 4\n    elif acc_x &gt; 150:\n        x = ...\n    elif acc_x &gt; -150:\n        x = ...\n    elif acc_x &gt; -450:\n        x = 1\n    else:\n        x = ...\n    display.set_pixel(x, y, 9)\n    sleep(100)\n</code></pre> <ul> <li>Saisir le programme et le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur. V\u00e9rifier si le comportement anticip\u00e9 est conforme \u00e0 celui observ\u00e9.  </li> <li>Compl\u00e9ter le programme en proc\u00e9dant de fa\u00e7on analogue pour d\u00e9terminer la valeur que doit en prendre l'ordonn\u00e9e du pixel <code>y</code> selon les valeurs de <code>accelerometer.get_y()</code></li> </ul>"},{"location":"microbit/python_exercices/#4-detecter-lintensite-lumineuse","title":"4. D\u00e9tecter l'intensit\u00e9 lumineuse","text":""},{"location":"microbit/python_exercices/#41-avec-les-leds-de-la-carte-microbit","title":"4.1 Avec les leds de la carte micro:bit","text":"<p>led</p> <p>Les LED de la carte peuvent d\u00e9tecter le niveau de lumi\u00e8re ambiante : la fonction <code>display.read_light_level()</code> renvoie une valeur comprise entre 0 et 255 : plus la valeur est \u00e9lev\u00e9e, plus l'environnement est lumineux.</p> <pre><code>from microbit import *\nwhile True:\n    niveau = display.read_light_level()\n    if niveau &gt; 220:\n        display.show(Image.YES)\n    else :\n        display.show(Image.NO)\n    sleep(200)\n</code></pre> <ul> <li>Saisir ce programme et le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur. Que faut-il faire pour que l'image Image.YES s'affiche ?  </li> <li>Modifier ce programme pour que la carte affiche un carr\u00e9 en luminosit\u00e9 \"normale\" et un diamant dans la p\u00e9nombre.</li> </ul>"},{"location":"microbit/python_exercices/#42-avec-un-capteur-de-lumiere-grove","title":"4.2 Avec un capteur de lumi\u00e8re Grove","text":"<p>led capteur de lumi\u00e8re</p> <p></p> <p>Placer la carte micro-bit sur le shield Grove et connecter le capteur de lumi\u00e8re sur la broche P0-P14. La fonction <code>pin0.read_analog()</code> renvoie une valeur enti\u00e8re d'autant plus \u00e9lev\u00e9e que l'environnement est lumineux.</p> <p>Saisir et flasher le programme suivant : <pre><code>from microbit import *\nwhile True:\n    mesure = pin0.read_analog()\n    if mesure &gt; 600:\n        display.show(Image.YES)\n    else :\n        display.show(Image.NO)\n    sleep(100)\n</code></pre></p> <ul> <li>Que peut-on faire pour que l'image Image.NO s'affiche sur la carte micro:bit ?  </li> <li>Emballer le capteur (connect\u00e9 \u00e0 la carte) dans une feuille de papier.  Modifier le programme pour que la carte affiche l'image Image.YES tant que le capteur reste emball\u00e9 et l'image Image.NO d\u00e8s que l'emballage est ouvert.</li> </ul>"},{"location":"microbit/python_exercices/#5-envoyer-des-messages-par-radio","title":"5. Envoyer des messages par radio","text":""},{"location":"microbit/python_exercices/#51-envoyer-une-valeur","title":"5.1 Envoyer une valeur","text":"<p>led boutons radio</p> <p>Cet exercice n\u00e9cessite deux cartes : une carte mesure la temp\u00e9rature et envoie par radio la valeur mesur\u00e9e. Une autre carte re\u00e7oit les valeurs et les affiche.</p> <p>Programme sur la carte \u00e9mettrice <pre><code>from microbit import *\nimport radio\nradio.on()\nwhile True:\n    t = temperature()\n    radio.send(str(t))\n    sleep(1000)\n</code></pre></p> <p>Programme sur la carte r\u00e9ceptrice <pre><code>from microbit import *\nimport radio\nradio.on()\nwhile True:\n    valeur = radio.receive()\n    if valeur:\n        display.scroll(valeur)\n        sleep(1000)\n</code></pre></p> <ul> <li>Modifier le programme de la carte r\u00e9ceptrice pour qu'elle n'affiche plus la temp\u00e9rature mais affiche (Image.HAPPY) si la temp\u00e9rature est sup\u00e9rieure \u00e0 20\u00b0C et (Image.SAD) sinon.</li> </ul> Aide : une proposition \u00e0 compl\u00e9ter <pre><code>from microbit import *\nimport radio\nradio.on()\nwhile True:\n    valeur = radio.receive()\n    if valeur:\n        if ... &gt; 20:\n            display.show(...)   \n        ... :\n            display.show(...)\n        sleep(1000)\n</code></pre> <ul> <li>Compl\u00e9ter le programme de la question pr\u00e9c\u00e9dente pour que la carte r\u00e9ceptrice affiche la temp\u00e9rature lorsqu'on appuie sur le bouton A.</li> </ul> Aide : une proposition \u00e0 compl\u00e9ter <pre><code>from microbit import *\nimport radio\nradio.on()\nwhile True:\n    valeur = radio.receive()\n    if valeur:\n        if ... &gt; 20:\n            display.show(...)   \n        ... :\n            display.show(...)\n        if button_a.is_pressed():\n            ...\n        sleep(1000)\n</code></pre>"},{"location":"microbit/python_grove/","title":"Le kit Grove pour micro:bit","text":"<p>R\u00e9f\u00e9rence : Grove Inventor kit</p>"},{"location":"microbit/python_grove/#le-shield","title":"Le shield","text":"<p>Ce shield est une carte d'interface permettant de raccorder facilement et sans soudure les capteurs et les actionneurs Grove de Seeedstudio sur une carte micro:bit.</p> <p>Ce shield comporte :</p> <ul> <li>4 connecteurs Grove : I2C,  P0/P14,  P1/P15,  P2/P16</li> <li>8 connecteurs Edge pour pince crocodile ou fiche banane : 3V3, P0, P1, P2, P8, P12, P13, GND</li> <li>un port micro-USB permettant une alimentation de la carte micro:bit et des diff\u00e9rents capteurs et modules</li> <li>une LED verte de mise sous tension.</li> </ul> <p>R\u00e9f\u00e9rence : Grove Shield</p>"},{"location":"microbit/python_grove/#capteurs","title":"Capteurs","text":""},{"location":"microbit/python_grove/#capteurs-analogiques","title":"Capteurs analogiques","text":"<p>Si le capteur est branch\u00e9 sur la broche P0, la mesure analogique r\u00e9alis\u00e9e par le capteur est convertie en une valeur num\u00e9rique enti\u00e8re comprise entre 0 et 1023 que l'on lit avec l'instruction : <pre><code>pin0.read_analog()\n</code></pre></p> Le potentiom\u00e8treLe capteur de lumi\u00e8re <p></p> <p>Le capteur d'angle rotatif (ou potentiom\u00e8tre) produit une sortie analogique variable selon l'angle de rotation. La plage angulaire est de 300 degr\u00e9s avec un changement lin\u00e9aire de valeur.</p> <p>R\u00e9f\u00e9rence : Grove-Rotary_Angle_Sensor</p> <p></p> <p>Le capteur Grove - Light int\u00e8gre une photo-r\u00e9sistance pour d\u00e9tecter l'intensit\u00e9 de la lumi\u00e8re. Le signal de sortie est une valeur analogique : plus la lumi\u00e8re est brillante, plus la valeur est \u00e9lev\u00e9e.</p> <p>R\u00e9f\u00e9rence : Grove-Light_Sensor</p>"},{"location":"microbit/python_grove/#autres-capteurs","title":"Autres capteurs","text":"Le t\u00e9l\u00e9m\u00e8tre \u00e0 ultrasonsLe capteur de mouvements <p>R\u00e9f\u00e9rence : Grove-Ultrasonic_Ranger</p> <p></p> <p>R\u00e9f\u00e9rences : Grove-Gesture</p>"},{"location":"microbit/python_grove/#actionneurs","title":"Actionneurs","text":""},{"location":"microbit/python_grove/#actionneur-binaire","title":"Actionneur binaire","text":"<p>Si l'actionneur est branch\u00e9 sur la broche P0, on l'active en \u00e9crivant la valeur 1, et on l'\u00e9teint en \u00e9crivant la valeur 0, \u00e0 l'aide des instructions : <pre><code># active l'actionneur\npin0.write_digital(1)\n# d\u00e9sactive l'actionneur\npin0.write_digital(0)\n</code></pre></p> La LED <p></p> <p>La LED Rouge Grove abrite une source de lumi\u00e8re LED. De plus, ce module dispose d'un potentiom\u00e8tre embarqu\u00e9 pour g\u00e9rer les besoins en puissance de la LED. Branchement : la LED comporte un m\u00e9plat du c\u00f4t\u00e9 de la cathode, \u00e0 connecter au  R\u00e9f\u00e9rence : Grove-Red_LED</p>"},{"location":"microbit/python_grove/#autres-actionneurs","title":"Autres actionneurs","text":"Le haut-parleurL'\u00e9cran d'affichage (4 chiffres)L'\u00e9cran d'affichage LCD (16x2)Le ruban de led NeoPixel <p>R\u00e9f\u00e9rence : Grove-Speaker</p> <p></p> <p>R\u00e9f\u00e9rences : Grove-4-Digit_Display</p> <p></p> <p>Informations compl\u00e9mentaires et biblioth\u00e8ques</p> <p>Biblioth\u00e8que \u00e0 t\u00e9l\u00e9charger</p> <p>R\u00e9f\u00e9rences : Grove-16x2 LCD</p> <p></p> <p>Le ruban de LED comporte 30 NeoPixels et mesure 1 m\u00e8tre. Il est est \"waterproof\". Chaque NeoPixel comporte une LED RVB, un circuit \u00e9lectronique int\u00e9gr\u00e9 (le WS281), des donn\u00e9es entrantes et des donn\u00e9es sortantes.</p> <p>La biblioth\u00e8que <code>neopixel</code> comporte des m\u00e9thodes permettant d'utiliser le ruban. Chaque LED est adressable : le 1er NeoPixel a l'adresse 0, le suivant 1 etc.  </p> Instructions Effet <code>import neopixel</code> Importe la biblioth\u00e8que NeoPixel <code>np = neopixel.NeoPixel(pin0, 30)</code> D\u00e9clare un ruban nomm\u00e9 <code>np</code> de 30 NeoPixels sur la broche P0 <code>np[i] = (r, v, b)</code> Affecte au NeoPixel d'adresse <code>i</code> la couleur (r, v, b) <code>np.show()</code> Allume chaque NeoPixel du ruban <code>np</code> avec la couleur qui lui a \u00e9t\u00e9 affect\u00e9e <code>np.clear()</code> \u00c9teint toutes les leds du ruban <code>np</code> <p>Exemple de programme : <pre><code>from microbit import *\nimport neopixel\nnp = neopixel.NeoPixel(pin0, 30)\nnp.clear()\nfor x in range(30):\n    np[x] = (240 - 8*x,0, 8*x)\n    np.show()    \n    sleep(100)\n</code></pre></p> <p>L'ex\u00e9cution de ce programme provoque l'allumage progressif des 30 LED du ruban. Les premi\u00e8res LED sont rouges, et la couleur \u00e9volue au fur et \u00e0 mesure de l'avanc\u00e9e sur le ruban, les derni\u00e8res LED \u00e9tant bleues.</p> <p>R\u00e9f\u00e9rences :  </p> <p>Un produit proche : Grove-RGB_LED_Stick Le module Neopixel dans la documentation microbit-micropython</p>"},{"location":"microbit/python_leds5x5/","title":"Les LED","text":""},{"location":"microbit/python_leds5x5/#lobjet-display","title":"L'objet <code>display</code>","text":"<p>La matrice LED comporte 25 LED. On peut l'utiliser pour afficher des caract\u00e8res, des images, faire d\u00e9filer un message, etc.  </p> <p>Info</p> <p>L'\u00e9cran est un objet nomm\u00e9 <code>display</code>. On applique \u00e0 cet objet des m\u00e9thodes selon la syntaxe :</p> <p><code>display.methode(parametres)</code></p> <p>o\u00f9 <code>methode</code> est \u00e0 choisir dans la liste suivante :</p> <ul> <li>clear</li> <li>show</li> <li>scroll</li> <li>on</li> <li>off</li> <li>is_on</li> <li>set_pixel</li> <li>get_pixel</li> </ul> <p>La compl\u00e9tion automatique de l'\u00e9diteur mu permet d'acc\u00e9der \u00e0 cette liste d\u00e8s que l'on saisit <code>display.</code> </p>"},{"location":"microbit/python_leds5x5/#afficher-des-caracteres-des-messages","title":"Afficher des caract\u00e8res, des messages","text":"Instructions Effet <code>display.show(0)</code> Affiche <code>0</code> sur la matrice LED <code>display.show('A')</code> Affiche A sur la matrice LED <code>display.show('ABCDE')</code> Affiche un par un les caract\u00e8res A, B, C, D et E sur la matrice LED"},{"location":"microbit/python_leds5x5/#faire-defiler-des-messages","title":"Faire d\u00e9filer des messages","text":"Instructions Effet <code>display.scroll('ABCDE')</code> Fait d\u00e9filer de droite \u00e0 gauche les caract\u00e8res A, B, C, D et E sur la matrice LED <code>display.scroll('ABCDE', delay=250, loop=False)</code> Fait d\u00e9filer de droite \u00e0 gauche les caract\u00e8res A, B, C, D et E sur la matrice LED"},{"location":"microbit/python_leds5x5/#allumer-des-pixels","title":"Allumer des pixels","text":"<p>Info</p> <ul> <li>Chaque pixel a des coordonn\u00e9es enti\u00e8res de (0, 0) dans le coin sup\u00e9rieur gauche \u00e0 (4, 4) dans le coin inf\u00e9rieur droit.  </li> <li>La luminosit\u00e9 de chaque pixel peut \u00eatre d\u00e9finie, de 0 (le pixel est alors d\u00e9sactiv\u00e9) \u00e0 9 (niveau le plus lumineux).</li> </ul> Instructions Effet <code>display.set_pixel(x, y, lum)</code> Allume le pixel aux coordonn\u00e9es (x, y) avec un niveau de luminosit\u00e9 <code>lum</code> (entier entre 0 et 9) <code>display.get_pixel(x, y)</code> Renvoie le niveau de luminosit\u00e9  du pixel de coordonn\u00e9es (x, y)"},{"location":"microbit/python_leds5x5/#afficher-des-images","title":"Afficher des images","text":""},{"location":"microbit/python_leds5x5/#afficher-des-images-pre-definies","title":"Afficher des images pr\u00e9-d\u00e9finies","text":"<p>Info</p> <p>Il existe des images pr\u00e9d\u00e9finies que l'on peut afficher en utilisant leur nom et la syntaxe <code>Image.nom</code> Voici la liste des images pr\u00e9d\u00e9finies, par ordre alphab\u00e9tique :</p> <p>ANGRY - ASLEEP - BUTTERFLY - CHESSBOARD - CONFUSED - COW - DIAMOND - DIAMOND_SMALL - DUCK - FABULOUS - GHOST - GIRAFFE - HAPPY - HEART - HEART_SMALL - HOUSE - MEH - MUSIC_CROTCHET - MUSIC_QUAVER - MUSIC_QUAVERS - NO - PACMAN - PITCHFORK - RABBIT - ROLLERSKATE - SAD - SILLY - SKULL - SMILE - SNAKE - SQUARE - SQUARE_SMALL - STICKFIGURE - SURPRISED - SWORD - TARGET - TORTOISE - TRIANGLE - TRIANGLE_LEFT - TSHIRT - UMBRELLA - XMAS - YES</p> <p>Il existe \u00e9galement deux s\u00e9ries d'images :  </p> <ul> <li>les fl\u00e8ches : ARROW_N, ARROW_NE, ARROW_E, ARROW_SE, ARROW_S, ARROW_SW, ARROW_W, ARROW_NW  </li> <li>les heures : CLOCK12, CLOCK11, CLOCK10, CLOCK9, CLOCK8, CLOCK7, CLOCK6, CLOCK5, CLOCK4, CLOCK3, CLOCK2, CLOCK1</li> </ul>"},{"location":"microbit/python_leds5x5/#definir-ses-propres-images","title":"D\u00e9finir ses propres images","text":"<p>Info</p> <p>On peut d\u00e9finir une image en affectant \u00e0 chaque pixel son niveau de luminosit\u00e9, soit ligne par ligne: <pre><code>eclat = Image(\"00300:\"\n              \"03630:\"\n              \"36963:\"\n              \"03630:\"\n              \"00300\")\n</code></pre> soit en une seule ligne : <pre><code>eclat = Image(\"00300:03630:36963:03630:00300\")\n</code></pre></p> Instructions Effet <code>display.show(Image.HEART)</code> Affiche un c\u0153ur sur la matrice LED <code>display.show(mon_image)</code> Affiche l'image d\u00e9finie par la variable mon_image <p>Pour aller plus loin</p> <p>La classe Image contient des m\u00e9thodes pour cr\u00e9er et manipuler des images. Par exemple, <pre><code>mon_image = Image()\nmon_image.fill(7)\n</code></pre> cr\u00e9e une image o\u00f9 tous les pixels ont une luninosit\u00e9 de 7.</p>"},{"location":"microbit/python_leds5x5/#afficher-des-pixels-aleatoires","title":"Afficher des pixels al\u00e9atoires","text":"<p>Info</p> <p>Le module <code>random</code> contient la fonction <code>randint(min, max)</code> qui renvoie un entier entre <code>min</code> et <code>max</code> compris. On peut l'utiliser pour d\u00e9finir al\u00e9atoirement la position d'un pixel ou la luminosit\u00e9 d'un pixel.</p> <pre><code>from microbit import *\nfrom random import randint\nfor i in range(5):   # num\u00e9ro de colonne de 0 \u00e0 4\n    for j in range(5):   # num\u00e9ro de ligne de 0 \u00e0 4\n        display.set_pixel(i, j, randint(0, 9))\n</code></pre>"},{"location":"microbit/python_leds5x5/#animer-des-images","title":"Animer des images","text":"<p>Info</p> <p>Pour cr\u00e9er une animation affichant successivement plusieurs images, cr\u00e9er une liste contenant toutes les images, puis afficher cette liste. <pre><code>mes_images = [Image.HEART, Image.HEART_SMALL]\ndisplay.show(mes_images, delay=400, loop=True)\n</code></pre></p> Instructions Effet <code>display.show(mes_images, delay=400, loop=True)</code> Affiche en boucle les images de la liste <code>mes_images</code>, chacune \u00e9tant affich\u00e9e pendant 400 ms avant d'\u00eatre remplac\u00e9e par la suivante <code>display.show(mes_images, delay=400, loop=False)</code> Affiche une fois chaque image de la liste <code>mes_images</code>, chacune \u00e9tant affich\u00e9e pendant 400 ms avant d'\u00eatre remplac\u00e9e par la suivante"},{"location":"microbit/python_leds5x5/#effacer-lecran","title":"Effacer l'\u00e9cran","text":"Instructions Effet <code>display.clear()</code> \u00c9teint toutes les LED en leur affectant une luminosit\u00e9 \u00e0 0"},{"location":"microbit/python_leds5x5/#allumer-eteindre-lecran","title":"Allumer / \u00e9teindre l'\u00e9cran","text":"Instructions Effet <code>display.on()</code> Allume chaque LED avec sa propre valeur de luminosit\u00e9 <code>display.off()</code> \u00c9teint chaque LED mais n'efface pas sa propre valeur de luminosit\u00e9 <code>display.is_on()</code> Renvoie <code>True</code> si <code>display.on()</code> est activ\u00e9, <code>False</code>sinon."},{"location":"microbit/python_leds5x5/#detecter-le-niveau-de-lumiere-ambiante","title":"D\u00e9tecter le niveau de lumi\u00e8re ambiante","text":"<p>Info</p> <p>Les LED de l\u2019\u00e9cran peuvent d\u00e9tecter la quantit\u00e9 de lumi\u00e8re arrivant sur l\u2019\u00e9cran.</p> Instructions Effet <code>display.read_light_level()</code> Renvoie un entier compris entre 0 et 255 repr\u00e9sentant le niveau de lumi\u00e8re"},{"location":"microbit/python_leds5x5/#references","title":"R\u00e9f\u00e9rences","text":"<p>Le module Display : documentation microbit-micropython La classe Image</p>"},{"location":"microbit/python_mu/","title":"Utiliser l'\u00e9diteur Mu","text":"<p>Mu est un \u00e9diteur de code simple pour programmeurs d\u00e9butants. Il est d\u00e9velopp\u00e9 en Python et fonctionne sur Windows, MacOS, Linux et Raspberry Pi. Une version portable peut \u00e9galement \u00eatre ex\u00e9cut\u00e9e depuis une cl\u00e9 USB sur Windows et MacOS. Cette interface dispose de l'auto-compl\u00e9tion et d'une indentation automatique, ainsi que d'une version en fran\u00e7ais.</p>"},{"location":"microbit/python_mu/#choisir-le-mode-microbit","title":"Choisir le mode micro:bit","text":"<p>Mu propose diff\u00e9rents modes dont l'un est destin\u00e9 \u00e0 la carte micro:bit. On peut \u00e9galement choisir d'autres cartes ou Python 3 standard. (en savoir plus)</p>"},{"location":"microbit/python_mu/#gerer-ses-fichiers-py","title":"G\u00e9rer ses fichiers <code>.py</code>","text":"<p>On peut cr\u00e9er un nouveau fichier <code>.py</code>, en charger un depuis l'ordinateur ou en enregistrer un sur l'ordinateur. Un r\u00e9pertoire <code>mu_code</code> est cr\u00e9\u00e9 par d\u00e9faut mais les programmes peuvent \u00eatre enregistr\u00e9s \u00e0 tout emplacement usuel. </p>"},{"location":"microbit/python_mu/#avec-une-microbit-connectee","title":"Avec une micro:bit connect\u00e9e","text":"<p>Remarque</p> <p>Ces quatre boutons n\u00e9cessitent pour fonctionner qu'une carte soit connect\u00e9e \u00e0 l'ordinateur (par un c\u00e2ble USB).</p>"},{"location":"microbit/python_mu/#flasher","title":"Flasher","text":"<p> Le bouton \u00ab Flasher \u00bb place le code Python pr\u00e9sent dans la fen\u00eatre d'\u00e9dition sur la carte micro:bit connect\u00e9e. Le processus de flash prend environ 10 secondes, pendant lesquelles une LED orange clignote \u00e0 l'arri\u00e8re de la carte. Apr\u00e8s cette op\u00e9ration, tous les codes et donn\u00e9es pr\u00e9c\u00e9dents ont \u00e9t\u00e9 supprim\u00e9s. Si le programme utilise une biblioth\u00e8que, il est alors n\u00e9cessaire de la charger \u00e0 nouveau. (voir Fichiers) </p> <p>Si le code contient une erreur, un message d\u00e9file sur l'\u00e9cran de la carte, mais il n'est pas toujours ais\u00e9 de le lire.</p> <p>Flasher un programme avec MacOS Catalina</p> <p>Sur les syst\u00e8mes MacOS \u00e0 partir de Catalina, il faut disposer des droits suffisants pour que  Mu \u00e9crive sur la carte micro:bit. Le moyen le plus simple d'y parvenir est d'ex\u00e9cuter  Mu comme administrateur en tapant les instructions suivantes dans un terminal :</p> <pre><code>$ cd /Applications\n$ sudo open mu-editor.app\n</code></pre>"},{"location":"microbit/python_mu/#fichiers","title":"Fichiers","text":"<p>Remarque</p> <p>Cette fonctionnalit\u00e9 n\u00e9cessite qu'un programme MicroPython ait \u00e9t\u00e9 flash\u00e9 sur l'appareil.</p> <p>Le bouton \u00ab Fichiers \u00bb de Mu acc\u00e8de \u00e0 un syst\u00e8me de fichiers et facilite l'acc\u00e8s, le placement, l'obtention et la suppression de fichiers sur l'appareil. Il ouvre deux volets : le volet de gauche r\u00e9pertorie tous les fichiers de la carte micro:bit, le volet de droite r\u00e9pertorie tous les fichiers du r\u00e9pertoire <code>mu_code</code> sur l'ordinateur. Faire glisser les fichiers de l'un \u00e0 l'autre pour les copier. Pour supprimer un fichier sur la carte, cliquer dessus avec le bouton droit de la souris et s\u00e9lectionner \u00ab Supprimer \u00bb.  </p>"},{"location":"microbit/python_mu/#repl","title":"REPL","text":"<p>Le bouton \u00ab REPL \u00bb cr\u00e9e un nouveau volet entre l'\u00e9diteur de texte et le pied de page de Mu. Il s'agit d'un interpr\u00e9teur interactif qui se connecte au MicroPython REPL sur la carte micro:bit. Le terme \u00ab REPL \u00bb est un acronyme qui signifie \u00ab Read, Evaluate, Print, Loop \u00bb : l'interpr\u00e9teur lit les lignes de Python, \u00e9value ce que cela peut signifier, affiche tout r\u00e9sultat (dans l'interpr\u00e9teur ou sur la carte, selon l'instruction), puis revient en boucle pour attendre la prochaine instruction Python. L'ouverture du volet REPL interrompt l'ex\u00e9cution du programme en cours : pour le faire re-d\u00e9marrer on peut soit actionner le bouton \u00e0 l'arri\u00e8re de la carte, soit taper Ctrl+D.</p>"},{"location":"microbit/python_mu/#graphique","title":"Graphique","text":"<p> Enfin, le bouton \u00ab Graphique \u00bb ouvre le traceur de Mu. Si la carte micro:bit produit des p-uplets (tuples) de nombres via la connexion s\u00e9rie, le traceur les affichera sous forme graphique. La sortie est constitu\u00e9e de courbes, avec le temps en abscisses et les valeurs des donn\u00e9es en ordonn\u00e9es.</p> <p>Attention</p> <p>Le mod\u00e8le habituel pour \u00e9mettre des p-uplets est de le faire dans une boucle. Il faut inclure une pause dans la boucle pour que le traceur fonctionne correctement. Sinon, il y a un risque que le code inonde le traceur de donn\u00e9es, et il ne pourra pas suivre. La meilleure fa\u00e7on d'y parvenir est d'utiliser <code>time.sleep()</code> (mesure en secondes) ou <code>microbit.sleep()</code> (mesure en millisecondes).</p> <p>Exemple</p> <p> </p> <p>L'instruction <code>print((mesure,))</code> permet au traceur de repr\u00e9senter la valeur de la mesure en fonction du temps. </p>"},{"location":"microbit/python_mu/#aspect","title":"Aspect","text":"<p>Les boutons de ce groupe permettent de r\u00e9gler quelques param\u00e8tres d'affichage (zoom, mode sombre) et notamment de vid\u00e9oprojeter du code dans de bonnes conditions.</p>"},{"location":"microbit/python_mu/#divers","title":"Divers","text":"<p>Ce dernier groupe comporte un bouton de v\u00e9rification du code, qui d\u00e9tecte plusieurs types d'erreurs (syntaxe, indentation, ... ) ou non-respect des recommandation de la PEP8. Certains messages sont traduits en fran\u00e7ais, d'autres non.  Lorsqu'aucune erreur n'est d\u00e9tect\u00e9e, un message l'indique en bas de la fen\u00eatre.</p>"},{"location":"microbit/python_music/","title":"La musique","text":"<p>La carte micro:bit V2 int\u00e8gre un haut-parleur permettant de jouer de la musique. Il faut importer la biblioth\u00e8que <code>music</code> \u00e0 l'aide de l'instruction <code>import music</code>.</p> <p>Cette biblioth\u00e8que comporte des m\u00e9lodies pr\u00e9-enregistr\u00e9es. |Instructions|Effet| | :--- | :--- | |<code>music.play(music.NOM_MELODIE)</code>|joue NOM_MELODIE|</p> <p>Info</p> <p>Voici la liste des m\u00e9lodies pr\u00e9d\u00e9finies que l'on peut jouer : DADADADUM, ENTERTAINER, PRELUDE, ODE, NYAN, RINGTONE, FUNK, BLUES, BIRTHDAY, WEDDING, FUNERAL, PUNCHLINE, PYTHON, BADDY, CHASE, BA_DING, WAWAWAWAA, JUMP_UP, JUMP_DOWN, POWER_UP, POWER_DOWN.</p>"},{"location":"microbit/python_music/#exemple","title":"Exemple","text":"<pre><code>from microbit import *\nimport music\nwhile True:\n    if button_a.was_pressed():\n        music.play(music.PUNCHLINE)\n</code></pre>"},{"location":"microbit/python_music/#references","title":"R\u00e9f\u00e9rences","text":"<p>D'autres fonctionnalit\u00e9s sont disponibles, notamment pour cr\u00e9er ses propres m\u00e9lodies. Pour en savoir plus, consulter Music : la documentation microbit-micropython. </p>"},{"location":"microbit/python_radio/","title":"La communication radio","text":""},{"location":"microbit/python_radio/#fonctionnalites-de-base","title":"Fonctionnalit\u00e9s de base","text":"<p>La fonctionnalit\u00e9 radio permet d'\u00e9changer des messages avec une ou plusieurs cartes micro:bit. Il faut au moins deux cartes et chacune comporte un programme (qui peut \u00eatre commun si les r\u00f4les sont sym\u00e9triques).</p> Instructions Effet <code>import radio</code> Importe la biblioth\u00e8que <code>radio</code> <code>radio.on()</code> Active la fonctionnalit\u00e9 radio <code>radio.send(message)</code> Envoie un message de type chaine de caract\u00e8res <code>radio.receive()</code> Prend pour valeur la chaine de caract\u00e8res re\u00e7ue"},{"location":"microbit/python_radio/#exemple","title":"Exemple","text":"<p>Ce programme n\u00e9cessite deux cartes : un appui sur un bouton de la carte \u00e9mettrice provoque un affichage sur la carte r\u00e9ceptrice. En cas d'appui sur le bouton A, on affiche <code>Image.YES</code> et en cas d'appui sur le bouton B, on affiche <code>Image.NO</code>.</p> <p>Programme sur la carte \u00e9mettrice <pre><code>from microbit import *\nimport radio\nradio.on()\nwhile True:\n    if button_a.was_pressed():\n        radio.send(\"A\")\n    elif button_b.was_pressed():\n        radio.send(\"B\")\n</code></pre></p> <p>Programme sur la carte r\u00e9ceptrice <pre><code>from microbit import *\nimport radio\nradio.on()\nwhile True:\n    incoming = radio.receive()\n    if incoming == \"A\":\n        display.show(Image.YES)\n        sleep(200)\n    elif incoming == \"B\":\n        display.show(Image.NO)\n        sleep(200)\n    display.clear()\n</code></pre></p>"},{"location":"microbit/python_radio/#fonctionnalites-avancees","title":"Fonctionnalit\u00e9s avanc\u00e9es","text":"<p>Il est possible de configurer certains param\u00e8tres : la fr\u00e9quence d'\u00e9mission (entre 2,4GHz et 2,5Ghz selon le canal choisi), l'adresse ou le groupe. Seules les cartes poss\u00e9dant le m\u00eame canal, la m\u00eame adresse et le m\u00eame num\u00e9ro de groupe communiqueront.</p> Instructions Effet <code>radio.config(channel=7)</code> Configure la fr\u00e9quence d'\u00e9mission : la valeur est un num\u00e9ro entre 0 et 83 <code>radio.config(address=0x75626974)</code> Configure l'adresse, cod\u00e9e sur 4 octets <code>radio.config(group=0)</code> Configure le groupe : au sein d'une m\u00eame adresse, 256 groupes num\u00e9rot\u00e9s de 0 \u00e0 255 peuvent cohabiter <code>radio.config(queue=3)</code> Fixe \u00e0 3 le nombre de messages dans la file d'attente. Au del\u00e0 de 3 messages en attente, ils seront supprim\u00e9s. <code>radio.config(length=32)</code> Fixe la longueur maximum du message ( 32 octets par d\u00e9faut, 251 au maximum). <code>radio.config(power=6)</code> Fixe la puissance d'\u00e9mission du signal, de 0 \u00e0 7 <code>radio.config(data_rate=radio.RATE_1MBIT)</code> Fixe la vitesse de transmission parmi <code>RATE_250KBIT</code>, <code>RATE_1MBIT</code> ou <code>RATE_2MBIT</code> <code>radio.reset()</code> R\u00e9initialise les param\u00e8tres aux r\u00e9glages par d\u00e9faut <code>radio.off()</code> D\u00e9sactive la fonctionnalit\u00e9 radio"},{"location":"microbit/python_temperature/","title":"La temp\u00e9rature","text":"<p>La carte micro:bit int\u00e8gre un capteur de temp\u00e9rature. Il n'est pas tr\u00e8s pr\u00e9cis dans la mesure o\u00f9 il est soud\u00e9 sur la carte elle-m\u00eame, \u00e0 proximit\u00e9 du processeur ; il est donc perturb\u00e9 par l'\u00e9chauffement provoqu\u00e9 par le fonctionnement de la carte.</p> Instructions Effet <code>temperature()</code> renvoie la valeur de la temp\u00e9rature"},{"location":"microbit/python_temperature/#exemple","title":"Exemple","text":"<pre><code>from microbit import *\n\nwhile True:\n    if button_a.was_pressed():\n        display.scroll(temperature())\n</code></pre>"},{"location":"microbit/scratch/","title":"Utiliser la carte micro:bit avec Scratch","text":""},{"location":"microbit/scratch/#programmer-la-carte-avec-scratch","title":"Programmer la carte avec Scratch","text":"<p>L'interface de programmation Scratch s'appuie sur la version Scratch 3 et s'utilise dans un navigateur, sur ordinateur ou tablette. La connexion avec la carte micro:bit utilise le bluetooth. </p> <p>Un seul fichier <code>.hex</code> est \u00e0 t\u00e9l\u00e9charger sur la carte au d\u00e9but, et il s'agit toujours du m\u00eame fichier. Ensuite l'ex\u00e9cution du code se fait comme habituellement dans Scratch : double-clic sur un bloc d'instructions, ou sur le drapeau vert, etc.</p> <ol> <li>Sur ordinateur (Windows, macOS), lancer Scratch Link, \u00e0 installer au pr\u00e9alable : lien de t\u00e9l\u00e9chargement et instructions</li> <li>Connecter la carte \u00e0 l'aide du c\u00e2ble USB et copier-glisser le fichier <code>scratch-microbit.hex</code> sur la carte micro:bit : lien de t\u00e9l\u00e9chargement et instructions</li> <li>Alimenter la carte micro:bit, \u00e0 l'aide de piles ou du c\u00e2ble USB. </li> <li>Ouvrir dans un navigateur l'interface de programmation Scratch</li> <li>Cliquer sur l'ic\u00f4ne d'ajout d'extension et choisir l'extension micro:bit. </li> </ol> <p></p> <p>Choisir ensuite la carte micro:bit \u00e0 connecter. </p> <p>Dix nouveaux blocs d'instructions apparaissent pour programmer la carte.</p> <p></p> <p>La possibilit\u00e9 suppl\u00e9mentaire offerte par Scratch est que la carte peut \u00eatre utilis\u00e9e pour interagir avec des lutins classiques de Scratch sur \u00e9cran. </p>"},{"location":"microbit/scratch/#exemple-1-crabe-et-diamants","title":"Exemple 1 : crabe et diamants","text":"<p>Par exemple, dans le programme Crabe et diamants disponible en ligne, le crabe se d\u00e9place horizontalement en fonction de l'inclinaison de la carte, et tente d'attraper des diamants lorsqu'on appuie sur les boutons de la carte.  </p> <p></p>"},{"location":"microbit/scratch/#exemple-2-roulis-et-tangage","title":"Exemple 2 : roulis et tangage","text":"<p>Sur cet autre exemple, Roulis et tangage, les valeurs des inclinaisons de la carte sont utilis\u00e9es pour une visualisation en temps r\u00e9el : un nuage de points donne l'angle de tangage (avant-arri\u00e8re) et l'autre donne l'angle de roulis (gauche-droite). </p>"},{"location":"microbit/scratch/#exemple-3-labyrinthe","title":"Exemple 3 : labyrinthe","text":"<p>Un lutin se d\u00e9place dans un labyrinthe (sans franchir les murs) selon l'inclinaison de la carte micro:bit.  - version avec blocs dissoci\u00e9s \u00e0 assembler - version compl\u00e8te</p>"},{"location":"microbit/sound/","title":"Sound","text":"In\u00a0[\u00a0]: Copied! <pre>from microbit import *\n</pre> from microbit import * In\u00a0[\u00a0]: Copied! <pre>offset = 580\n</pre> offset = 580 In\u00a0[\u00a0]: Copied! <pre>def read():\n    return max(0, pin2.read_analog() - offset)\n</pre> def read():     return max(0, pin2.read_analog() - offset) In\u00a0[\u00a0]: Copied! <pre>def wait_for_double_clap(timeout=1000, spread=500, sensitivity=75):\n    sensitivity = 105 - sensitivity\n\n    clap_one_time = None\n\n    start_time = running_time()\n    while running_time() - start_time &lt; timeout:\n        if read() &gt; sensitivity:\n            while read() &gt; sensitivity:\n                pass\n            sleep(100)\n            if clap_one_time is not None and running_time() - clap_one_time &lt; spread:\n                return True\n            else:\n                clap_one_time = running_time()\n\n    return False\n</pre> def wait_for_double_clap(timeout=1000, spread=500, sensitivity=75):     sensitivity = 105 - sensitivity      clap_one_time = None      start_time = running_time()     while running_time() - start_time &lt; timeout:         if read() &gt; sensitivity:             while read() &gt; sensitivity:                 pass             sleep(100)             if clap_one_time is not None and running_time() - clap_one_time &lt; spread:                 return True             else:                 clap_one_time = running_time()      return False In\u00a0[\u00a0]: Copied! <pre>def wait_for_clap(timeout=1000, sensitivity=75):\n    sensitivity = 105 - sensitivity\n\n    start_time = running_time()\n    while running_time() - start_time &lt; timeout:\n        if read() &gt; sensitivity:\n            return True\n\n    return False\n</pre> def wait_for_clap(timeout=1000, sensitivity=75):     sensitivity = 105 - sensitivity      start_time = running_time()     while running_time() - start_time &lt; timeout:         if read() &gt; sensitivity:             return True      return False"},{"location":"microbit/tcs3472/","title":"Tcs3472","text":"In\u00a0[\u00a0]: Copied! <pre>from microbit import i2c, sleep, pin8\nimport struct\n</pre> from microbit import i2c, sleep, pin8 import struct In\u00a0[\u00a0]: Copied! <pre>ADDR = 0x29\n</pre> ADDR = 0x29 In\u00a0[\u00a0]: Copied! <pre>LEVEL = 65.535\n</pre> LEVEL = 65.535 In\u00a0[\u00a0]: Copied! <pre>class tcs3472:\n    def __init__(self):\n        i2c.write(ADDR, b'\\x80\\x03')\n        i2c.write(ADDR, b'\\x81\\x2b')\n\n    def scaled(self):\n        crgb = self.raw()\n        if crgb[0] &gt; 0:\n            return tuple(float(x) / crgb[0] for x in crgb[1:])\n\n        return (0,0,0)\n\n    def rgb(self):\n        return tuple(int(x * 255) for x in self.scaled())\n\n    def light(self):\n        return self.raw()[0]\n\n    def brightness(self, level=LEVEL):\n        return int((self.light() / level))\n\n    def valid(self):\n        i2c.write(ADDR, b'\\x93')\n        return i2c.read(ADDR, 1)[0] &amp; 1\n\n    def raw(self):\n        i2c.write(ADDR, b'\\xb4')\n        return struct.unpack(\"&lt;HHHH\", i2c.read(ADDR, 8))\n\n    def set_leds(self, state):\n        pin8.write_digital(state)\n</pre> class tcs3472:     def __init__(self):         i2c.write(ADDR, b'\\x80\\x03')         i2c.write(ADDR, b'\\x81\\x2b')      def scaled(self):         crgb = self.raw()         if crgb[0] &gt; 0:             return tuple(float(x) / crgb[0] for x in crgb[1:])          return (0,0,0)      def rgb(self):         return tuple(int(x * 255) for x in self.scaled())      def light(self):         return self.raw()[0]      def brightness(self, level=LEVEL):         return int((self.light() / level))      def valid(self):         i2c.write(ADDR, b'\\x93')         return i2c.read(ADDR, 1)[0] &amp; 1      def raw(self):         i2c.write(ADDR, b'\\xb4')         return struct.unpack(\" In\u00a0[\u00a0]: Copied! <pre>if __name__ == \"__main__\":\n    t = tcs3472()\n    while True:\n        t.set_leds(1)\n        sleep(200)\n        r, g, b = t.rgb()\n        l = t.light()\n        t.set_leds(0)\n        print(\"#{:02x}{:02x}{:02x} - {}\".format(r, g, b, l))\n        sleep(300)\n</pre> if __name__ == \"__main__\":     t = tcs3472()     while True:         t.set_leds(1)         sleep(200)         r, g, b = t.rgb()         l = t.light()         t.set_leds(0)         print(\"#{:02x}{:02x}{:02x} - {}\".format(r, g, b, l))         sleep(300)"},{"location":"nsi_premiere/decouvrir/","title":"D\u00e9couvrir","text":"<p>Cette page pr\u00e9sente une s\u00e9lection de situations simples permettant de faire d\u00e9couvrir certaines notions au programme, avec l'accompagnement d'un enseignant. Les pages r\u00e9f\u00e9renc\u00e9es ici sont class\u00e9es par th\u00e8mes mais ne sont pas incluses dans l'arborescence du site afin que la consultation de ces pages n'aiguillent pas les \u00e9l\u00e8ves sur la notion en jeu.</p>"},{"location":"nsi_premiere/decouvrir/#binaire","title":"Binaire","text":"<p>Marquage d'oiseaux</p>"},{"location":"nsi_premiere/decouvrir/#hexadecimal","title":"Hexad\u00e9cimal","text":"<p>Syst\u00e8me RVB</p>"},{"location":"nsi_premiere/decouvrir/#operateurs-booleens","title":"Op\u00e9rateurs bool\u00e9ens","text":"<p>Commandes d'\u00e9clairage</p>"},{"location":"nsi_premiere/decouvrir/#tri","title":"Tri","text":"<p>Fabrique de bols</p>"},{"location":"nsi_premiere/defimotifs/","title":"Vingt motifs","text":"<p>Tous les motifs de ce notebook sont r\u00e9alis\u00e9s avec le module ipythonblocks.  </p> <pre><code>from ipythonblocks import BlockGrid\n</code></pre>"},{"location":"nsi_premiere/defimotifs/#1-motifs-et-egalite","title":"1.  Motifs et \u00e9galit\u00e9","text":"<p>L'instruction <code>grille = BlockGrid(12, 12, fill = (240, 240, 240))</code> permet de cr\u00e9er une grille carr\u00e9e de 12 cellules de c\u00f4t\u00e9. La couleur de chaque cellule est un gris clair de code RVB(240, 240, 240).  </p> <pre><code>grille = BlockGrid(12, 12, fill = (240, 240, 240))\ngrille.show()\n</code></pre> <p>Chaque cellule poss\u00e8de les attributs : </p> <ul> <li><code>row</code>: indice de ligne de la cellule  </li> <li><code>col</code>: indice de colonne de la cellule  </li> </ul> <p>La m\u00e9thode <code>set_colors()</code> permet de modifier les niveaux de (rouge, vert, bleu). Au survol de la souris, les coordonn\u00e9es <code>[row, col]</code> et la couleur de la cellule sont affich\u00e9es.</p>"},{"location":"nsi_premiere/defimotifs/#question-11","title":"Question 1.1","text":"<p>On consid\u00e8re le code suivant, qui permet de colorier en noir (code RVB (0, 0, 0)) certaines cellules et de cr\u00e9er le motif n\u00b01 :  </p> <pre><code>grille = BlockGrid(12, 12, fill = (240, 240, 240))\n\ndef motif_1():\n    for cellule in grille:\n        if 4 &lt;= cellule.row &lt; 8 and 4 &lt;= cellule.col &lt; 8:\n            cellule.set_colors(0, 0, 0)\nmotif_1()\ngrille.show()\n</code></pre> <p>a) Dessiner sur une feuille la grille que l'on obtiendrait en ex\u00e9cutant le code pr\u00e9c\u00e9dent. b) V\u00e9rifier en ex\u00e9cutant le code. c) Analyser les \u00e9ventuels \u00e9carts entre le dessin anticip\u00e9 et l'affichage obtenu.</p>"},{"location":"nsi_premiere/defimotifs/#question-12","title":"Question 1.2","text":"<p>On consid\u00e8re le code suivant, qui permet de colorier en noir (code RVB (0, 0, 0)) certaines cellules et de cr\u00e9er le motif n\u00b02 :</p> <pre><code>grille = BlockGrid(12, 12, fill = (240, 240, 240))\n\ndef motif_2():\n    for cellule in grille:\n        if cellule.row == cellule.col :\n            cellule.set_colors(0, 0, 0)\n\nmotif_2()  \ngrille.show()\n</code></pre> <p>a) En lisant le code, trouver les coordonn\u00e9es d'une cellule colori\u00e9e en noir et les coordonn\u00e9es d'une cellule qui ne l'est pas. b) Dessiner sur une feuille la grille que l'on obtiendrait en ex\u00e9cutant le code pr\u00e9c\u00e9dent. c) V\u00e9rifier en ex\u00e9cutant le code et en affichant la grille. d) Quelle est la particularit\u00e9 des cellules qui sont en noir apr\u00e8s l'ex\u00e9cution du code ? </p>"},{"location":"nsi_premiere/defimotifs/#question-13","title":"Question 1.3","text":"<p>a) Observer le motif n\u00b03 ci-dessous.  b) Trouver une ou plusieurs relation(s) v\u00e9rifi\u00e9e(s) par les coordonn\u00e9es des cellules colori\u00e9es en noir.</p> <p>c) Compl\u00e9ter le code suivant pour que son ex\u00e9cution produise le motif ci-dessus.  </p> <pre><code>grille = BlockGrid(12, 12, fill = (240, 240, 240))\n\ndef motif_3():    \n    for cellule in grille:\n        if cellule.row == ... or cellule.row == ... : # remplacer les ...\n            cellule.set_colors(0, 0, 0)\n\nmotif_3()\ngrille.show()\n</code></pre>"},{"location":"nsi_premiere/defimotifs/#question-14","title":"Question 1.4","text":"<p>\u00c9crire un code dont l'ex\u00e9cution produit l'affichage du motif n\u00b04 ci-dessous : </p>"},{"location":"nsi_premiere/defimotifs/#2-motifs-et-modulo","title":"2. Motifs et modulo","text":""},{"location":"nsi_premiere/defimotifs/#question-21","title":"Question 2.1","text":"<p>On consid\u00e8re le code suivant, qui permet de colorier en noir (code RVB (0, 0, 0)) certaines cellules et de cr\u00e9er le motif n\u00b05 :</p> <pre><code>grille = BlockGrid(12, 12, fill = (240, 240, 240))\n\ndef motif_5():\n    for cellule in grille:\n        if cellule.row % 2 == 0:\n            cellule.set_colors(0, 0, 0)\n\nmotif_5()\ngrille.show()\n</code></pre> <p>a) En lisant le code, trouver les coordonn\u00e9es d'une cellule colori\u00e9e en noir et les coordonn\u00e9es d'une cellule qui ne l'est pas. b) Dessiner sur une feuille la grille que l'on obtiendrait en ex\u00e9cutant le code pr\u00e9c\u00e9dent. c) V\u00e9rifier en ex\u00e9cutant le code. d) Quelle est la particularit\u00e9 des cellules qui sont en noir apr\u00e8s l'ex\u00e9cution du code ? </p>"},{"location":"nsi_premiere/defimotifs/#question-22","title":"Question 2.2","text":"<p>a) Observer le motif n\u00b06 ci-dessous.  b) Trouver une relation v\u00e9rifi\u00e9e par les coordonn\u00e9es des cellules colori\u00e9es en noir. c) \u00c9crire un code dont l'ex\u00e9cution produit l'affichage du motif ci-dessous.</p>"},{"location":"nsi_premiere/defimotifs/#question-23","title":"Question 2.3","text":"<p>a) Observer le motif n\u00b07 ci-dessous.  b) Trouver une relation v\u00e9rifi\u00e9e par la somme des coordonn\u00e9es des cellules colori\u00e9es en noir. c) \u00c9crire un code dont l'ex\u00e9cution produit l'affichage du motif ci-dessous :  </p>"},{"location":"nsi_premiere/defimotifs/#question-24","title":"Question 2.4","text":"<p>Pour chacun des 2 motifs (n\u00b08 et 9) ci-dessous, \u00e9crire un code dont l'ex\u00e9cution produit l'affichage du motif. </p> <p></p>"},{"location":"nsi_premiere/defimotifs/#question-25","title":"Question 2.5","text":"<p>a) Observer le motif n\u00b010 ci-dessous.  b) Trouver une relation v\u00e9rifi\u00e9e par le produit des coordonn\u00e9es des cellules colori\u00e9es en noir. c) \u00c9crire un code dont l'ex\u00e9cution produit l'affichage du motif ci-dessous.</p>"},{"location":"nsi_premiere/defimotifs/#question-26","title":"Question 2.6","text":"<p>Pour chacun des 4 motifs ci-dessous (n\u00b011 \u00e0 14), \u00e9crire un code dont l'ex\u00e9cution produit l'affichage du motif. </p> <p></p> <p></p> <p></p>"},{"location":"nsi_premiere/defimotifs/#3-motifs-et-division","title":"3. Motifs et division","text":""},{"location":"nsi_premiere/defimotifs/#question-31","title":"Question 3.1","text":"<p>On consid\u00e8re le code suivant, qui permet de colorier en noir (code RVB (0, 0, 0)) certaines cellules et de cr\u00e9er le motif n\u00b015 :</p> <pre><code>grille = BlockGrid(12, 12, fill = (240, 240, 240))\n\ndef motif_15():    \n    for cellule in grille:\n        if cellule.row // 2 == cellule.col // 2 :\n            cellule.set_colors(0, 0, 0)\n\nmotif_15()\ngrille.show()\n</code></pre> <p>a) En lisant le code, d\u00e9terminer la couleur des cellules de coordonn\u00e9es  : [2, 2], [2, 3], [3, 2], [3, 3] b) Dessiner sur une feuille la grille que l'on obtiendrait en ex\u00e9cutant le code pr\u00e9c\u00e9dent. c) V\u00e9rifier en ex\u00e9cutant le code et en affichant la grille.  d) Analyser les \u00e9ventuels \u00e9carts entre le dessin anticip\u00e9 et l'affichage obtenu.</p>"},{"location":"nsi_premiere/defimotifs/#question-32","title":"Question 3.2","text":"<p>Pour chacun des 3 motifs ci-dessous (n\u00b0 16 \u00e0 18), \u00e9crire un code dont l'ex\u00e9cution produit l'affichage du motif.</p> <p></p> <p></p>"},{"location":"nsi_premiere/defimotifs/#4-motifs-complexes","title":"4. Motifs complexes","text":"<p>Voici un motif dont le code comporte les diff\u00e9rentes op\u00e9rations utilis\u00e9es pr\u00e9c\u00e9demment (+, *, //, %) et combine deux fonctions.</p> <pre><code>grille = BlockGrid(12, 12, fill = (240, 240, 240))\n\ndef motif_19():    \n    for cellule in grille:\n        if (cellule.row // 2 + cellule.col * 3) %7 == 0 :\n            cellule.set_colors(0, 0, 0)\ndef motif_20():    \n    for cellule in grille:\n        if (cellule.row * 3 + cellule.col // 2) %7 == 0     :\n            cellule.set_colors(0, 0, 0)\n\nmotif_19()\nmotif_20()\ngrille.show()\n</code></pre>"},{"location":"nsi_premiere/defimotifs/#question-4","title":"Question 4","text":"<p>Cr\u00e9er son propre motif en cr\u00e9ant et combinant les fonctions de son choix.</p>"},{"location":"nsi_premiere/exposes/","title":"Expos\u00e9s","text":"<p>Choisir un th\u00e8me d'expos\u00e9 parmi l'un des th\u00e8mes suivants : des documents impos\u00e9s sont \u00e0 consulter sur le web, et peuvent \u00eatre compl\u00e9t\u00e9s avec d\u2019autres sources.</p> <p>La pr\u00e9sentation sera r\u00e9alis\u00e9e sous forme d'une capsule audio. Il peut s'agir, suivant les cas :  </p> <ul> <li>d'un r\u00e9sum\u00e9 de tout ou partie des documents propos\u00e9s,  </li> <li>de la r\u00e9ponse argument\u00e9e \u00e0 une question li\u00e9e au th\u00e8me (\u00e0 formuler).</li> </ul> <p>Consignes : La pr\u00e9sentation orale devra durer 3 \u00e0 5 minutes. Elle est \u00e0 enregistrer sous la forme d'une capsule audio. Penser \u00e0 se pr\u00e9senter (nom-pr\u00e9nom) en d\u00e9but d'enregistrement et \u00e0 rappeler le th\u00e8me choisi.</p> <p>Un temps d'\u00e9changes sera organis\u00e9 en classe : il permettra \u00e0 un jury d\u2019\u00e9l\u00e8ves, apr\u00e8s \u00e9coute de l'enregistrement, de poser des questions sur le th\u00e8me de l\u2019expos\u00e9 pour \u00e9valuer la solidit\u00e9 des connaissances et la qualit\u00e9 de l\u2019interaction (colonnes 3 et 4 de la grille d\u2019\u00e9valuation).</p>"},{"location":"nsi_premiere/exposes/#personnalites-de-linformatique","title":"Personnalit\u00e9s de l'informatique","text":"<p>Pr\u00e9sentez l\u2019une des personnalit\u00e9s suivantes :</p> Nom Ressources \u00e0 consulter Ada Lovelace - L\u2019enchanteresse des nombres- Ada Lovelace, math\u00e9maticienne Alan Turing - Alan Turing, le hacker- Itin\u00e9raire d\u2019un pr\u00e9curseur Linus Torvalds - L\u2019embl\u00e9matique fondateur de Linux s\u2019excuse d\u2019avoir \u00e9t\u00e9 insupportable- L'esprit derri\u00e8re Linux Grace Hopper - Histoire de Grace Hopper- La p\u00e9tulante Grace Hopper- Grace Hopper, inventeuse du premier compilateur Guido Van Rossum Je n\u2019imaginais pas que le langage informatique Python conna\u00eetrait un tel succ\u00e8s"},{"location":"nsi_premiere/exposes/#algorithmique","title":"Algorithmique","text":"Th\u00e8me Ressources \u00e0 consulter La complexit\u00e9 algorithmique - Henri Potier \u00e0 l\u2019\u00e9cole de la complexit\u00e9- La th\u00e9orie de la complexit\u00e9 algorithmique pour calculer efficacement- Est-ce que P = NP ? Les classes de complexit\u00e9 Cryptographie - Cryptographie, du chiffre et des lettres - Cryptographie : comment ma carte \u00e0 puce r\u00e9siste-t-elle aux attaques ?"},{"location":"nsi_premiere/exposes/#machines","title":"Machines","text":"Th\u00e8me Ressources \u00e0 consulter Jean Zay, le supercalculateur le plus puissant de France - Jean Zay, le supercalculateur le plus puissant de France - Paris-Saclay : le r\u00e9seau de chaleur et de froid monte en puissance - Le supercalculateur Fugaku est devenu le plus puissant du monde - L'ordinateur le plus puissant du monde est japonais  Stocker des donn\u00e9es - Le disque dur - La r\u00e9alit\u00e9 physique du monde num\u00e9rique- Comment stocker des donn\u00e9es \u00e0 (tr\u00e8s) long terme ? Informatique quantique Les ordinateurs quantiquesQu'est-ce qu'un algorithme quantique ?"},{"location":"nsi_premiere/exposes/#informatique-et-societe","title":"Informatique et soci\u00e9t\u00e9","text":"Th\u00e8me Ressources \u00e0 consulter Intelligence artificielle - Yann LeCun : l\u2019apprentissage profond avant tout- L\u2019intelligence artificielle, mythes et r\u00e9alit\u00e9s - Des machines enfin intelligentes\u2009?- Le deep learning- Des biais de repr\u00e9sentativit\u00e9 en intelligence artificielle - L'intelligence artificielle (Yann LeCun et Etienne Klein)- Le master qui forme les sp\u00e9cialistes en intelligence artificielle Le bitcoin - Bitcoin, la cryptomonnaie- Du bitcoin \u00e0 la blockchain- Le bitcoin, monnaie virtuelle mais gouffre environnemental r\u00e9el- Le Bitcoin et la Blockchain Parit\u00e9 dans les m\u00e9tiers informatiques - Pourquoi est-il important d\u2019avoir une \u00e9galit\u00e9 femmes-hommes dans le monde de l\u2019IA ?- Pourquoi les filles ont d\u00e9laiss\u00e9 l\u2019informatique ? Informatique et sant\u00e9 - Les robots \u00e0 l'h\u00f4pital- \u00c0 l\u2019h\u00f4pital, le risque des virus\u2026 informatiques"},{"location":"nsi_premiere/express/","title":"Questions express","text":"<p>Des questions en tout genre, dont la r\u00e9ponse peut se trouver avec quelques lignes de code.  </p> <p>Les r\u00e9ponses sont donn\u00e9es brutes sans aucun argument de validit\u00e9.</p>"},{"location":"nsi_premiere/express/#quels-sont-les-entiers","title":"Quels sont les entiers... ?","text":""},{"location":"nsi_premiere/express/#enonce-1","title":"\u00c9nonc\u00e9 1","text":"<p>Question</p> <p>Quels sont les entiers \\(n\\) tels que \\(n!\\) (factorielle \\(n\\)) comporte exactement \\(n\\) chiffres ?</p> R\u00e9ponse <p>1, 23, 24 et 25  </p>"},{"location":"nsi_premiere/express/#enonce-2","title":"\u00c9nonc\u00e9 2","text":"<p>Question</p> <p>Quels sont les entiers qui sont \u00e9gaux \u00e0 la somme de la factorielle de leur(s) chiffre(s) ?</p> R\u00e9ponse <p>1, 2, 145 et 40585</p>"},{"location":"nsi_premiere/express/#enonce-3","title":"\u00c9nonc\u00e9 3","text":"<p>Question</p> <p>Quels sont les entiers inf\u00e9rieurs \u00e0 1000 qui sont des nombres premiers permutables, c'est \u00e0 dire des nombres premiers dont toutes les permutations des chiffres sont des nombres premiers ?</p> R\u00e9ponse <p>2, 3, 5, 7, 11, 13, 17, 31, 37, 71, 73, 79, 97, 113, 131, 199, 311, 337, 373, 733, 919 et 991</p>"},{"location":"nsi_premiere/express_sol/","title":"Questions express","text":"<p>Des questions en tout genre, dont la r\u00e9ponse peut se trouver avec quelques lignes de code.  </p> <p>Les r\u00e9ponses et propositions de code sont donn\u00e9es brutes sans aucun argument de validit\u00e9.</p>"},{"location":"nsi_premiere/express_sol/#quels-sont-les-entiers","title":"Quels sont les entiers... ?","text":""},{"location":"nsi_premiere/express_sol/#enonce-1","title":"\u00c9nonc\u00e9 1","text":"<p>Question</p> <p>Quels sont les entiers \\(n\\) tels que \\(n!\\) (factorielle \\(n\\)) comporte exactement \\(n\\) chiffres ?</p> R\u00e9ponse <p>1, 23, 24 et 25  </p> Un code possible <pre><code>    from math import factorial\n    [n for n in range(100) if len(str(factorial(n))) == n]\n</code></pre>"},{"location":"nsi_premiere/express_sol/#enonce-2","title":"\u00c9nonc\u00e9 2","text":"<p>Question</p> <p>Quels sont les entiers qui sont \u00e9gaux \u00e0 la somme de la factorielle de leur(s) chiffre(s) ?</p> R\u00e9ponse <p>1, 2, 145 et 40585</p> Un code possible <p><pre><code>    from math import factorial\n    factorielles = {n:factorial(n) for n in range(10)}\n    def verif(n):\n       somme = 0\n       for chiffre in str(n) :\n          somme += factorielles[int(chiffre)]\n       return n == somme\n    [n for n in range(10000000) if verif(n)]\n</code></pre> oeis</p>"},{"location":"nsi_premiere/filius/","title":"Simulation de r\u00e9seaux avec Filius","text":""},{"location":"nsi_premiere/filius/#le-logiciel-filius","title":"Le logiciel Filius","text":"T\u00e9l\u00e9charger le logiciel Filius <p>Se rendre sur le site allemand du logiciel Filius https://www.lernsoftware-filius.de/Herunterladen.</p> <p>Chercher la version actuelle, par exemple \"Filius 1.14 (Windows/Ubuntu/Zip) \" Cliquer sur son syst\u00e8me d'exploitation : Windows ou Ubuntu (Avec MacOS, cliquer sur Zip : apr\u00e8s extraction de l'archive, le fichier \u00e0 ouvrir est alors filius.jar)</p> <p>Si le texte appara\u00eet en allemand lors de l\u2019installation, accepter les choix par d\u00e9faut. Lors du premier lancement du logiciel, choisir la langue \u201cFran\u00e7ais\u201d.</p> Aide sur le mode conception <p>Construire le r\u00e9seau</p> <ul> <li> <p>Cliquer sur l'ic\u00f4ne Conception : </p> </li> <li> <p>\u00c0 l\u2019aide d\u2019un cliquer-glisser \u00e0 la souris, s\u00e9lectionner des composants dans la marge de gauche et les disposer sur l\u2019espace de travail.</p> </li> <li> <p>Raccorder les composants \u00e0 l\u2019aide de c\u00e2bles. Pour cela, s\u00e9lectionner l\u2019outil c\u00e2ble en cliquant sur l\u2019ic\u00f4ne c\u00e2ble dans la marge de gauche, puis cliquer successivement sur deux composants \u00e0 raccorder.</p> </li> <li> <p>Utiliser le menu contextuel d\u2019un composant (clic droit) pour le supprimer ou supprimer ses connexions.</p> </li> </ul> <p>Param\u00e9trer les composants du r\u00e9seau</p> <ul> <li> <p>Double-cliquer sur le composant \u00e0 param\u00e9trer. Un ensemble de param\u00e8tres apparait dans la partie inf\u00e9rieure de la fen\u00eatre. Les noms des composants peuvent \u00eatre choisis arbitrairement : ils n\u2019ont aucune r\u00e9percussion sur le fonctionnement de la simulation.</p> </li> <li> <p>Ordinateur/portable : l\u2019adressage IP peut \u00eatre sp\u00e9cifi\u00e9 manuellement ou de fa\u00e7on automatique \u00e0 l\u2019aide d\u2019un serveur DHCP.</p> </li> <li> <p>Switch : un switch, ou commutateur, permet d\u2019interconnecter plusieurs composants entre eux au sein d\u2019un r\u00e9seau local. Ce composant ne n\u00e9cessite pas de configuration.</p> </li> <li> <p>Routeur : un routeur dispose d\u2019au moins deux interfaces r\u00e9seau. Chaque interface doit \u00eatre configur\u00e9e manuellement. Il faut \u00e9galement param\u00e9trer le routage, soit en activant le mode automatique, soit en d\u00e9finissant des r\u00e8gles manuellement.</p> </li> </ul> Aide sur le mode simulation <ul> <li>Cliquer sur l'ic\u00f4ne Simulation : </li> </ul> <p>Ce mode permet de simuler le fonctionnement du r\u00e9seau virtuel.     </p> <ul> <li> <p>Installer et utiliser des logiciels Chaque ordinateur et portable poss\u00e8de un bureau \u00e0 partir duquel peuvent \u00eatre install\u00e9es puis lanc\u00e9es des applications. Un clic sur l\u2019ic\u00f4ne d\u2019un ordinateur ou d\u2019un portable fait apparaitre son bureau dans une fen\u00eatre ind\u00e9pendante. Pour installer des logiciels, cliquer sur l\u2019ic\u00f4ne :  . Les ic\u00f4nes des applications install\u00e9es apparaissent alors sur le bureau. Un clic sur une ic\u00f4ne permet de lancer l\u2019application correspondante. Chaque application s\u2019ouvre dans une fen\u00eatre du bureau. Fermer la fen\u00eatre d\u2019une application, ou fermer la fen\u00eatre du bureau ne ferme pas les applications. Pour fermer une application, il faut la d\u00e9sinstaller.</p> </li> <li> <p>Afficher l\u2019\u00e9tat du r\u00e9seau Lorsque le bureau d\u2019un ordinateur ou d\u2019un portable est affich\u00e9, en pla\u00e7ant la souris au dessus de l\u2019ic\u00f4ne r\u00e9seau situ\u00e9e en bas \u00e0 droite, l\u2019adresse IP du poste apparait dans une infobulle. Pour obtenir le param\u00e9trage IP d\u00e9taill\u00e9 du poste, cliquer sur l\u2019ic\u00f4ne.</p> </li> <li> <p>Observer les \u00e9changes de donn\u00e9es Un journal conserve une trace de tous les paquets de donn\u00e9es envoy\u00e9s ou re\u00e7us par un poste. Pour visualiser ce journal, cliquer droit sur l\u2019ic\u00f4ne du poste et choisir \"Afficher les \u00e9changes de donn\u00e9es\". Le journal est pr\u00e9sent\u00e9 sous la forme d\u2019un tableau dont chaque ligne correspond \u00e0 un \u00e9change de donn\u00e9es. Un clic sur une ligne permet d\u2019afficher le d\u00e9tail du paquet de donn\u00e9es \u00e9chang\u00e9. Il est possible de ralentir la vitesse des \u00e9changes de donn\u00e9es en d\u00e9pla\u00e7ant vers la gauche le curseur situ\u00e9 au centre de la partie sup\u00e9rieure de la fen\u00eatre principale. Les c\u00e2bles deviennent verts lorsqu\u2019ils sont parcourus par des donn\u00e9es.</p> </li> <li> <p>Afficher la table du switch Le switch (ou commutateur) enregistre les adresses MAC des paquets entrants avec le port d\u2019arriv\u00e9e. Ces deux informations sont stock\u00e9es dans la table des adresses sources (SAT). Pour afficher cette table, cliquer sur le switch.</p> </li> </ul>"},{"location":"nsi_premiere/filius/#etape-1-reseau-de-2-ordinateurs","title":"\u00c9tape 1 : R\u00e9seau de 2 ordinateurs","text":"Mode conception <ul> <li>En mode conception, placer deux machines sur l\u2019espace de travail. La premi\u00e8re portera le nom M01 avec l\u2019adresse IP\u00a0192.168.0.1. La deuxi\u00e8me portera le nom M02 avec l\u2019adresse IP 192.168.0.2. Le masque est 255.255.255.0.</li> </ul> <p>Question 1</p> <p>Justifier que ces deux clients font partie du m\u00eame r\u00e9seau local.</p> <ul> <li>Relier les machines par un c\u00e2ble. Ces deux machines faisant partie du m\u00eame r\u00e9seau local, elles pourront communiquer.</li> </ul> <p></p> Mode simulation <p>Passer en mode simulation.</p> <ul> <li> <p>Acc\u00e9der au bureau de la machine M01 (en cliquant dessus) et installer un Terminal (Ligne de commande) avec l\u2019outil d'installation des logiciels.</p> </li> <li> <p>Ouvrir le terminal (Ligne de commande) sur le bureau de la machine M01.  </p> </li> <li>La commande <code>ipconfig</code> permet de conna\u00eetre la configuration r\u00e9seau d\u2019une machine. Ex\u00e9cuter cette commande sur M01.</li> </ul> <p>Question 2</p> <p>Quelle information trouve-t-on en dehors du nom de la machine et de son adresse IP ?</p> <ul> <li>La commande <code>arp</code> permet de conna\u00eetre la table de r\u00e9solution d'adresses connue de cette machine. Ex\u00e9cuter cette commande sur M01.</li> </ul> <p>Question 3</p> <p>Quelle information est mise en correspondance de l'adresse IP ? Quelle(s) correspondance(s) est(sont) \u00e9tablie(s) pour l'instant ?</p> <ul> <li>La commande <code>ping</code> <code>adresse-cible</code> permet de tester si la communication est possible avec la machine d\u2019adresse IP <code>adresse-cible</code>. V\u00e9rifier ainsi que M01 peut communiquer avec M02 en saisissant : <pre><code>root /&gt; ping 192.168.0.2\n</code></pre></li> </ul> <p>Question 4</p> <p>Quelles informations apparaissent ? Comment les interpr\u00e9ter ?</p> <ul> <li> <p>En effectuant un clic droit sur M01, s\u00e9lectionner \"Afficher les \u00e9changes de donn\u00e9es\". On obtient un tableau comme ci-dessous. En cliquant sur l'une des lignes, des d\u00e9tails s'affichent :  La premi\u00e8re ligne est une requ\u00eate du protocole ARP. Il s'agit d'un protocole qui s'interface entre la couche Internet et la couche Liaison (appel\u00e9e R\u00e9seau dans la capture d'\u00e9cran ). Cette requ\u00eate consiste en un appel \u00e0 tout le r\u00e9seau : \"Est-ce qu'une machine de ce r\u00e9seau poss\u00e8de l'IP 192.168.0.2 ?\" Sa table de correspondance IP \u2013 MAC ne contenant que l'adresse de broadcast 255.255.255.255, la machine M01 commence par envoyer un message \u00e0 tout le r\u00e9seau, par l'adresse MAC de broadcast <code>FF:FF:FF:FF:FF:FF</code>. La machine M02 d'IP 192.168.0.2 reconna\u00eet son IP et r\u00e9pond \u00e0 la machine M01 d'IP 192.168.0.1. Elle lui envoie la correspondance entre son IP et son adresse MAC.  La commande <code>arp</code> ex\u00e9cut\u00e9e sur M01 permet d\u00e9sormais de constater que cette machine a compl\u00e9t\u00e9 sa table de r\u00e9solution d'adresses : <pre><code>root /&gt; arp\n|    Adresse IP    |    Adresse MAC    |\n----------------------------------------\n| 192.168.0.2      | 9E:EC:D1:EB:03:04 |\n| 255.255.255.255  | FF:FF:FF:FF:FF:FF |\n</code></pre> Les huit derni\u00e8res lignes du tableau des \u00e9changes de donn\u00e9es montrent les quatre s\u00e9quences d'\u00e9changes dus \u00e0 la commande <code>ping</code> entre les 2 machines M01 et M02. Les <code>ping</code> (ICMP Echo request) sont \u00e9mis par M01 \u00e0 destination de M02 et en r\u00e9ponse, les <code>pong</code> (ICMP echo reply) sont \u00e9mis par M02  \u00e0 destination de  M01.</p> </li> <li> <p>Saisir \u00e0 nouveau la commande <code>ping 192.168.0.2</code> sur la machine M01 et l'ex\u00e9cuter.</p> </li> </ul> <p>Question 5</p> <p>Quelle diff\u00e9rence observe-t-on avec le r\u00e9sultat de la pr\u00e9c\u00e9dente ex\u00e9cution ? Comment l'expliquer ? (On pourra observer les \u00e9changes de donn\u00e9es pour justifier sa r\u00e9ponse)</p> <ul> <li>Enregistrer ce projet filius sous le nom <code>reseau1.fls</code>.</li> </ul>"},{"location":"nsi_premiere/filius/#etape-2-reseau-de-3-ordinateurs-avec-un-commutateur","title":"\u00c9tape 2 : R\u00e9seau de 3 ordinateurs avec un commutateur","text":"Mode conception <ul> <li>Reprendre le r\u00e9seau pr\u00e9c\u00e9dent <code>reseau1.fls</code>.</li> <li>Ajouter un 3\u00e8me ordinateur M03 (IP 192.168.0.3).</li> </ul> <p>Question 1</p> <p>M01 est d\u00e9j\u00e0 reli\u00e9 par un c\u00e2ble \u00e0 M02. Peut-on \u00e9galement relier M03 \u00e0 M01 ? Pourquoi ?</p> <ul> <li>Supprimer le c\u00e2ble entre M01 et M02.</li> <li>Ajouter un commutateur (switch).</li> <li>Relier chaque ordinateur au commutateur \u00e0 l'aide de c\u00e2bles. </li> </ul> Mode simulation <p>Question 2</p> <p>Quelle commande permet de v\u00e9rifier que la machine M01 peut communiquer avec M03 ?</p> <ul> <li>Ex\u00e9cuter cette commande.</li> </ul> <p>Question 3</p> <p>\u00c0 l'issue de l'ex\u00e9cution pr\u00e9c\u00e9dente, que contient la table de r\u00e9solution d'adresses de la machine M03 ?</p> <ul> <li>En cliquant sur le commutateur on obtient sa table SAT : elle associe \u00e0 chaque port du commutateur l'adresse MAC de la machine reli\u00e9e sur ce port. Cette table se met \u00e0 jour au fur et \u00e0 mesure des communications.</li> </ul> <p>Question 4</p> <p>Donner une commande permettant au commutateur de compl\u00e9ter sa table SAT.</p> <ul> <li>Ex\u00e9cuter une commande et v\u00e9rifier que la table est compl\u00e8te.</li> <li>Enregistrer ce projet sous le nom <code>reseau2.fls</code>.</li> </ul>"},{"location":"nsi_premiere/filius/#etape-3-connexion-de-2-reseaux-avec-un-routeur","title":"\u00c9tape 3 : connexion de 2 r\u00e9seaux avec un routeur","text":"Mode conception <ul> <li>Reprendre le r\u00e9seau pr\u00e9c\u00e9dent <code>reseau2.fls</code> : renommer son commutateur R0.</li> <li> <p>Cr\u00e9er un deuxi\u00e8me r\u00e9seau de 3\u00a0ordinateurs M11, M12 et M13\u00a0(adresses IP : 192.168.1.1, 192.168.1.2\u00a0et 192.168.1.3, masque : 255.255.255.0) reli\u00e9s via un nouveau commutateur R1.</p> </li> <li> <p>Connecter les 2 r\u00e9seaux au travers d\u2019un routeur (choisir un nombre d'interfaces \u00e9gal \u00e0 2).</p> </li> </ul> <p></p> Mode simulation <p>Question 1</p> <p>Quelle commande permet de constater que la machine M01 du r\u00e9seau R0 ne peut pas communiquer directement avec la machine M11 du r\u00e9seau R1 ? Pourquoi est-ce le cas ?</p> Mode conception <ul> <li>Il faut configurer le routeur pour mettre en relation logique les deux r\u00e9seaux. Le routeur sert de passerelle de sortie (gateway) pour\u00a0les machines d\u2019un r\u00e9seau vers l\u2019ext\u00e9rieur. Il faut donc  :<ul> <li>d\u2019une part modifier la configuration de chaque ordinateur pour lui indiquer une adresse IP passerelle de sortie (depuis le r\u00e9seau R0 : Passerelle 192.168.0.254 et depuis le r\u00e9seau R1\u00a0: Passerelle 192.168.1.254),</li> <li>d\u2019autre part configurer le routeur pour indiquer ses adresses passerelles (une pour chaque r\u00e9seau).\u00a0Cocher \u00e9galement \"routage automatique\" : la table de routage se mettra \u00e0 jour automatiquement.</li> </ul> </li> </ul> Mode simulation <ul> <li>V\u00e9rifier d\u00e9sormais que <code>ping</code> fonctionne bien de M01 vers M11.\u00a0</li> </ul> <p>Question 2</p> <p>Comparer la valeur \"ttl\" affich\u00e9e lors d'un ping entre M01 et M03 avec celle affich\u00e9e lors\u00a0d'un ping entre M01 et M11. Comment interpr\u00e9ter ces valeurs ?</p> <ul> <li>La commande\u00a0<code>traceroute adresse-cible</code>\u00a0 permet de conna\u00eetre le chemin suivi pour communiquer avec la machine d\u2019adresse IP <code>adresse-cible</code>.</li> </ul> <p>Question 3</p> <p>Chercher avec cette commande combien de \u00ab sauts \u00bb sont n\u00e9cessaires pour passer de M01 \u00e0 M11.</p> <ul> <li>Enregistrer ce projet sous le nom <code>reseau3.fls</code>.</li> </ul>"},{"location":"nsi_premiere/filius/#etape-4-serveur-web","title":"\u00c9tape 4 : Serveur Web","text":"Mode conception <ul> <li>Reprendre le projet filius <code>reseau2.fls</code> comportant 3 ordinateurs reli\u00e9s \u00e0 un commutateur.</li> <li>Ajouter un routeur, poss\u00e9dant 3 interfaces. Connecter l'une d'elles au commutateur du r\u00e9seau actuel. (Passerelle pour cette interface\u00a0192.168.0.254)</li> <li>Ajouter une nouvelle machine, qui sera le serveur Web (IP 172.16.0.1, masque 255.255.0.0).</li> <li>Connecter ce serveur Web au routeur. (Passerelle\u00a0pour cette interface\u00a0172.16.255.254).</li> </ul> Mode simulation <ul> <li>Sur M01, v\u00e9rifier que \"ligne\u00a0de commande\" est install\u00e9. Ajouter un \"navigateur\u00a0Web\".</li> <li>Sur le serveur Web, installer les logiciels :\u00a0<ul> <li>Ligne de commande</li> <li>Explorateur de fichier</li> <li>Editeur de texte</li> <li>Serveur Web</li> </ul> </li> <li>Ouvrir le logiciel \"serveur Web\" et cliquer sur \"activer le serveur\".\u200b</li> <li>\u00c0 l'aide de l'\u00e9diteur de texte, saisir une page html minimale, par exemple :\u00a0 <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\u00a0\n\u00a0\u00a0\u00a0\u00a0&lt;head&gt;\n\u00a0 \u00a0     &lt;title&gt;\u00a0Page test\u00a0&lt;/title&gt;\n\u00a0 \u00a0 &lt;/head&gt;\u00a0\n\u00a0 \u00a0 &lt;body&gt;\n\u00a0\u00a0      &lt;h1&gt; Bienvenue sur cette page de test &lt;/h1&gt;\n\u00a0 \u00a0&lt;/body&gt;\u00a0\n&lt;/html&gt;\u00a0\n</code></pre></li> <li> <p>Enregistrer cette page dans le r\u00e9pertoire Webserver, par exemple sour le nom <code>pagetest.html</code>.</p> </li> <li> <p>Depuis le navigateur de la machine M01, indiquer dans la barre d'adresse l'adresse IP du serveur Web (172.16.0.1) et rajouter le chemin de la page cr\u00e9\u00e9e,\u00a0par exemple : <code>http://192.168.1.1/page1.html</code></p> </li> <li> <p>Observer les informations \u00e9chang\u00e9es entre M01 et le serveur : quelles couches sont concern\u00e9es ? Quels\u00a0protocoles sont utilis\u00e9s ?</p> </li> <li> <p>Enregistrer ce projet sous <code>reseau4.fls</code>.</p> </li> </ul>"},{"location":"nsi_premiere/filius/#etape-5-serveur-dns","title":"\u00c9tape 5 :  Serveur DNS","text":"Mode conception <ul> <li>Reprendre le projet <code>reseau4.fls</code> de l'\u00e9tape pr\u00e9c\u00e9dente.</li> <li>Ajouter une machine, qui sera le serveur DNS (IP 172.31.0.1, masque 255.255.0.0).  </li> </ul> <p>Le serveur DNS permet aux clients du serveur Web de saisir un nom de domaine plut\u00f4t qu'une adresse IP. Ce serveur sera contact\u00e9 avant le serveur Web et fournira au client l'adresse IP du serveur Web associ\u00e9 au nom de domaine.\u00a0</p> <ul> <li>Connecter le serveur DNS au routeur. (Passerelle pour cette interface\u00a0172.31.255.254)</li> <li>Indiquer sur la configuration de la machine M01 l'adresse IP du serveur DNS.</li> </ul> <p></p> Mode simulation <ul> <li>Installer sur le serveur DNS, le logiciel \"serveur DNS\".</li> <li>Ouvrir ce logiciel pour r\u00e9aliser la configuration. Indiquer un nom de domaine, par exemple \"www.nsi.fr\" \u00a0et associer l'adresse IP de ce serveur Web, 172.16.0.1.</li> <li>Ajouter cette association \u00e0 la liste et cliquer sur D\u00e9marrer.</li> <li>Sur la machine M01, depuis un navigateur web, saisir l'adresse du nom de domaine\u00a0\"www.nsi.fr\" : la page d'accueil doit s'afficher.\u00a0</li> <li>Observer les informations \u00e9chang\u00e9es entre M01 et le serveur DNS : quels couches et protocoles sont\u00a0utilis\u00e9s ?</li> <li>Enregistrer ce projet sous <code>reseau5.fls</code>.</li> </ul> Aide et \u00e9l\u00e9ments de correction <p>https://multy.me/OWve6U</p>"},{"location":"nsi_premiere/melange_cartes/","title":"M\u00e9langes parfaits d'un jeu de 32 cartes","text":"<p>Cette page pr\u00e9sente les m\u00e9langes parfaits de type out-shuffle et in-shuffle d'un jeu de cartes et en explore quelques propri\u00e9t\u00e9s.</p>"},{"location":"nsi_premiere/melange_cartes/#1-melange-parfait","title":"1. M\u00e9lange parfait","text":"<p>Question 1</p> <p>Un jeu de 32 cartes peut \u00eatre repr\u00e9sent\u00e9 par un tableau, o\u00f9 chaque carte est repr\u00e9sent\u00e9e par un entier. Cr\u00e9er le tableau <code>jeu32</code>, contenant les 32 entiers entre 1 et 32.</p> <pre><code>jeu32 = [ \u2026 ] # \u00e0 compl\u00e9ter\n</code></pre> <p>Pour r\u00e9aliser un m\u00e9lange parfait d'un jeu de cartes, on le s\u00e9pare en 2 paquets de m\u00eame taille avant de m\u00e9langer ensemble les 2 paquets cr\u00e9\u00e9s.</p> <p>Les fonctions ci-dessous permettent de r\u00e9cup\u00e9rer la moiti\u00e9 du \"dessus\" et la moiti\u00e9 du \"dessous\" d'un jeu de cartes.</p> <pre><code>def dessus(tab):\n    return(tab[: len(tab) // 2])\n\ndef dessous(tab):\n    return(tab[len(tab) // 2 :])\n</code></pre> <p>\u00c0 r\u00e9aliser</p> <p>Ex\u00e9cuter les appels <code>dessus(jeu32)</code> et <code>dessous(jeu32)</code> et observer le r\u00e9sultat produit.</p> <p>Lors du m\u00e9lange parfait d'un jeu de cartes, on le s\u00e9pare en 2 paquets de m\u00eame taille : le paquet A d\u00e9signe la moiti\u00e9 du dessus et le paquet B d\u00e9signe la moiti\u00e9 du dessous. Puis on alterne les cartes d'un paquet et de l'autre. Le m\u00e9lange peut se r\u00e9aliser de 2 fa\u00e7ons : - soit c'est la carte du dessus du paquet A qui sera au-dessus du paquet m\u00e9lang\u00e9 : ce m\u00e9lange est appel\u00e9 out-shuffle ; - soit c'est la carte du dessus du paquet B qui sera au-dessus du paquet m\u00e9lang\u00e9 : ce m\u00e9lange est appel\u00e9 in-shuffle.</p> <p>Voici un exemple avec un jeu initial de 8 cartes : observer la position des cartes extr\u00eames (1 et 8) dans les manipulations suivantes.</p> <p></p> <p>On s\u00e9pare le jeu en 2 paquets de m\u00eame taille : le paquet A est constitu\u00e9 des cartes 1 \u00e0 4, le paquet B des cartes 5 \u00e0 8.</p> <p></p> <p>Voici le paquet obtenu apr\u00e8s un m\u00e9lange out-shuffle : les cartes du paquet A occupent les places 1, 3, 5 et 7. Les cartes extr\u00eames (1 et 8) ont conserv\u00e9 leur position initiale (\u00e0 l'ext\u00e9rieur : out).</p> <p></p> <p>Voici le paquet obtenu apr\u00e8s un m\u00e9lange in-shuffle : les cartes du paquet A occupent les places 2, 4, 6 et 8. Les cartes extr\u00eames (1 et 8) sont d\u00e9sormais \u00e0 l'int\u00e9rieur du paquet m\u00e9lang\u00e9 (\u00e0 l'int\u00e9rieur : in).</p> <p></p>"},{"location":"nsi_premiere/melange_cartes/#2-melange-out-shuffle","title":"2. M\u00e9lange Out-shuffle","text":""},{"location":"nsi_premiere/melange_cartes/#21-fonction-outshuffle","title":"2.1 Fonction  <code>outshuffle</code>","text":"<p>Afin de pouvoir simuler des m\u00e9langes r\u00e9p\u00e9t\u00e9s, on programme une fonction qui agit sur un jeu de carte comme un m\u00e9lange out-shuffle.</p> <p>Question 2</p> <p>Compl\u00e9ter la fonction <code>outshuffle(tab)</code> qui prend en param\u00e8tre un tableau repr\u00e9sentant un jeu de cartes et qui renvoie le contenu de ce tableau apr\u00e8s un m\u00e9lange de type out-shuffle.</p> <p>On suppose que tab contient un nombre pair d'\u00e9l\u00e9ments.</p> <pre><code>def outshuffle(tab):\n    # on s\u00e9pare le paquet de cartes en 2\n    tas_haut = \u2026 # \u00e0 compl\u00e9ter\n    tas_bas = \u2026 # \u00e0 compl\u00e9ter\n\n    # on cr\u00e9e un tableau de m\u00eame longueur que tab\n    tab2 = [0] * len(tab)\n\n    # on copie dans tab2 les cartes de tas_haut et tas_bas en les alternant\n    # dans le tri out-shuffle, la carte du dessus du paquet initial reste\n    # au-dessus du paquet m\u00e9lang\u00e9\n    for i in range(len(tas_haut)):\n        # rangs pairs\n        tab2[2 * i] = \u2026\n        # rangs impairs\n        tab2[2 * i + 1] = \u2026\n    return tab2\n</code></pre> <p>\u00c0 r\u00e9aliser</p> <p>V\u00e9rifier qu'un m\u00e9lange de <code>jeu32</code> avec la fonction <code>outshuffle</code> donne bien le r\u00e9sultat attendu.</p> <pre><code>assert(outshuffle(jeu32) == [1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23, 8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31, 16, 32])\n</code></pre>"},{"location":"nsi_premiere/melange_cartes/#22-apres-plusieurs-melanges","title":"2.2 Apr\u00e8s plusieurs m\u00e9langes","text":"<p>Question 3</p> <ul> <li>Quelle est la position de la carte 2 du tableau <code>jeu32</code> apr\u00e8s un m\u00e9lange de type out-shuffle ?  </li> <li>Et apr\u00e8s 2 m\u00e9langes ? 3 m\u00e9langes ?</li> </ul> <p>Question 4</p> <p>En appliquant successivement plusieurs fois le m\u00e9lange out-shuffle, peut-on revenir \u00e0 l'ordre initial du jeu de 32 cartes ? Si oui, au bout de combien de m\u00e9langes au minimum ?</p> <p>Question 5</p> <ul> <li>Que r\u00e9alise la fonction <code>cycle_out(tab)</code> ci-dessous ?  </li> <li>Quelle est la valeur de <code>cycle_out(jeu32)</code> ? Comment interpr\u00e9ter cette valeur ?</li> </ul> <pre><code>def cycle_out(tab):\n    tab2 = tab[:] #copie des valeurs contenues dans tab\n    compteur = 1\n    tab = outshuffle(tab)\n    while tab2 != tab :\n        compteur += 1\n        tab = outshuffle(tab)\n    return compteur\n</code></pre>"},{"location":"nsi_premiere/melange_cartes/#23-trajectoire-dune-carte-fixee","title":"2.3 Trajectoire d'une carte fix\u00e9e","text":"<p>On s'int\u00e9resse dans cette partie \u00e0 toutes les positions occup\u00e9es par la carte 2 du jeu <code>jeu32</code> au cours des m\u00e9langes successifs jusqu'\u00e0 revenir \u00e0 la configuration initiale du jeu.</p> <p>Info</p> <p>La m\u00e9thode <code>tab.index(valeur)</code> permet de renvoyer l'indice de la premi\u00e8re occurrence de <code>valeur</code> dans le tableau <code>tab</code>.</p> <p>Exemple</p> <p>Dans le tableau <code>jeu32</code>, la carte 2 appara\u00eet en 2e position, c'est-\u00e0-dire avec l'indice 1.</p> <pre><code>jeu32.index(2)\n</code></pre> <pre><code>1\n</code></pre> <p>Il peut \u00eatre int\u00e9ressant de constater que cette valeur est le nombre de cartes \"au-dessus\" de la carte 2 dans le paquet.</p> <p>Question 6</p> <p>Quels sont tous les indices de la carte 2 du tableau <code>jeu32</code> lorsqu'on effectue des m\u00e9langes out-shuffle jusqu'\u00e0 revenir \u00e0 la configuration de d\u00e9part ?</p> nombre de m\u00e9lange(s) out-shuffle indice de la carte 2 0 1 1 2 3 ... \u00e0 compl\u00e9ter <p>Question 7</p> <p>On r\u00e9alise des m\u00e9langes out-shuffle \u00e0 partir du tableau <code>jeu32</code>. Conjecturer une formule permettant d'obtenir l'indice de la carte 2 dans le tableau <code>jeu32</code> \u00e0 l'issue du prochain m\u00e9lange out-shuffle, en fonction de son indice actuel.</p> <p>\u00c0 r\u00e9aliser</p> <p>V\u00e9rifier que la formule conjectur\u00e9e permet de passer de chacun des indices du tableau de la question 6 \u00e0 l'indice suivant, obtenu avec un nouveau m\u00e9lange out-shuffle de <code>jeu32</code>. En particulier, \u00e0 partir de l'indice de la derni\u00e8re ligne du tableau, la formule conjectur\u00e9e doit donner 1, qui serait l'indice de la carte 2 apr\u00e8s un nouveau m\u00e9lange.</p>"},{"location":"nsi_premiere/melange_cartes/#24-trajectoire-dune-carte-quelconque","title":"2.4 Trajectoire d'une carte quelconque","text":"<p>La fonction <code>orbite_out(tab, valeur)</code> ci-dessous permet d'obtenir le tableau de tous les indices de la carte <code>valeur</code> dans le tableau <code>tab</code> lorsqu'on effectue 5 m\u00e9langes out-shuffle successifs.</p> <pre><code>def orbite_out(tab, valeur):\n    orbite =[0]*5\n    for i in range(5):\n        orbite[i] = tab.index(valeur)\n        tab = outshuffle(tab)\n    return orbite\n</code></pre> <p>Question 8</p> <p>Utiliser la fonction pr\u00e9c\u00e9dente pour explorer les indices de quelques cartes du tableau <code>jeu32</code> lorsqu'on effectue des m\u00e9langes out-shuffle jusqu'\u00e0 revenir \u00e0 la configuration de d\u00e9part. Conjecturer une formule permettant d'obtenir l'indice de la carte <code>valeur</code> dans le tableau <code>jeu32</code> \u00e0 l'issue du prochain m\u00e9lange out-shuffle, en fonction de son indice actuel.</p> <p>Question 9</p> <p>Cr\u00e9er une fonction <code>orbite_conjecture_out(valeur)</code> permettant d'obtenir le tableau de tous les indices de la carte <code>valeur</code> dans le tableau <code>jeu32</code>, au fur et \u00e0 mesure des m\u00e9langes, selon la conjecture formul\u00e9e \u00e0 la question pr\u00e9c\u00e9dente.</p> <pre><code>def orbite_conjecture_out(valeur):\n   # \u00e0 compl\u00e9ter\n</code></pre> <p>Question 10</p> <p>Cr\u00e9er une fonction <code>validation_conjecture_out()</code> qui v\u00e9rifie si, pour toutes les valeurs des cartes de <code>jeu32</code>, les tableaux <code>orbite_out(jeu32, valeur)</code> et <code>orbite_conjecture_out(valeur)</code> sont identiques.</p> <pre><code>def validation_conjecture_out(tab):\n    # \u00e0 compl\u00e9ter\n</code></pre>"},{"location":"nsi_premiere/melange_cartes/#25-synthese","title":"2.5 Synth\u00e8se","text":"<p>Question 11</p> <p>R\u00e9diger une synth\u00e8se des r\u00e9sultats \u00e9tablis concernant le m\u00e9lange out-shuffle.</p>"},{"location":"nsi_premiere/melange_cartes/#3-melange-in-shuffle","title":"3. M\u00e9lange in-shuffle","text":""},{"location":"nsi_premiere/melange_cartes/#31-fonction-inshuffle","title":"3.1 Fonction <code>inshuffle</code>","text":"<p>Question 12</p> <p>\u00c9crire une fonction <code>inshuffle(tab)</code> qui prend en param\u00e8tre un tableau repr\u00e9sentant un jeu de cartes et qui renvoie le contenu de ce tableau apr\u00e8s un m\u00e9lange de type in-shuffle.</p> <p>On suppose que tab contient un nombre pair d'\u00e9l\u00e9ments.</p> <pre><code>def inshuffle(tab):\n   # \u00e0 compl\u00e9ter\n</code></pre>"},{"location":"nsi_premiere/melange_cartes/#32-apres-plusieurs-melanges","title":"3.2 Apr\u00e8s plusieurs m\u00e9langes","text":"<p>Question 13</p> <p>En appliquant successivement plusieurs fois le m\u00e9lange in-shuffle, peut-on revenir \u00e0 l'ordre initial du jeu de 32 cartes ? Si oui, au bout de combien de m\u00e9langes au minimum ?</p> <p>On utilisera une fonction pour d\u00e9terminer cette valeur.</p>"},{"location":"nsi_premiere/melange_cartes/#33-trajectoire-dune-carte-fixee","title":"3.3 Trajectoire d'une carte fix\u00e9e","text":"<p>Question 14</p> <p>Quels sont tous les indices de la carte 2 du tableau <code>jeu32</code> lorsqu'on effectue des m\u00e9langes in-shuffle jusqu'\u00e0 revenir \u00e0 la position de d\u00e9part ?</p> nombre de m\u00e9lange(s) in-shuffle indice de la carte 2 0 1 1 2 3 ... \u00e0 compl\u00e9ter <p>Question 15</p> <p>On r\u00e9alise des m\u00e9langes in-shuffle \u00e0 partir du tableau <code>jeu32</code>. Conjecturer une formule permettant d'obtenir l'indice de la carte 2 dans le tableau <code>jeu32</code> \u00e0 l'issue du prochain m\u00e9lange in-shuffle, en fonction de son indice actuel.</p>"},{"location":"nsi_premiere/melange_cartes/#34-trajectoire-dune-carte-quelconque","title":"3.4 Trajectoire d'une carte quelconque","text":"<p>La fonction <code>orbite_in(tab, valeur)</code> ci-dessous permet d'obtenir le tableau de tous les indices de la carte <code>valeur</code> dans le tableau <code>tab</code> lorsqu'on effectue 10 m\u00e9langes in-shuffle.</p> <pre><code>def orbite_in(tab, valeur):\n    orbite =[0]*10\n    for i in range(10):\n        orbite[i] = tab.index(valeur)\n        tab = inshuffle(tab)\n    return orbite\n</code></pre> <p>Question 16</p> <p>Utiliser la fonction pr\u00e9c\u00e9dente pour explorer les indices de quelques cartes du tableau <code>jeu32</code> lorsqu'on effectue des m\u00e9langes in-shuffle jusqu'\u00e0 revenir \u00e0 la configuration de d\u00e9part. Conjecturer une formule permettant d'obtenir l'indice de la carte <code>valeur</code> dans le tableau <code>jeu32</code> \u00e0 l'issue du prochain m\u00e9lange in-shuffle, en fonction de son indice actuel.</p> <p>Question 17</p> <p>Cr\u00e9er une fonction <code>orbite_conjecture_in(valeur)</code> permettant d'obtenir le tableau de tous les indices de la carte <code>valeur</code> dans le tableau <code>jeu32</code>, au fur et \u00e0 mesure des m\u00e9langes, selon la conjecture formul\u00e9e \u00e0 la question pr\u00e9c\u00e9dente.</p> <pre><code>def orbite_conjecture_in(valeur):\n   # \u00e0 compl\u00e9ter\n</code></pre> <p>Question 18</p> <p>Cr\u00e9er une fonction <code>validation_conjecture_in()</code> qui v\u00e9rifie si pour toutes les valeurs des cartes de <code>jeu32</code> les tableaux <code>orbite_in(jeu32, valeur)</code> et <code>orbite_conjecture_in(valeur)</code> sont identiques.</p> <pre><code>def validation_conjecture_in(tab):\n    # \u00e0 compl\u00e9ter\n</code></pre>"},{"location":"nsi_premiere/melange_cartes/#35-synthese","title":"3.5 Synth\u00e8se","text":"<p>Question 19</p> <p>R\u00e9diger une synth\u00e8se des r\u00e9sultats \u00e9tablis concernant le m\u00e9lange in-shuffle.</p>"},{"location":"nsi_premiere/orientation/","title":"Orientation","text":""},{"location":"nsi_premiere/orientation/#0-pourquoi-choisir-nsi","title":"0. Pourquoi choisir NSI ?","text":"<p>Info</p> <ul> <li>Diaporama de pr\u00e9sentation de la sp\u00e9cialit\u00e9 NSI</li> <li>Pr\u00e9sentation de la sp\u00e9cialit\u00e9 NSI sur Eduscol</li> </ul>"},{"location":"nsi_premiere/orientation/#1-decouvrir-les-parcours-detudes-en-informatique","title":"1. D\u00e9couvrir les parcours d'\u00e9tudes en informatique","text":"<p>Parcoursup</p> <p>Acc\u00e8s au site Parcoursup</p> <p>Vid\u00e9o de pr\u00e9sentation des parcours d'\u00e9tudes en informatique</p> <p>Pr\u00e9sentation r\u00e9alis\u00e9e par Bruno Mermet</p> <p>\u00c0 r\u00e9aliser</p> <p>Question 1. En utilisant par exemple le site\u00a0Parcoursup\u00a0et les mots-cl\u00e9s <code>informatique</code> et <code>Normandie</code>, rechercher des formations post-bac pr\u00e9sentes en Normandie et comportant une partie de leur cursus en lien avec l\u2019informatique.</p> <p>Question 2. Identifier de fa\u00e7on pr\u00e9cise (intitul\u00e9, lieu)\u00a0:</p> <ul> <li>une formation publique de type BTS</li> <li>une formation publique\u00a0de type BUT</li> <li>une formation publique\u00a0de type licence</li> <li>une formation publique\u00a0de type CPGE</li> <li>une formation publique\u00a0de type \u00e9cole d\u2019ing\u00e9nieurs  </li> </ul> <p>On pourra si besoin \u00e9largir le\u00a0p\u00e9rim\u00e8tre de recherche, par exemple pour les classes pr\u00e9paratoires MP2I, les classes pr\u00e9paratoires universitaires CUPGE ou les \u00e9coles d'ing\u00e9nieurs. (Si besoin, faire des recherches pr\u00e9alables sur les sigles cit\u00e9s ci-dessus si vous ne les connaissez pas. Le guide post-bac 2022 peut \u00eatre utile). Le site Pr\u00e9pas MP2I r\u00e9alis\u00e9 par des \u00e9tudiants de MP2I est \u00e9galement tr\u00e8s bien fait !</p> <p>Question 3. Citer (au moins) cinq informations qui vous paraissent essentielles pour pr\u00e9senter et distinguer chacune des formations identifi\u00e9es \u00e0 la question pr\u00e9c\u00e9dente.</p> <p>Question 4. Choisir l\u2019une des formations identifi\u00e9es en lien avec l\u2019informatique, de pr\u00e9f\u00e9rence proche du type\u00a0de\u00a0v\u0153ux que vous pourriez faire l\u2019an prochain. Consulter sa fiche d\u00e9taill\u00e9e, et la page web de la formation. En vous appuyant sur les informations consid\u00e9r\u00e9es comme essentielles \u00e0 la question pr\u00e9c\u00e9dente, pr\u00e9parer une pr\u00e9sentation de cette formation, qui sera \u00e0 r\u00e9aliser \u00e0 l\u2019oral, d\u2019environ 3 minutes. Si besoin, on pourra disposer de notes sur un (seul) post-it. Vous pr\u00e9ciserez\u00a0pendant\u00a0la pr\u00e9sentation pourquoi vous envisagez (ou non) de postuler \u00e0 cette formation.</p>"},{"location":"nsi_premiere/orientation/#2-decouvrir-les-metiers-du-numerique-et-de-linformatique","title":"2. D\u00e9couvrir les m\u00e9tiers du num\u00e9rique et de l'informatique","text":"<p>\u00c0 r\u00e9aliser</p> <p>Question 1. En utilisant les ressources sur les m\u00e9tiers propos\u00e9es ci-dessous, rechercher un m\u00e9tier li\u00e9 au num\u00e9rique et/ou \u00e0 l'informatique. Croiser les sources pour enrichir les informations recueillies.</p> <p>Question 2. Citer quelques informations qui vous paraissent essentielles pour pr\u00e9senter et distinguer diff\u00e9rents m\u00e9tiers li\u00e9s au num\u00e9rique et/ou \u00e0 l'informatique.</p> <p>Question 3. Choisir l\u2019un des m\u00e9tiers identifi\u00e9s en lien avec l\u2019informatique et/ou le num\u00e9rique, de pr\u00e9f\u00e9rence proche du type\u00a0de\u00a0m\u00e9tier que vous pourriez envisager d'exercer.  Pr\u00e9parer une pr\u00e9sentation de ce m\u00e9tier, qui sera \u00e0 r\u00e9aliser \u00e0 l\u2019oral, d\u2019environ 3 minutes. Si besoin, on pourra disposer de notes sur un (seul) post-it.  Vous pr\u00e9ciserez\u00a0pendant\u00a0la pr\u00e9sentation pourquoi vous envisagez (ou non) d'exercer ce m\u00e9tier.</p>"},{"location":"nsi_premiere/orientation/#ressources-formations-et-fiches-metiers","title":"Ressources : formations et fiches m\u00e9tiers","text":"<p>Licences d'informatique</p> <ul> <li> <p>Licence d'informatique \u00e0 l'Universit\u00e9 de Caen</p> </li> <li> <p>Licence d'informatique \u00e0 l'Universit\u00e9 du Havre</p> </li> <li> <p>Licence d'informatique et vid\u00e9oludisme \u00e0 l'Universit\u00e9 Paris 8</p> </li> </ul> <p>Les m\u00e9tiers de l'informatique et du num\u00e9rique</p> <ul> <li> <p>Fiches m\u00e9tiers Onisep : math\u00e9matiques, statistique et informatique (pdf \u00e0 t\u00e9l\u00e9charger) - version \u00e0 feuilleter en ligne</p> </li> <li> <p>Fiches m\u00e9tiers Onisep : les m\u00e9tiers de la grande \u00e9cole du num\u00e9rique (pdf \u00e0 t\u00e9l\u00e9charger)</p> </li> <li> <p>Mooc : les m\u00e9tiers du num\u00e9rique</p> </li> <li>Fiches m\u00e9tiers d'un cabinet de recrutement</li> </ul> <p>Les d\u00e9codeuses du num\u00e9rique</p> <ul> <li>Les d\u00e9codeuses du num\u00e9rique : BD pr\u00e9sentant 12 portraits de scientifiques illustrant la diversite\u0301 des recherches en sciences du nume\u0301rique.</li> </ul> <p>Onisep Terminales</p> <ul> <li>Page Onisep Terminales : 5 \u00e9tapes pour d\u00e9terminer son parcours vers l\u2019enseignement sup\u00e9rieur</li> </ul> <p>Podcast orientation Post-bac</p> <ul> <li>Podcast Pod-NSI orientation Post-bac : Entretiens avec un enseignant en pr\u00e9pa MP2I, avec une professeure d'informatique \u00e0 l'universit\u00e9, et une professeure d'informatique \u00e0 l'IUT.</li> </ul>"},{"location":"nsi_premiere/parcours_js/","title":"Parcours JavaScript","text":""},{"location":"nsi_premiere/parcours_js/#1-associer-un-contenu-js","title":"1. Associer un contenu JS","text":"<p>Il y a plusieurs fa\u00e7ons d'associer un contenu JavaScript \u00e0 un fichier HTML :</p> <ul> <li> <p>on peut \u00e9crire le code JavaScript dans le fichier HTML en l'ins\u00e9rant dans un \u00e9l\u00e9ment <code>&lt;script&gt;</code>: <pre><code>&lt;script type=\"text/javascript\"&gt;\n//code JS\n&lt;/script&gt;\n</code></pre></p> </li> <li> <p>on peut faire r\u00e9f\u00e9rence \u00e0 un fichier externe nomm\u00e9 par exemple <code>script.js</code> contenant le code JavaScript en utilisant l'attribut <code>src</code> d'un \u00e9l\u00e9ment  <code>&lt;script&gt;</code> : <pre><code>&lt;script language=\"JavaScript\" src=\"script.js\"&gt;&lt;/script&gt;\n</code></pre></p> </li> </ul> Avertissement <p>L'utilisation d'interfaces web comme Capytale ou CodePen.io, pour \u00e9crire simultan\u00e9ment les codes <code>html</code>, <code>css</code> et <code>js</code>, rend souvent ce lien transparent : il n'est pas explicite dans le code affich\u00e9.</p>"},{"location":"nsi_premiere/parcours_js/#2-designer-un-element","title":"2. D\u00e9signer un \u00e9l\u00e9ment","text":"<p>La r\u00e9alisation d'une interaction n\u00e9cessite de distinguer :  </p> <ul> <li>l'\u00e9l\u00e9ment sur lequel l'utilisateur devra agir</li> <li>le type d'\u00e9v\u00e9nement pris en compte : clic, survol, etc.</li> <li>l'\u00e9l\u00e9ment sur lequel une action sera r\u00e9alis\u00e9e</li> <li>le type d'action r\u00e9alis\u00e9e</li> </ul> <p>Les \u00e9l\u00e9ments doivent \u00eatre d\u00e9sign\u00e9s depuis le code JS. Il existe plusieurs m\u00e9thodes pour cela ; dans le contexte de ce parcours on aura recours \u00e0 la m\u00e9thode <code>document.querySelector</code> dont la syntaxe est :</p> <pre><code>element = document.querySelector(s\u00e9lecteurs);\n</code></pre> <p>La m\u00e9thode <code>querySelector()</code> renvoie le premier \u00e9l\u00e9ment dans le document correspondant au s\u00e9lecteur - ou groupe de s\u00e9lecteurs - sp\u00e9cifi\u00e9(s), ou <code>null</code> si aucune correspondance n'est trouv\u00e9e.</p> <p>Exemples</p> <p>Voici quelques \u00e9l\u00e9ments html et la r\u00e9f\u00e9rence faite \u00e0 ces \u00e9l\u00e9ments dans le code js :</p> htmljs <pre><code>&lt;body&gt;\n&lt;h1&gt;Titre&lt;/h1&gt;\n&lt;p id=\"special_p\"&gt;Paragraphe sp\u00e9cial&lt;/p&gt;\n&lt;/body&gt;\n</code></pre> <pre><code>// s\u00e9lection d'un \u00e9l\u00e9ment dont la balise est unique\nlet corps = document.querySelector('body');\nlet titre = document.querySelector('h1');\n// s\u00e9lection avec un identifiant\nlet monParagraphe = document.querySelector('#special_p');\n</code></pre>"},{"location":"nsi_premiere/parcours_js/#3-etre-a-lecoute-des-evenements","title":"3. \u00catre \u00e0 l'\u00e9coute des \u00e9v\u00e9nements","text":"<p>La m\u00e9thode <code>addEventListener()</code>  associe une fonction \u00e0 appeler \u00e0 chaque fois que l'\u00e9v\u00e9nement sp\u00e9cifi\u00e9 est r\u00e9alis\u00e9 sur l'\u00e9l\u00e9ment cibl\u00e9.</p> <p>La syntaxe est :</p> <p><pre><code>element.addEventListener(\u00e9v\u00e9nement, fonction_a_appeler);\n</code></pre> L'\u00e9v\u00e9nement est \u00e0 citer entre guillemets.</p> <p>Exemple</p> <pre><code>let bouton = document.querySelector('button');\nbouton.addEventListener(\"click\", fonction_a_appeler);\n</code></pre> <p>Voici quelques \u00e9v\u00e9nements possibles :</p> \u00c9v\u00e9nement Description click clic de la souris sur l'\u00e9l\u00e9ment dblclick double-clic de la souris sur l'\u00e9l\u00e9ment keydown appui sur une touche du clavier keyup touche du clavier press\u00e9e puis rel\u00e2ch\u00e9e mouseover le curseur de la souris survole l'\u00e9l\u00e9ment mouseout le curseur de la souris quitte l'\u00e9l\u00e9ment"},{"location":"nsi_premiere/parcours_js/#4-realiser-une-action","title":"4. R\u00e9aliser une action","text":"<p>Lors d'une interaction, l'action \u00e0 r\u00e9aliser lorsqu'un \u00e9v\u00e9nement se produit est \u00e9crite en JS dans une fonction. De nombreuses actions sont possibles, comme changer une couleur ou la taille d'un \u00e9l\u00e9ment, ajouter/modifier un contenu, rendre un contenu visible ou le masquer, etc.</p>"},{"location":"nsi_premiere/parcours_js/#41-modifier-le-style-dun-element","title":"4.1 Modifier le style d'un \u00e9l\u00e9ment","text":"<p>Les propri\u00e9t\u00e9s CSS s'\u00e9crivent en JavaScript sans le caract\u00e8re <code>-</code>  et avec des majuscules pour s\u00e9parer les mots. (R\u00e9f\u00e9rence des propri\u00e9t\u00e9s CSS)</p> <p>Exemples</p> <pre><code>element.style.color=\"red\";\nelement.style.backgroundColor=\"rgb(255,0,0)\";\nelement.style.fontSize=\"16px\";\nelement.style.textAlign=\"center\";\n</code></pre> <p>Les valeurs que l'on attribue aux propri\u00e9t\u00e9s sont des chaines de caract\u00e8res entre guillemets.</p>"},{"location":"nsi_premiere/parcours_js/#42-modifier-le-contenu-dun-element","title":"4.2 Modifier le contenu d'un \u00e9l\u00e9ment","text":"<p>Exemples</p> <pre><code>//modifier le texte d'un \u00e9l\u00e9ment\nelement.textContent=\"nouveau contenu\";\n\n// modifier la source d'une image\nimage.src=\"nouvelle_url\";\n</code></pre>"},{"location":"nsi_premiere/parcours_js/#5-exemples","title":"5. Exemples","text":""},{"location":"nsi_premiere/parcours_js/#51-modifier-le-contenu-du-titre-et-sa-couleur","title":"5.1 Modifier le contenu du titre et sa couleur","text":"<p>Questions</p> <ol> <li>D\u00e9tailler toutes les instructions qui permettent que le clic sur le bouton \"bleu\" change le contenu du titre et sa couleur.</li> <li>Pourquoi les boutons ne sont-ils pas s\u00e9lectionn\u00e9s par l'instruction  <code>let bouton=document.querySelector(\"button\");</code>  ?</li> </ol>"},{"location":"nsi_premiere/parcours_js/#52-affichercacher-du-texte-avec-deux-boutons","title":"5.2 Afficher/cacher du texte avec deux boutons","text":"<p>Questions</p> <ol> <li>Quel est l'identifiant de l'\u00e9l\u00e9ment qui contient la r\u00e9ponse \u00e0 la question pos\u00e9e ?   </li> <li>Quelle est la balise de cet \u00e9l\u00e9ment ?  </li> <li>Pourquoi a-t-on choisi cette balise pour ins\u00e9rer la r\u00e9ponse ?</li> </ol>"},{"location":"nsi_premiere/parcours_js/#53-inverser-des-couleurs-de-texte-darriere-plan","title":"5.3 Inverser des couleurs de texte, d'arri\u00e8re-plan","text":"<p>Questions</p> <ol> <li>Que r\u00e9alise la fonction <code>inverser()</code>?  </li> <li>\u00c0 quelle condition cette fonction s'ex\u00e9cute-t-elle ?</li> </ol>"},{"location":"nsi_premiere/parcours_js/#54-faire-defiler-des-images-avec-un-bouton","title":"5.4 Faire d\u00e9filer des images avec un bouton","text":"<p>Vrai ou faux ?</p> <ol> <li>Les l\u00e9gendes des images sont stock\u00e9es dans un tableau.  </li> <li>Les url des images sont stock\u00e9es dans un tableau.  </li> <li>Au clic sur l'image, la fonction <code>suivant</code> est ex\u00e9cut\u00e9e.</li> <li>Au clic sur le bouton, la fonction <code>suivant</code> est ex\u00e9cut\u00e9e.</li> <li>Au clic sur le bouton, la valeur de la variable  <code>indice</code> augmente de 1.</li> <li>La fonction  <code>suivant</code> d\u00e9termine la prochaine image \u00e0 afficher au hasard.</li> <li>La fonction  <code>suivant</code> modifie l'attribut <code>src</code> de l'\u00e9l\u00e9ment qui a pour identifiant \"illustration\".</li> <li>Lorsque la variable <code>indice</code>  a une valeur sup\u00e9rieure ou \u00e9gale \u00e0 la taille du tableau <code>urlTab</code>, la fonction <code>suivant</code> d\u00e9clenche une erreur.</li> </ol>"},{"location":"nsi_premiere/parcours_js/#6-exercices","title":"6. Exercices","text":""},{"location":"nsi_premiere/parcours_js/#61-alignement","title":"6.1 Alignement","text":"<p>Alignement breton</p> <p>code Capytale : 3c57-373162</p> <p>Compl\u00e9ter le code JS sans modifier les codes HTML et CSS pour que l'appui sur les boutons <code>Gauche</code>, <code>Centr\u00e9</code> ou <code>Droite</code>  aligne tous les \u00e9l\u00e9ments du cadre en cons\u00e9quence.</p> <p> </p>"},{"location":"nsi_premiere/parcours_js/#62-encodage","title":"6.2 Encodage","text":"<p>Encodage</p> <p>code Capytale : 40d7-372824</p> <p>En JavaScript, <code>document.characterSet</code> est une propri\u00e9t\u00e9 qui renvoie l'encodage du document. Sans modifier les codes HTML et CSS, compl\u00e9ter le code JS fourni pour qu'au clic sur le bouton, une nouvelle ligne de texte apparaisse et communique le type d'encodage du document.</p> <p></p>"},{"location":"nsi_premiere/parcours_js/#63-compteur","title":"6.3 Compteur","text":"<p>Compteur</p> <p>code Capytale : ad48-367903</p> <p>Cr\u00e9er un \"compteur de clics\", c'est \u00e0 dire une page avec un bouton et une zone d'affichage dont la valeur augmente de 1 \u00e0 chaque clic. Ajouter \u00e0 cette page un deuxi\u00e8me bouton de remise \u00e0 z\u00e9ro du compteur.</p>"},{"location":"nsi_premiere/parcours_js/#64-lancer-de-de","title":"6.4 Lancer de d\u00e9","text":"<p>Lancer de d\u00e9</p> <p>code Capytale : 6c71-372788</p> <p><code>Math.ceil(Math.random()*6)</code> fournit en JavaScript un entier al\u00e9atoire entre 1 et 6. R\u00e9aliser une page qui affiche une face d'un d\u00e9, choisie al\u00e9atoirement, lorsqu'on clique sur un bouton. Les images des six faces sont fournies.  </p>"},{"location":"nsi_premiere/parcours_p5/","title":"Parcours avec p5","text":"<p>Pr\u00e9sentation g\u00e9n\u00e9rale de p5</p> <p>Les boutons ci-dessous permettent d'ouvrir un notebook dans Basthon utilisant p5.</p>"},{"location":"nsi_premiere/parcours_p5/#decouverte-de-p5","title":"D\u00e9couverte de p5","text":"Titre du parcours Description Parcours boucles born\u00e9es maitriser les coordonn\u00e9es dans p5 et les premiers trac\u00e9s,   \u00e0 l'aide de boucles born\u00e9es Parcours bool\u00e9ens d\u00e9tecter si une zone est survol\u00e9e par le pointeur de la souris"},{"location":"nsi_premiere/parcours_p5/#parcours-utilisant-p5","title":"Parcours utilisant p5","text":"Titre du parcours Description Pr\u00e9-requis Parcours automates cellulaires automates cellulaires \u00e0 une dimension Tableaux Parcours Tous en cercle Cr\u00e9ation d'une animation permettant \u00e0 des points al\u00e9atoires de rejoindre une position d\u00e9termin\u00e9e Listes, dictionnaires Parcours fourmi de Langton automate cellulaire \u00e0 deux dimensions Tableaux de tableaux, dictionnaires Parcours \"Alternatif\" jeu de grille dont les cases sont cliquables Tableaux de tableaux"},{"location":"nsi_premiere/parcours_p5/#projets-utilisant-p5","title":"Projets utilisant p5","text":"Titre du projet Description Projet boutons cr\u00e9er un \u00e9l\u00e9ment d'interface graphique comportant trois boutons r\u00e9actifs    au survol et au clic Le jeu de la vie d\u00e9couvrir, pr\u00e9senter et illustrer par des animations le jeu de la vie"},{"location":"nsi_premiere/problemes_1re/","title":"Chercher : une s\u00e9lection de probl\u00e8mes","text":""},{"location":"nsi_premiere/problemes_1re/#algorithmes-gloutons","title":"Algorithmes gloutons","text":"<p>Volvian, c'est mon eau : Prologin 2020, \u00e9preuve r\u00e9gionale</p>"},{"location":"nsi_premiere/problemes_1re/#binaire","title":"Binaire","text":"<p>Tour de magie (Prologin 2013)</p> <p>Tour de cartes (d'apr\u00e8s un probl\u00e8me du Castor informatique suisse)</p>"},{"location":"nsi_premiere/problemes_1re/#instructions-conditionnelles","title":"Instructions conditionnelles","text":"<p>M\u00e9t\u00e9orite, Vagues, Vent ! : Prologin 2020, \u00e9preuve r\u00e9gionale  </p>"},{"location":"nsi_premiere/problemes_1re/#sequences","title":"S\u00e9quences","text":"<p>Le probl\u00e8me des pr\u00e9cipitations</p>"},{"location":"nsi_premiere/qcm_nsi/","title":"QCM NSI","text":"<p>Acc\u00e8s aux QCM portant sur les sept th\u00e8mes du programme de 1re NSI.</p> <p>G\u00e9n\u00e9rateur de QCM</p>"},{"location":"nsi_premiere/rainfall_problem/","title":"Le probl\u00e8me des pr\u00e9cipitations","text":"<p>d'apr\u00e8s The rainfall problem</p> <p>\u00c9nonc\u00e9</p> <p>On dispose d'un tableau contenant des quantit\u00e9s de pr\u00e9cipitations, recueillies quotidiennement sur un site de relev\u00e9s m\u00e9t\u00e9orologiques. L'\u00e9quipement de collecte de pluie rapporte parfois par erreur une valeur n\u00e9gative : ces valeurs sont \u00e0 ignorer. On demande de calculer la valeur moyenne des quantit\u00e9s de pr\u00e9cipitations.</p> <p>\u00c0 r\u00e9aliser</p> <p>\u00c9crire une fonction <code>moyenne_precipitations(valeurs_precipitations)</code> qui prend en param\u00e8tre un tableau de nombres entiers <code>valeurs_precipitations</code>, et qui renvoie : - la moyenne des valeurs positives de ce tableau,  - ou le message \"Donn\u00e9e(s) invalide(s)\" si le tableau ne contient aucune donn\u00e9e valide.</p> <p>Exemples : <pre><code>moyenne_precipitations([12, 0, 56, 67, 23, 34, 0, 78, 45, 89])\n</code></pre> <pre><code>40.4\n</code></pre></p> <p><pre><code>moyenne_precipitations([15, -18, 56, 23, 35, 78, 45, -36])\n</code></pre> <pre><code>42.0\n</code></pre> <pre><code>moyenne_precipitations([0, 0, 0, 0, 0])\n</code></pre> <pre><code>0.0\n</code></pre> <pre><code>moyenne_precipitations([-3])\n</code></pre> <pre><code>\"Donn\u00e9e(s) invalide(s)\"\n</code></pre></p> Note pour les enseignants <p>Teacher Note: The Rainfall Problem</p>"},{"location":"nsi_premiere/rainfall_problem_parsons/","title":"Le probl\u00e8me des pr\u00e9cipitations","text":"<p>S\u00e9lectionner, ordonner et indenter si n\u00e9cessaire les instructions suivantes afin que le programme r\u00e9ponde \u00e0 l'\u00e9nonc\u00e9 du probl\u00e8me des pr\u00e9cipitations.</p> <p>Remarque : les affectations de valeurs aux variables  <code>total_precipitations</code> et <code>nb_jours</code> peuvent se faire dans un ordre indiff\u00e9rent. Dans cette activit\u00e9, pour valider sans message d'erreur, on affectera une valeur \u00e0 <code>total_precipitations</code> avant d'en affecter une \u00e0  <code>nb_jours</code>.</p>"},{"location":"nsi_premiere/tour_de_cartes/","title":"Un tour de cartes","text":"<p>D'apr\u00e8s un exercice du concours Castor informatique suisse</p> <p>Le jeu de 7 familles de l'informatique est un jeu de cartes compos\u00e9 de 42 cartes r\u00e9parties en 7 familles, repr\u00e9sentant des personnes c\u00e9l\u00e8bres dans l'histoire de l'informatique. Il a \u00e9t\u00e9 publi\u00e9 par  interstices.info.</p> <p>On aligne quelques cartes du jeu sur une seule rang\u00e9e et on consid\u00e8re la r\u00e8gle suivante :</p> <p>Lors d\u2019un tour, on examine les cartes en commen\u00e7ant par celle la plus \u00e0 droite :</p> <p>\u2014 Si la carte est face vers le haut, on la retourne \u00e0 l\u2019envers et  s'il reste des cartes \u00e0 sa gauche, on passe \u00e0 la carte suivante.</p> <p>\u2014 Si la carte est face vers le bas, on la retourne \u00e0 l\u2019endroit et on ne fait rien sur les cartes \u00e0 sa gauche.</p> <p>Voici un exemple :</p> <p>Situation de d\u00e9part :</p> <p> </p> <p>Situation apr\u00e8s un tour :</p> <p> </p> <p>Voici l'\u00e9nonc\u00e9 du probl\u00e8me :</p> <p>On extrait la famille Algorithmes &amp; programmation du jeu  (t\u00e9l\u00e9charger les cartes \u00e0 imprimer) et on range les 6 cartes, face vers le haut, dans l'ordre croissant, de droite \u00e0 gauche (elles sont num\u00e9rot\u00e9es en binaire de 001 \u00e0 110).</p> <p> </p> <p>Puis on les retourne toutes.</p> <p>On applique alors la r\u00e8gle pr\u00e9c\u00e9dente pendant 16 tours.</p> <p>Question</p> <p>Quelle(s) carte(s) est(sont) face vers le haut \u00e0 l'issue des 16 tours ?</p>"},{"location":"nsi_premiere/tour_de_magie/","title":"Tour de magie","text":"<p>d'apr\u00e8s Prologin \u2013 Qualification 2013</p> <p>\u00c9nonc\u00e9</p> <p>Vous poss\u00e9dez un jeu de cartes contenant chacune une liste de nombres. Le jeu est accompagn\u00e9 d'une notice :</p> <p>Demandez \u00e0 quelqu'un de choisir un nombre entre 1 et 42, sans vous le dire. Montrez-lui les cartes du jeu une \u00e0 une et demandez-lui si son nombre figure dans la liste. Faites la somme des premiers nombres de chaque carte o\u00f9 la personne a dit OUI, et donnez ce nombre \u00e0 votre interlocuteur.</p> <p>Vous d\u00e9cidez alors de b\u00eata-tester le jeu sur votre grand-m\u00e8re.</p> <p>\u00ab Mamie, choisis un nombre. Est-ce qu'il est dans cette liste ? \u00bb</p> <p>1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 ? \u2192 OUI 2 3 6 7 10 11 14 15 18 19 22 23 26 27 30 31 34 35 38 39 42 ? \u2192 OUI 4 5 6 7 12 13 14 15 20 21 22 23 28 29 30 31 36 37 38 39 ? \u2192 NON 8 9 10 11 12 13 14 15 24 25 26 27 28 29 30 31 40 41 42 ? \u2192 OUI 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 ? \u2192 OUI 32 33 34 35 36 37 38 39 40 41 42 ? \u2192 NON  </p> <p>\u00ab OK, alors ton nombre est le (1 + 2 + 8 + 16 =) 27 ! C'est \u00e7a ? \u2014 Ah, je ne sais plus ! \u2014 :( \u00bb</p> <p>Mais pourquoi se limiter \u00e0 42 ? On vous demande de g\u00e9n\u00e9rer les cartes pour pouvoir effectuer le tour avec des nombres de 1 \u00e0 <code>n</code>.</p> <p>\u00c0 r\u00e9aliser</p> <p>\u00c9crire une fonction <code>affiche_cartes(n)</code> qui prend en param\u00e8tre le nombre entier <code>n</code>, nombre maximum que pourra choisir votre audience, et qui affiche sur la ligne n\u00b0 <code>i</code>, la liste des nombres de la <code>i</code>-\u00e8me carte. Exemples : <pre><code>affiche_cartes(15)\n</code></pre> <pre><code>1 3 5 7 9 11 13 15\n2 3 6 7 10 11 14 15\n4 5 6 7 12 13 14 15\n8 9 10 11 12 13 14 15\n</code></pre> <pre><code>affiche_cartes(42)\n</code></pre> <pre><code>1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41\n2 3 6 7 10 11 14 15 18 19 22 23 26 27 30 31 34 35 38 39 42\n4 5 6 7 12 13 14 15 20 21 22 23 28 29 30 31 36 37 38 39\n8 9 10 11 12 13 14 15 24 25 26 27 28 29 30 31 40 41 42\n16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n32 33 34 35 36 37 38 39 40 41 42\n</code></pre></p>"},{"location":"nsi_premiere/decouvrir/commandes/","title":"Commandes d'\u00e9clairage","text":"<p>\u00c9nonc\u00e9</p> <p>(d'apr\u00e8s le concours castor informatique suisse 2016, CC BY-NC-SA)</p> <p>Eric a trouv\u00e9 un vieil appareil \u00e9lectronique. Sur le c\u00f4t\u00e9 gauche, il y a trois touches A, B et C. Au centre, il y a deux panneaux et chacun dispose de 9 touches sur lesquelles on peut appuyer. Sur le c\u00f4t\u00e9 droit, il y a un panneau avec 9 lampes. En fonction de la combinaison des touches, les lampes s'allument ou s'\u00e9teignent.</p> <p>Eric d\u00e9couvre que la position d'une lampe qui s'allume et s'\u00e9teint correspond \u00e0 une combinaison de touches particuli\u00e8re dans les deux panneaux du centre.</p> <p>Actuellement, le bouton A est s\u00e9lectionn\u00e9 et les lampes sont allum\u00e9es comme suit : </p> <p>Lorsqu'il s\u00e9lectionne les boutons B puis C sans rien changer aux panneaux du centre, il obtient les r\u00e9sultats suivants : </p> <p></p> <p>Il choisit de modifier les touches s\u00e9lectionn\u00e9es dans les panneaux du centre, et s'arr\u00eate sur la configuration ci-dessous.</p> <p></p> <p>Quelles lampes sont \u00e9clair\u00e9es \u00e0 droite, lorsqu'il s\u00e9lectionne successivement le bouton A ? Le bouton B ? Le bouton C ?</p> Aide <p>Parmi les 4 figures suivantes, 3 correspondent aux 3 r\u00e9ponses attendues. Trouver l'intrus !</p> <p> </p>"},{"location":"nsi_premiere/decouvrir/marquage/","title":"Marquage d'oiseaux","text":"<p>\u00c9nonc\u00e9 initial</p> <p>Le concours Castor informatique comportait en 2015 la question suivante (version \\(\\star\\star\\star\\; \\star\\)   ) :</p> <p></p>"},{"location":"nsi_premiere/decouvrir/marquage/#avec-3-cases","title":"Avec 3 cases","text":"Avec 3 cases <ul> <li>Chaque case est soit blanche soit noire, et un marquage est ici compos\u00e9 de 3 cases. Proposer un marquage pour chacun des huit oiseaux.</li> <li>Tester en ligne sa proposition : choisir l'\u00e9nonc\u00e9 \\(\\star\\star\\star\\; \\star\\)</li> <li>Aurait-on pu marquer davantage d'oiseaux avec 3 cases ? Pourquoi ?</li> <li>Comparer les diff\u00e9rentes propositions dans la classe et discuter de leur efficacit\u00e9.</li> </ul>"},{"location":"nsi_premiere/decouvrir/marquage/#avec-4-cases","title":"Avec 4 cases","text":"Avec 4 cases <ul> <li>Voici une solution possible pour le marquage avec 3 cases : </li> <li>Comprendre et expliciter la logique de ce marquage.</li> <li>Combien d'oiseaux pourrait-on marquer avec 4 cases ?   \u00c9tendre la logique du marquage pr\u00e9c\u00e9dent \u00e0 4 cases et proposer le marquage ordonn\u00e9 d'un maximum d'oiseaux.  </li> </ul>"},{"location":"nsi_premiere/decouvrir/rvb/","title":"Syst\u00e8me RVB","text":"<p>\u00c9nonc\u00e9</p> <p>Le syst\u00e8me RVB est un syst\u00e8me de repr\u00e9sentation des couleurs, utilis\u00e9 notamment pour l'affichage des couleurs sur les \u00e9crans. Il consiste \u00e0 associer \u00e0 chacune des trois couleurs Rouge-Vert-Bleu une valeur num\u00e9rique comprise entre 0 et 255. La synth\u00e8se additive des couleurs permet de combiner les trois niveaux pour afficher une couleur.</p> <p>Sur le web, on voit souvent une couleur d\u00e9sign\u00e9e par un code de 6 caract\u00e8res pr\u00e9c\u00e9d\u00e9s du symbole <code>#</code>. Il est appel\u00e9 code hex. Voici trois exemples o\u00f9 l'on affiche le code hex  ainsi que le triplet de valeurs RVB en d\u00e9cimal.</p> <p> </p> <p>Comment donner une signification au code hex et \u00e9tablir une correspondance entre le code hex et le triplet de valeurs RVB en d\u00e9cimal ?</p>"},{"location":"nsi_premiere/decouvrir/tri_bols/","title":"Fabrique de bols","text":"<p>\u00c9nonc\u00e9</p> <p>(d'apr\u00e8s le concours castor informatique suisse 2015, CC BY-NC-SA)</p> <p>Dans une fabrique, on r\u00e9alise des sets de bols compos\u00e9s de 6 bols de tailles diff\u00e9rentes. La machine de production d\u00e9pose les bols d'un set \u00e0 la suite sur une cha\u00eene de montage, toutefois dans un ordre al\u00e9atoire.</p> <p>Pour pouvoir \u00eatre emball\u00e9, le set doit toutefois se trouver dans l'ordre suivant sur la cha\u00eene de montage :</p> <p></p> <p>Des ouvriers se tiennent \u00e0 c\u00f4t\u00e9 de la cha\u00eene pour trier les sets, \u00e0 savoir mettre les bols dans le bon ordre. Un seul ouvrier intervertit deux bols c\u00f4te \u00e0 c\u00f4te si leur ordre est erron\u00e9 sur le tapis roulant. </p> <p>Exemple : Cet ouvrier intervertit les bols des tailles 5 et 6. Plus tard, il intervertit encore 1 et 4 et ensuite 1 et 3.</p> <p>Apr\u00e8s les \u00e9changes qu'il a r\u00e9alis\u00e9s, les bols sont dispos\u00e9s dans l'ordre suivant sur la cha\u00eene : 1, 3, 4, 2, 5, 6.</p> <p>\u00c0 r\u00e9aliser :</p> <p>Un set de bols se trouve dans l'ordre suivant sur la cha\u00eene de montage : 5, 6, 3, 2, 4, 1.</p> <p></p> <p>Combien d'ouvriers faut-il au minimum sur la chaine pour trier le set ?   Et combien d'\u00e9changes de bols r\u00e9alisent-ils au total ?</p> R\u00e9ponse <p>La r\u00e9ponse correcte est 4. Les bols sont pos\u00e9s dans l'ordre suivant sur la cha\u00eene : 5, 6, 3, 2, 4, 1. - Le premier ouvrier intervertit toujours le bol 1 avec les bols \u00e0 c\u00f4t\u00e9 pour le transf\u00e9rer tout \u00e0 gauche : 1, 5, 6, 3, 2, 4. - Le deuxi\u00e8me ouvrier va intervertir le bol 2, jusqu'au bol 1 : 1, 2, 5, 6, 3, 4. - Le troisi\u00e8me ouvrier va intervertir le bol 3, jusqu'au bol 2 : 1, 2, 3, 5, 6, 4. - Le quatri\u00e8me ouvrier va intervertir le bol 4, jusqu'au bol 3 : 1, 2, 3, 4, 5, 6.  </p> <p>Il faut donc au moins quatre ouvriers pour trier le set.</p> Pour aller plus loin : <p>Avec une chaine comportant 6 bols dispos\u00e9s al\u00e9atoirement, combien d'ouvriers faut-il au maximum pour les ranger dans l'ordre ?  Et combien d'\u00e9changes de bols r\u00e9alisent-ils au maximum ?  </p> <p>Et si la chaine comporte \\(n\\) bols dispos\u00e9s al\u00e9atoirement, combien d'ouvriers faut-il au maximum pour les ranger dans l'ordre ? Et combien d'\u00e9changes de bols r\u00e9alisent-ils au maximum ?</p>"},{"location":"nsi_terminale/problemes_term/","title":"Chercher : une s\u00e9lection de probl\u00e8mes","text":""},{"location":"nsi_terminale/problemes_term/#les-huit-reines","title":"Les huit reines","text":"<p>Article \u00e0 consulter sur le site accromath.uqam.ca </p>"},{"location":"p5/ref_p5/","title":"p5 : r\u00e9f\u00e9rences","text":"<p>Basthon propose la biblioth\u00e8que p5, qui permet de r\u00e9aliser rapidement des constructions graphiques et des animations. La biblioth\u00e8que propose l'essentiel des fonctions de p5.js, avec la syntaxe de python. En particulier, il ne s'agit pas de la biblioth\u00e8que p5 disponible dans d'autres IDE.</p>"},{"location":"p5/ref_p5/#structure-du-programme","title":"Structure du programme","text":""},{"location":"p5/ref_p5/#les-fonctions-setup-draw-et-run","title":"Les fonctions <code>setup()</code>, <code>draw()</code> et <code>run()</code>","text":"<p>Le programme doit contenir deux fonctions, <code>setup()</code> et <code>draw()</code>, et l'ex\u00e9cution est lanc\u00e9e \u00e0 l'aide de l'instruction <code>run()</code>.</p> <p>Lorsque l'on ex\u00e9cute l'instruction <code>run()</code>, la fonction <code>setup()</code> est ex\u00e9cut\u00e9e une fois : <pre><code>def setup():\n    createCanvas(800,600)\n    # instructions de param\u00e9trage de l'affichage\n</code></pre> Cette fonction permet de d\u00e9finir les dimensions de la fen\u00eatre de trac\u00e9, et quelques param\u00e8tres initiaux. Les valeurs donn\u00e9es aux param\u00e8tres de la fonction <code>createCanvas</code> sont affect\u00e9es automatiquement \u00e0 deux variables syst\u00e8mes :  <code>width</code>  pour le premier param\u00e8tre et <code>height</code> pour le second. La fonction <code>update_variables()</code> permet de forcer la mise a\u0300 jour des variables <code>width</code> et <code>height</code>, par exemple pour utiliser leurs valeurs dans  la fonction <code>setup</code>.</p> <p>Puis la fonction <code>draw()</code> est ensuite ex\u00e9cut\u00e9e en boucle, apr\u00e8s l'ex\u00e9cution de <code>setup()</code>: <pre><code>def draw():\n    # instructions de dessin\n</code></pre> Elle contient des instructions qui seront ex\u00e9cut\u00e9es avec une fr\u00e9quence r\u00e9glable, permettant de modifier le contenu de la fen\u00eatre et de cr\u00e9er des contenus statiques ou des animations.</p> <p>L'instruction <code>stop()</code> met fin \u00e0 l'ex\u00e9cution du programme : <pre><code>stop()\n</code></pre></p> Compl\u00e9ment : la fonction <code>preload</code> <p>Il est possible de charger des donn\u00e9es avant l'ex\u00e9cution de <code>setup()</code>. On peut par exemple charger une image dans la fonction <code>preload</code> puis l'afficher depuis la fonction <code>setup()</code>. Dans ce cas, l'appel de la fonction <code>run</code> doit pr\u00e9ciser d'ex\u00e9cuter la fonction <code>preload</code>.</p> <p>Exemple : <pre><code>def preload():\n  global background_img\n  background_img = loadImage(url)   \n\ndef setup():\n  createCanvas(700,700)\n  background(background_img)\n\ndef draw():\n  pass\n\nrun(preload=preload)\n</code></pre></p>"},{"location":"p5/ref_p5/#variables-systeme","title":"Variables syst\u00e8me","text":"variable description windowWidth,  windowHeight Dimensions de la fen\u00eatre width, height Dimensions de la zone de dessin. Les valeurs de <code>width</code> et <code>height</code> sont d\u00e9finies par les param\u00e8tres de la fonction <code>createCanvas()</code>. <p>Voir \u00e9galement les paragraphes Touches du clavier et Souris.</p>"},{"location":"p5/ref_p5/#rafraichissement","title":"Rafra\u00eechissement","text":"syntaxe description frameCount Nombre d'images affich\u00e9es depuis le d\u00e9marrage du programme. frameRate()  getFrameRate() Renvoie le nombre d'images affich\u00e9es chaque seconde. frameRate(valeur)  setFrameRate(valeur) Sp\u00e9cifie le nombre d'images \u00e0 afficher chaque seconde. noLoop() Si cette instruction est pr\u00e9sente dans la fonction <code>setup</code> la fonction <code>draw</code> sera ex\u00e9cut\u00e9e une seule fois. Si cette instruction est pr\u00e9sente dans la fonction <code>draw</code>, les instructions de la fonction <code>draw</code> en cours sont ex\u00e9cut\u00e9es (il n'y a pas d'interruption) mais celle-ci ne sera pas appel\u00e9e \u00e0 nouveau. loop() Relance l'ex\u00e9cution en boucle de draw()."},{"location":"p5/ref_p5/#couleurs","title":"Couleurs","text":""},{"location":"p5/ref_p5/#designer-une-couleur","title":"D\u00e9signer une couleur","text":"syntaxe description 'red' nom de couleur 120 niveau de gris : 0 - 255 (100, 125, 255) couleur r, v, b (d\u00e9cimal) : 0 - 255 '#2aff95' couleur r, v, b (hexad\u00e9cimal) : 00 - ff (255, 0, 0, 50) couleur r, v, b, alpha color(0, 0, 255) objet p5.Color <p>On peut \u00e9galer d\u00e9terminer une couleur \u00e0 l'aide de la fonction d'interpolation lin\u00e9aire <code>lerpColor</code>: <code>lerpColor(couleur1, couleur2, coefficient)</code>  d\u00e9termine une couleur interm\u00e9diaire entre <code>couleur1</code> et <code>couleur2</code>. <code>coefficient</code>  est un nombre entre 0 et 1. Plus <code>coefficient</code> est proche de 0, plus la couleur obtenue est proche de <code>couleur1</code>, et plus <code>coefficient</code> est proche de 1, plus la couleur obtenue est proche de <code>couleur2</code>.</p>"},{"location":"p5/ref_p5/#dessiner-en-couleur","title":"Dessiner en couleur","text":"syntaxe description background(couleur) D\u00e9finit la couleur d'arri\u00e8re-plan de la zone de dessin (255 par d\u00e9faut). fill(couleur) D\u00e9finit la couleur de remplissage des formes (255 par d\u00e9faut). noFill() D\u00e9sactive la couleur de remplissage. stroke(couleur) D\u00e9finit la couleur de trac\u00e9 des formes (0 par d\u00e9faut). noStroke() D\u00e9sactive le trac\u00e9 du contour des figures. <p>Si <code>noFill()</code> et <code>noStroke()</code> sont ex\u00e9cut\u00e9es en m\u00eame temps, rien n'est trac\u00e9 dans la zone de dessin.</p>"},{"location":"p5/ref_p5/#analyser-une-couleur","title":"Analyser une couleur","text":"syntaxe description alpha(couleur) renvoie le niveau de transparence de <code>couleur</code> sur une \u00e9chelle de 0 (transparence totale) \u00e0 255 (opaque) blue(couleur) renvoie le niveau de bleu de <code>couleur</code> sur une \u00e9chelle de 0 \u00e0 255. green(couleur) renvoie le niveau de vert de <code>couleur</code> sur une \u00e9chelle de 0 \u00e0 255. red(couleur) renvoie le niveau de rouge de <code>couleur</code> sur une \u00e9chelle de 0 \u00e0 255."},{"location":"p5/ref_p5/#formes","title":"Formes","text":""},{"location":"p5/ref_p5/#primitives-2d","title":"Primitives 2d","text":"<p>L'origine du rep\u00e8re est situ\u00e9e en haut \u00e0 gauche. Les abscisses augmentent de gauche \u00e0 droite, les ordonn\u00e9es augmentent de haut en bas.</p> <p></p> syntaxe description point(x, y) Trace un point de coordonn\u00e9es (x, y). line(x1, y1, x2, y2) Trace un segment reliant les deux points de coordonn\u00e9es (x1, y1) et (x2, y2). circle(x, y, diametre) Tracer un cercle dont le centre a pour coordonn\u00e9es (x, y) et dont le diam\u00e8tre prend la valeur fix\u00e9e. ellipse(x, y, largeur, hauteur) Tracer une ellipse dont le centre a pour coordonn\u00e9es (x, y) et dont la largeur et la hauteur prennent les valeurs fix\u00e9es. arc(x, y, largeur, hauteur, angleDebut, angleFin) Trace un arc de l'ellipse d\u00e9finie par <code>ellipse(x, y, largeur, hauteur)</code> entre les points rep\u00e9r\u00e9s par les angles <code>angleD\u00e9but</code> et <code>angleFin</code> (en radians). square(x, y, cote) Trace un carr\u00e9 dont le sommet en haut \u00e0 gauche a pour coordonn\u00e9es (x, y) et dont le c\u00f4t\u00e9 prend la valeur fix\u00e9e. rect(x, y, largeur, hauteur) Trace un rectangle dont le sommet en haut \u00e0 gauche a pour coordonn\u00e9es (x, y), et dont la largeur et la hauteur prennent les valeurs fix\u00e9es. triangle(x1, y1, x2, y2, x3, y3) Trace un triangle dont les trois sommets ont pour coordonn\u00e9es (x1, y1), (x2, y2), et (x3, y3). quad(x1, y1, x2, y2, x3, y3, x4, y4) Trace un quadrilat\u00e8re dont les quatre sommets ont pour coordonn\u00e9es (x1, y1), (x2, y2), (x3, y3) et (x4, y4)."},{"location":"p5/ref_p5/#traces","title":"Trac\u00e9s","text":"syntaxe description strokeWeight(epaisseur) D\u00e9finit l'\u00e9paisseur du trac\u00e9 en pixels (par d\u00e9faut : 1 pixel). noStroke() D\u00e9sactive le trac\u00e9 du contour des figures. strokeCap(style) D\u00e9finit le style de rendu des extr\u00e9mit\u00e9s de ligne. Ces extr\u00e9mit\u00e9s sont soit arrondies, carr\u00e9es ou \u00e9tendues, chacune sp\u00e9cifi\u00e9e avec les param\u00e8tres correspondants: ROUND, SQUARE et PROJECT (par d\u00e9faut : ROUND)."},{"location":"p5/ref_p5/#textes","title":"Textes","text":"syntaxe description text(chaine, x, y) Affiche la chaine \u00e0 la position (x, y) text(chaine, x, y, largeur, hauteur) Affiche la chaine \u00e0 la position (x, y) dans une boite de dimensions largeur x hauteur textAlign(alignement_horizontal)  textAlign(alignement_horizontal, alignement_vertical) Sp\u00e9cifie l'alignement horizontal parmi LEFT, CENTER, et RIGHT et l'alignement vertical parmi TOP, BOTTOM, CENTER, et BASELINE textFont(police)  textFont(police, taille) Sp\u00e9cifie la police de caract\u00e8res et \u00e9ventuellement sa taille textLeading(interligne) Sp\u00e9cifie la taille en pixels de l'espace entre deux lignes de texte textSize(taille) Sp\u00e9cifie la taille de la police de caract\u00e8res textStyle(style) Sp\u00e9cifie le style parmi NORMAL, ITALIC, BOLD et BOLDITALIC textAscent(chaine) Valeur maximale en pixels de la hauteur des caract\u00e8res de chaine, au-dessus de la ligne de base textDescent(chaine) Valeur maximale en pixels de la hauteur des caract\u00e8res de chaine, en-dessous de la ligne de base textWidth(chaine) Largeur en pixels de l'affichage de chaine, dans la police et taille actuelles <p>Voir aussi <code>loadFont</code> sur p5.js</p>"},{"location":"p5/ref_p5/#evenements","title":"\u00c9v\u00e9nements","text":""},{"location":"p5/ref_p5/#touches-du-clavier","title":"Touches du clavier","text":"syntaxe description key Nom de la derni\u00e8re touche appuy\u00e9e. keyCode Code de la derni\u00e8re touche appuy\u00e9e. keyIsPressed isKeyPressed Vaut <code>True</code> lorsqu'une touche du clavier est appuy\u00e9e et <code>False</code> sinon. keyIsDown(code)   keyIsDown(touche) Vaut <code>True</code> si la touche concern\u00e9e est appuy\u00e9e et <code>False</code> sinon."},{"location":"p5/ref_p5/#souris","title":"Souris","text":"syntaxe description mouseX, mouseY Coordonn\u00e9es du pointeur de la souris pmouseX, pmouseY Pr\u00e9c\u00e9dentes coordonn\u00e9es du pointeur de la souris mouseIsPressed Vaut <code>True</code>si la souris est cliqu\u00e9e, et <code>False</code> sinon. movedX Mouvement horizontal du pointeur de la souris depuis la derni\u00e8re ex\u00e9cution de <code>draw()</code> movedY Mouvement vertical du pointeur de la souris depuis la derni\u00e8re ex\u00e9cution de <code>draw()</code>"},{"location":"p5/ref_p5/#mathematiques","title":"Math\u00e9matiques","text":""},{"location":"p5/ref_p5/#angles","title":"Angles","text":"syntaxe description angleMode(mode) D\u00e9finit l'unit\u00e9 de mesure des angles. <code>mode</code> peut prendre la valeur <code>RADIANS</code> ou la valeur  <code>DEGREES</code>. La valeur par d\u00e9faut est <code>RADIANS</code>. cos(), sin(), tan() Fonctions trigonom\u00e9triques usuelles degrees(mesure) radians(mesure) Convertit une mesure d'angle en degr\u00e9s ou en radians HALF_PI, PI, QUARTER_PI, TWO_PI Constantes permettant respectivement d'approcher les valeurs de \\(\\frac \\pi 2\\), \\(\\pi\\), \\(\\frac \\pi 4\\), \\(2\\pi\\)"},{"location":"p5/ref_p5/#images","title":"Images","text":""},{"location":"p5/ref_p5/#charger-une-image","title":"Charger une image","text":"syntaxe description loadImage(chemin) Charge une image \u00e0 partir d'un chemin et cr\u00e9e un objet de classe p5.Image. Si n\u00e9cessaire, l'image peut \u00eatre pr\u00e9charg\u00e9e en pla\u00e7ant l'appel \u00e0 la fonction <code>loadImage</code> dans la fonction <code>preload</code>."},{"location":"p5/ref_p5/#afficher-une-image","title":"Afficher  une image","text":"syntaxe description background(p5.Image) Affiche une p5.Image en fond d'\u00e9cran image(p5.Image, x, y) Affiche une p5.Image en pla\u00e7ant le pixel en haut \u00e0 gauche au point de coordonn\u00e9es (x, y) dans la zone de dessin."},{"location":"p5/ref_p5/#creer-une-image","title":"Cr\u00e9er une image","text":"syntaxe description createImage(largeur, hauteur) Cr\u00e9e un objet de type p5.Image"},{"location":"p5/ref_p5/#modifier-une-image","title":"Modifier une image","text":"syntaxe description img.loadPixels() M\u00e9thode qui cr\u00e9e le tableau des pixels de img. img.get(x, y) M\u00e9thode qui permet de lire la couleur du pixel de coordonn\u00e9es (x, y) de img. img.set(x, y, couleur) M\u00e9thode qui permet de sp\u00e9cifier la couleur du pixel de coordonn\u00e9es (x, y) de img. img.updatePixels() M\u00e9thode qui met \u00e0 jour le tableau des pixels de img."},{"location":"python/boucles_bornees/","title":"Boucles born\u00e9es : g\u00e9n\u00e9ralit\u00e9s","text":"<p>Les boucles born\u00e9es servent \u00e0 ex\u00e9cuter certaines instructions d'un programme de mani\u00e8re r\u00e9p\u00e9titive, un nombre pr\u00e9d\u00e9fini de fois.</p> <p>Par exemple pour r\u00e9p\u00e9ter quatre fois un bloc d'instructions, on peut \u00e9crire :</p> <pre><code>    for i in range(4):\n        bloc d'instructions\n</code></pre> <p>Exemple :</p> <p><pre><code>for i in range(4):\n    print(\"Bienvenue !\")\n</code></pre> <pre><code>Bienvenue !\nBienvenue !\nBienvenue !\nBienvenue !\n</code></pre></p> <p>En premi\u00e8re approche, on peut se contenter de la syntaxe :  <pre><code>for i in range(n) :\n    bloc d'instructions\n</code></pre> pour  r\u00e9p\u00e9ter <code>n</code> fois un bloc d'instructions. Mais les deux instructions que cette syntaxe combine : <code>for ... in</code> et <code>range()</code> permettent de nombreuses possibilit\u00e9s.</p>"},{"location":"python/boucles_bornees/#linstruction-for-in","title":"L'instruction <code>for ... in</code>","text":"<p>La boucle born\u00e9e (ou instruction <code>for ... in</code>)  permet d\u2019it\u00e9rer sur les \u00e9l\u00e9ments d\u2019une s\u00e9quence (liste, chaine de caract\u00e8res, etc.) dans l'ordre dans lequel les \u00e9l\u00e9ments apparaissent dans la s\u00e9quence.   </p> <p>Exemple :</p> <p><pre><code>liste_mots = ['anthracite', 'blanc', 'cyan']\nfor mot in liste_mots:\n    print(mot)\n</code></pre> <pre><code>anthracite\nblanc\ncyan\n</code></pre></p> <p>La syntaxe de la boucle <code>for</code>est :</p> <p><pre><code>for element in sequence:\n    bloc d'instructions\n</code></pre> <code>element</code> est une variable \u00e0 laquelle il faut donner un nom, et qui prend successivement les valeurs des \u00e9l\u00e9ments de la s\u00e9quence.  Le bloc d'instructions \u00e0 ex\u00e9cuter dans le corps de la boucle est \u00e0 indenter.</p>"},{"location":"python/boucles_bornees/#la-fonction-range","title":"La fonction <code>range()</code>","text":"<p>Pour it\u00e9rer sur une suite de nombres entiers, on peut utiliser la fonction  <code>range()</code>.</p> <p>Exemple :</p> <p><pre><code>for i in range(4):\n   print(i, i**2)\n</code></pre> <pre><code>0 0\n1 1\n2 4\n3 9\n</code></pre> Ici <code>i</code>prend successivement les valeurs 0, 1, 2, puis 3 et pour chaque valeur de <code>i</code>on affiche <code>i</code>et son carr\u00e9.</p> <p>La syntaxe g\u00e9n\u00e9rale est <code>range(debut, fin, pas)</code>.  </p> <p>La liste des valeurs g\u00e9n\u00e9r\u00e9es commence avec la valeur <code>debut</code>;  les valeurs suivantes sont g\u00e9n\u00e9r\u00e9es en augmentant de la valeur <code>pas</code> et la liste s'arr\u00eate  juste avant d'atteindre ou d\u00e9passer la valeur <code>fin</code>.</p> <ul> <li><code>debut</code> est un param\u00e8tre facultatif : sa valeur par d\u00e9faut est <code>0</code>.  </li> <li><code>pas</code> est aussi un param\u00e8tre facultatif. Il vaut <code>1</code>par d\u00e9faut ; il faut donner les 3 param\u00e8tres de <code>range()</code> pour modifier sa valeur.    </li> </ul> <p>La syntaxe <code>range(valeur)</code> est donc \u00e9quivalente \u00e0 <code>range(0, valeur, 1)</code> et g\u00e9n\u00e8re la liste les entiers de 0 \u00e0 <code>valeur</code> - 1.</p> <p>Exemple :</p> <p><code>range(10)</code> g\u00e9n\u00e8re la liste 0, 1, 2, 3, 4, 5, 6, 7, 8, 9  </p> <p><code>range(4, 10)</code> g\u00e9n\u00e8re la liste 4, 5, 6, 7, 8, 9  </p> <p><code>range(1, 12, 3)</code> g\u00e9n\u00e8re la liste 1, 4, 7, 10</p> <p><code>range(5, -10, -3)</code> g\u00e9n\u00e8re la liste 5, 2, -1, -4, -7</p> <p>Info</p> <p>L'objet renvoy\u00e9 par <code>range()</code> se comporte presque comme une liste, mais n'en est pas une. Cet objet g\u00e9n\u00e8re les \u00e9l\u00e9ments de la s\u00e9quence au fur et \u00e0 mesure de l'it\u00e9ration, sans r\u00e9ellement produire la liste en tant que telle.</p>"},{"location":"python/boucles_bornees/#iterer-sur-les-indices-dune-sequence","title":"It\u00e9rer sur les indices d'une s\u00e9quence","text":"<p>Pour it\u00e9rer sur les indices d'une s\u00e9quence, on peut combiner les fonctions <code>range()</code> et <code>len()</code>. La fonction <code>len()</code> renvoie la longueur d'une s\u00e9quence, c'est-\u00e0-dire son nombre d'\u00e9l\u00e9ments.</p> <p>Exemple :</p> <p><pre><code>couleurs =  ['anthracite', 'blanc', 'cyan']\nfor i in range(len(couleurs)):\n   print(i, couleurs[i])\n</code></pre> <pre><code>0 anthracite\n1 blanc\n2 cyan\n</code></pre></p> <p>Mais il existe une instruction sp\u00e9cifique pour cela : dans une boucle sur une s\u00e9quence, l'indice et la valeur correspondante peuvent \u00eatre r\u00e9cup\u00e9r\u00e9s en m\u00eame temps en utilisant la fonction <code>enumerate()</code>.</p> <p>Exemple :</p> <p><pre><code>couleurs =  ['anthracite', 'blanc', 'cyan']\nfor indice, valeur in enumerate(couleurs):\n    print(indice, valeur)\n</code></pre> <pre><code>0 anthracite\n1 blanc\n2 cyan\n</code></pre></p>"},{"location":"python/boucles_bornees/#iterer-sur-plusieurs-sequences","title":"It\u00e9rer sur plusieurs s\u00e9quences","text":"<p>Pour faire une boucle sur deux s\u00e9quences ou plus en m\u00eame temps, les \u00e9l\u00e9ments peuvent \u00eatre associ\u00e9s en utilisant la fonction <code>zip()</code> :</p> <p>Exemple :</p> <p><pre><code>couleurs =  ['anthracite', 'blanc', 'cyan']\ncodes_hex = ['#303030', '#FFFFFF', '#00FFFF']\nfor couleur, code in zip(couleurs, codes_hex):\n    print(couleur, code)\n</code></pre> <pre><code>anthracite #303030\nblanc #FFFFFF\ncyan #00FFFF\n</code></pre></p>"},{"location":"python/boucles_bornees_exemples/","title":"Exemples : boucles born\u00e9es","text":"<p>Les exemples d\u00e9taill\u00e9s sur cette page ont pour but d'expliciter quelques situations usuelles d'utilisation des boucles born\u00e9es.</p> <p>Les trac\u00e9s suivants ont \u00e9t\u00e9 r\u00e9alis\u00e9s \u00e0 l'aide du module Turtle disponible dans Basthon. Pour ex\u00e9cuter ces programmes dans un notebook Jupyter de Basthon, le notebook doit contenir l'instruction   <code>from turtle import *</code> et chaque dessin doit se terminer avec l\u2019instruction <code>done()</code>.</p>"},{"location":"python/boucles_bornees_exemples/#1-repeter-exactement-les-memes-instructions","title":"1. R\u00e9p\u00e9ter exactement les m\u00eames instructions","text":"<p>Un exemple classique est le trac\u00e9 de polygones avec <code>Turtle</code>. Voici le cas du carr\u00e9.</p>"},{"location":"python/boucles_bornees_exemples/#11-trace-dun-carre-de-cote-100","title":"1.1 Trac\u00e9 d'un carr\u00e9 de c\u00f4t\u00e9 100","text":"<p><pre><code>for i in range(4):\n    forward(100)\n    left(90)\n</code></pre> On utilise une boucle pour r\u00e9p\u00e9ter un bloc de deux instructions : <code>forward(100)</code> et <code>left(90)</code>  sont ex\u00e9cut\u00e9es quatre fois de suite.</p>"},{"location":"python/boucles_bornees_exemples/#12-calcul-de-la-longueur-du-trajet-parcouru","title":"1.2 Calcul de la longueur du trajet parcouru","text":"<p>Pour calculer la longueur du trajet parcouru on peut initialiser une variable <code>parcouru</code> \u00e0 0 et lui ajouter la longueur de chaque segment parcouru : <pre><code>parcouru = 0                     # initialisation \u00e0 0\nfor i in range(4):\n    parcouru = parcouru + 100    # parcouru est augment\u00e9e de 100\nprint(parcouru)\n</code></pre> <pre><code>400\n</code></pre> On dit que <code>parcouru</code> est une variable de cumul. \u00c9videmment dans le cas du p\u00e9rim\u00e8tre d'un carr\u00e9, on connait une op\u00e9ration plus efficace que quatre additions successives, mais ce n'est pas l'objectif ici.</p> <p>On utilise une boucle pour r\u00e9p\u00e9ter une instruction : <code>parcouru = parcouru + 100</code>  est ex\u00e9cut\u00e9e quatre fois de suite.</p>"},{"location":"python/boucles_bornees_exemples/#2-repeter-des-instructions-contenant-des-expressions-dont-la-valeur-est-explicitement-modifiee","title":"2. R\u00e9p\u00e9ter des instructions contenant des expressions dont la valeur est explicitement modifi\u00e9e","text":""},{"location":"python/boucles_bornees_exemples/#21-trace-dune-spirale","title":"2.1 Trac\u00e9 d'une spirale","text":"<p>On souhaite r\u00e9aliser une spirale compos\u00e9e de dix segments dont les longueurs sont successivement 10, 20, 30, ..., 100. On peut utiliser une variable <code>pas</code> contenant \u00e0 chaque \u00e9tape la longueur du trac\u00e9 \u00e0 r\u00e9aliser. \u00c0 la fin de chaque \u00e9tape, la valeur de la variable <code>pas</code> sera augment\u00e9e de 10.</p> <p></p> <p><pre><code>pas = 10              # initialisation \u00e0 10\nfor i in range(10):\n    forward(pas)\n    left(90)\n    pas = pas + 10    # pas est augment\u00e9 de 10\n</code></pre> On utilise une boucle pour r\u00e9p\u00e9ter un bloc d'instructions dix fois de suite. Comme l'instruction <code>forward(pas)</code> d\u00e9pend du param\u00e8tre <code>pas</code> et que celui-ci est modifi\u00e9 \u00e0 l'int\u00e9rieur de la boucle, les dix trac\u00e9s ne sont pas identiques.</p>"},{"location":"python/boucles_bornees_exemples/#22-calcul-de-la-longueur-du-trajet-parcouru","title":"2.2 Calcul de la longueur du trajet parcouru","text":"<p>Cette fois encore, pour calculer la longueur du trajet parcouru on peut initialiser une variable <code>parcouru</code> \u00e0 0 et lui ajouter la longueur de chaque segment parcouru, or cette longueur est la valeur de <code>pas</code>.</p> <p><pre><code>parcouru = 0                     # initialisation \u00e0 0\npas = 10                         # initialisation \u00e0 10\nfor i in range(10):\n    parcouru = parcouru + pas    # parcouru est augment\u00e9e de la valeur de pas\n    pas = pas + 10               # pas est augment\u00e9e de 10\nprint(parcouru)\n</code></pre> <pre><code>550\n</code></pre> Le programme ci-dessus est un proc\u00e9d\u00e9 classique de calcul d'une somme \u00e0 l'aide d'une boucle. La valeur 550 correspond \u00e0 la somme 10 + 20 + 30 + ... + 100.</p>"},{"location":"python/boucles_bornees_exemples/#3-repeter-des-instructions-contenant-lindice-de-boucle","title":"3. R\u00e9p\u00e9ter des instructions contenant l'indice de boucle","text":""},{"location":"python/boucles_bornees_exemples/#31-trace-dune-spirale","title":"3.1 Trac\u00e9 d'une spirale","text":"<p>Dans l'exemple pr\u00e9c\u00e9dent, introduire une variable <code>pas</code> contenant la longueur \u00e0 tracer \u00e0 chaque \u00e9tape permettait de donner une interpr\u00e9tation \u00e0 la valeur de cette variable. Pour modifier cette valeur entre deux \u00e9tapes, il a fallu \u00e9crire une instruction sp\u00e9cifique dans la boucle :  <code>pas = pas + 10</code> </p> <p>Une autre variable \u00e9tait pr\u00e9sente dans le code et n'a pas \u00e9t\u00e9 exploit\u00e9e. Il s'agit de l'indice de boucle, qui \u00e9tait nomm\u00e9 <code>i</code> dans les exemples pr\u00e9c\u00e9dents. Dans l'instruction <code>for i in range(10)</code> l'indice <code>i</code>  prend dix valeurs successives : les entiers de 0 \u00e0 9. On peut utiliser cette variable, qui est modifi\u00e9e implicitement au cours de la boucle, pour r\u00e9aliser le m\u00eame trac\u00e9 sans introduire de nouvelle variable.  Par exemple le programme suivant permet d'obtenir le m\u00eame trac\u00e9 qu'au paragraphe 2.1.</p> <p></p> <p><pre><code>for i in range(10):\n    forward(10 + 10 * i)\n    left(90)\n</code></pre> Lorsque <code>i</code> prend les valeurs enti\u00e8res de 0 \u00e0 9, l'expression <code>10 + 10 * i</code> prend les valeurs : 10, 20, ..., 100.</p>"},{"location":"python/boucles_bornees_exemples/#32-calcul-de-la-longueur-du-trajet-parcouru","title":"3.2 Calcul de la longueur du trajet parcouru","text":"<p>En s'appuyant sur le programme de trac\u00e9 pr\u00e9c\u00e9dent, le calcul de la longueur devient :</p> <p><pre><code>parcouru = 0  \nfor i in range(10):\n    parcouru = parcouru + (10 + 10 * i)\nprint(parcouru)\n</code></pre> <pre><code>550\n</code></pre></p>"},{"location":"python/boucles_bornees_exercices/","title":"Exercices : boucles born\u00e9es","text":"<p>Module turtle</p> <p>Certains exercices utilisent le module <code>turtle</code>. Ils sont pr\u00e9c\u00e9d\u00e9s de l'ic\u00f4ne .  </p> <p>Pour ex\u00e9cuter dans un notebook Jupyter de Basthon un programme utilisant des instructions du module <code>turtle</code>, le notebook doit contenir l'instruction   <code>from turtle import *</code> et le programme doit se terminer avec l\u2019instruction <code>done()</code>.</p> <p>Pour connaitre la liste des instructions disponibles, consulter le M\u00e9mo Turtle </p>"},{"location":"python/boucles_bornees_exercices/#1-traces-en-boucle","title":"1. Trac\u00e9s en boucle","text":""},{"location":"python/boucles_bornees_exercices/#exercice-11","title":"Exercice 1.1","text":"<p>On consid\u00e8re les trois figures suivantes :  </p> <p>Fig.1  Fig.2  Fig.3 </p> <p>Question 1</p> <p> Associer \u00e0 chaque figure le programme qui a permis de la r\u00e9aliser :  </p> <p>Programme A <pre><code>pas = 10\nfor i in range(20) :\n    forward(pas)\n    left(45)\n    pas = pas + 2\n</code></pre> Programme B <pre><code>for i in range(8) :\n    forward(50)\n    left(45)\n</code></pre> Programme C <pre><code>pas = 10\nfor i in range(20) :\n    forward(pas)\n    left(90)\n    pas = pas + 5\n</code></pre></p> <p>Question 2</p> <p>D\u00e9terminer la longueur du trac\u00e9 parcouru par la tortue pour r\u00e9aliser chaque figure.</p>"},{"location":"python/boucles_bornees_exercices/#exercice-12","title":"Exercice 1.2","text":"<p>Question</p> <p> \u00c9crire un programme permettant \u00e0 la tortue de tracer :</p> <ul> <li>un pentagone r\u00e9gulier</li> <li>un hexagone r\u00e9gulier</li> <li>un d\u00e9cagone r\u00e9gulier</li> </ul> Aide <p>Fig.1  Fig.2  Fig.3 </p>"},{"location":"python/boucles_bornees_exercices/#2-calculs-en-boucle","title":"2. Calculs en boucle","text":""},{"location":"python/boucles_bornees_exercices/#exercice-21","title":"Exercice 2.1","text":"<p>Question</p> <p>Quelle est la valeur de la variable <code>resultat</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ? <pre><code>resultat = 0\nfor i in range(50):\n    resultat = resultat + 2\n</code></pre></p>"},{"location":"python/boucles_bornees_exercices/#exercice-22","title":"Exercice 2.2","text":"<p>Question</p> <p>Quelle est la valeur de la variable <code>resultat</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ? <pre><code>resultat = 1\nfor i in range(5):\n    resultat = resultat * 2\n</code></pre></p>"},{"location":"python/boucles_bornees_exercices/#exercice-23","title":"Exercice 2.3","text":"<p>Question</p> <p>Quelle est la valeur de la variable <code>resultat</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ? <pre><code>resultat = 0\nfor i in range(1, 5):\n    resultat = resultat + i\n</code></pre></p>"},{"location":"python/boucles_bornees_exercices/#exercice-24","title":"Exercice 2.4","text":"<p>Question</p> <p>Quelle est la valeur de la variable <code>resultat</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ? <pre><code>resultat = 1\nfor i in range(1, 5):\n    resultat = resultat * i\n</code></pre></p>"},{"location":"python/boucles_bornees_exercices/#3-somme","title":"3. Somme","text":""},{"location":"python/boucles_bornees_exercices/#exercice-31","title":"Exercice 3.1","text":"<p>Question 1</p> <p>S\u00e9lectionner, ordonner et indenter si n\u00e9cessaire certaines des instructions suivantes afin que le programme permette d'afficher la somme des entiers de 1 \u00e0 100.</p> <p>Question 2</p> <p>Saisir le programme et d\u00e9terminer la somme des entiers de 1 \u00e0 100.</p>"},{"location":"python/boucles_bornees_exercices/#exercice-32","title":"Exercice 3.2","text":"<p>Question</p> <p>\u00c9crire un programme qui permet d'afficher la somme des cubes des entiers de 1 \u00e0 100. Comparer le r\u00e9sultat affich\u00e9 au carr\u00e9 de\u00a0la somme des entiers de 1 \u00e0 100 (exercice pr\u00e9c\u00e9dent).\u00a0</p>"},{"location":"python/boucles_bornees_exercices/#4-affichage","title":"4. Affichage","text":"<p>Info</p> <ul> <li>L'instruction <code>print('a')</code> affiche le caract\u00e8re <code>a</code> et passe \u00e0 la ligne suivante.   </li> <li>L'instruction <code>print('a', end = ' ')</code> affiche le caract\u00e8re  'a' suivi d'un espace et ne passe pas \u00e0 la ligne.  </li> <li>L'instruction <code>print('a' * 5)</code> affiche la chaine de caract\u00e8res  'aaaaa'.  </li> </ul>"},{"location":"python/boucles_bornees_exercices/#exercice-41","title":"Exercice 4.1","text":"<p>Question</p> <p>\u00c9crire un programme qui permet d'afficher sur une ligne \"la table de multiplication de 8\", c'est \u00e0 dire la valeur des produits : \\(1 \\times 8, 2 \\times 8, \\ldots, 10 \\times 8\\).</p>"},{"location":"python/boucles_bornees_exercices/#exercice-42","title":"Exercice 4.2","text":"<p>Question</p> <p>\u00c9crire un programme qui permet d'afficher le motif ci-dessous. <pre><code>*\n**\n***\n****\n*****       \n</code></pre></p>"},{"location":"python/boucles_bornees_exercices/#exercice-43","title":"Exercice 4.3","text":"<p>Question</p> <p>\u00c9crire un programme qui permet d'afficher le motif ci-dessous. <pre><code>*****\n****\n***\n**\n*       \n</code></pre></p>"},{"location":"python/boucles_bornees_exercices/#5-boucles-imbriquees","title":"5. Boucles imbriqu\u00e9es","text":""},{"location":"python/boucles_bornees_exercices/#exercice-51","title":"Exercice 5.1","text":"<p>Question</p> <p>  Ordonner (et indenter si n\u00e9cessaire) les instructions suivantes afin que le programme permette de tracer le motif ci-contre.  </p>"},{"location":"python/boucles_bornees_exercices/#exercice-52","title":"Exercice 5.2","text":"<p>Question</p> <p>\u00c9crire un programme qui permet d'afficher sur dix lignes les \"tables\u00a0de multiplication\" des entiers de 1 \u00e0 10.</p>"},{"location":"python/boucles_bornees_exercices/#exercice-53","title":"Exercice 5.3","text":"<p>Question</p> <p> \u00c9crire un programme qui permet de r\u00e9aliser la figure suivante :</p> <p></p>"},{"location":"python/boucles_bornees_exercices/#exercice-54","title":"Exercice 5.4","text":"<p>Question</p> <p> \u00c9crire un programme qui permet de r\u00e9aliser chacune des figures suivantes :  </p> <p>Fig.1  Fig.2  Fig.3 </p>"},{"location":"python/boucles_bornees_exercices/#exercice-55","title":"Exercice 5.5","text":"<p>Question</p> <p> \u00c9crire un programme qui permet de r\u00e9aliser une grille de couleurs du type de celle ci-dessous :  </p> <p></p>"},{"location":"python/boucles_bornees_questions/","title":"Questions : boucles born\u00e9es","text":""},{"location":"python/boucles_bornees_questions/#1-affichage","title":"1. Affichage","text":"<p>Info</p> <ul> <li>L'instruction <code>print('a')</code> affiche le caract\u00e8re <code>a</code> et passe \u00e0 la ligne suivante.   </li> <li>L'instruction <code>print('a', end = ' ')</code> affiche le caract\u00e8re  'a' suivi d'un espace et ne passe pas \u00e0 la ligne.  </li> </ul>"},{"location":"python/boucles_bornees_questions/#question-11","title":"Question 1.1","text":"<p>Question</p> <p>Parmi les 4 boucles suivantes, lesquelles permettent d'afficher sur une seule ligne les entiers de 1 \u00e0 10, s\u00e9par\u00e9s par un espace et rang\u00e9s dans l'ordre croissant  ?</p> <pre><code>1 2 3 4 5 6 7 8 9 10\n</code></pre> <p>Boucle A : <pre><code>for i in range(10):\n    print(i)\n</code></pre></p> <p>Boucle B : <pre><code>for i in range(10):\n    print(i, end = ' ')\n</code></pre></p> <p>Boucle C : <pre><code>for i in range(1, 11):\n    print(i, end = ' ')\n</code></pre></p> <p>Boucle D : <pre><code>for i in range(10):\n    print(i + 1, end = ' ')\n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>Parmi les propositions, celles qui conviennent consistent :  - soit \u00e0 faire varier <code>i</code> de  1 \u00e0 10 (<code>range(1,11)</code>) et afficher <code>i</code>; - soit \u00e0 faire varier  <code>i</code> de  0 \u00e0 9 (<code>range(10)</code>) et afficher <code>i + 1</code>.</p>"},{"location":"python/boucles_bornees_questions/#question-12","title":"Question 1.2","text":"<p>Question</p> <p><code>mots = ['syst\u00e8me', 'syst\u00e9matique', 'syst\u00e9mique']</code></p> <p>Parmi les 4 boucles suivantes, lesquelles permettent d'afficher chaque mot de la liste <code>mots</code> ainsi que  son nombre de lettres ?</p> <pre><code>syst\u00e8me comporte 7 lettres\nsyst\u00e9matique comporte 12 lettres\nsyst\u00e9mique comporte 10 lettres\n</code></pre> <p>Boucle A : <pre><code>for i in range(len(mots)):\n    print(mots[i], \"comporte\", i, \"lettres\")\n</code></pre></p> <p>Boucle B : <pre><code>for mot in mots:\n    print(mot, \"comporte\", len(mot), \"lettres\")\n</code></pre></p> <p>Boucle C : <pre><code>for mot in mots:\n    print(mots[i], \"comporte\", len(mots[i]), \"lettres\")\n</code></pre></p> <p>Boucle D : <pre><code>for i in range(len(mots)):\n    print(mots[i], \"comporte\", len(mots[i]), \"lettres\")\n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>La solution B parcourt directement les \u00e9l\u00e9ments de la liste <code>mots</code> et affiche leur valeur et leur nombre de lettres, \u00e0 l'aide de la fonction <code>len()</code>.    La solution D parcourt la liste \u00e0 l'aide des indices des \u00e9l\u00e9ments, et affiche leur valeur et leur nombre de lettres.</p>"},{"location":"python/boucles_bornees_questions/#2-somme","title":"2. Somme","text":""},{"location":"python/boucles_bornees_questions/#question-21","title":"Question 2.1","text":"<p>Question</p> <p>On donne la liste de nombres suivante : <pre><code>nombres = [12, 34, 56, 78, 98, 76, 54, 32, 10]\n</code></pre> Parmi les 4 programmes suivants, lesquels permettent d'afficher la somme des valeurs de la liste <code>nombres</code> ?</p> <p>Programme A : <pre><code>for i in range(len(nombres)):\n    somme = 0\n    somme =  somme + nombres[i]\nprint(somme)\n</code></pre></p> <p>Programme B : <pre><code>somme = 0\nfor i in range(len(nombres)):\n    somme =  somme + nombres[i]\nprint(somme)\n</code></pre></p> <p>Programme C : <pre><code>somme = 0\nfor valeur in nombres:\n    somme =  somme + valeur\n    print(somme)   \n</code></pre></p> <p>Programme D : <pre><code>somme = 0\nfor valeur in nombres:\n    somme =  somme + valeur\nprint(somme)   \n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>La valeur de la variable <code>somme</code> est \u00e0 initialiser \u00e0 <code>0</code> avant le parcours de la liste de nombres.  La solution B parcourt la liste \u00e0 l'aide des indices des \u00e9l\u00e9ments, et ajoute chacun d'eux \u00e0 la  variable <code>somme</code>.     La solution D parcourt directement les \u00e9l\u00e9ments de la liste  et ajoute chacun d'eux \u00e0 la  variable <code>somme</code>.  Enfin, l'affichage de la somme n'est \u00e0 r\u00e9aliser qu'apr\u00e8s le parcours complet de la liste de valeurs.   </p>"},{"location":"python/boucles_bornees_questions/#question-22","title":"Question 2.2","text":"<p>Question</p> <p>Parmi les 4 programmes suivants, lequel permet d'afficher la somme des carr\u00e9s des entiers de 1 \u00e0 10 ?</p> <p>Programme A : <pre><code>for i in range(11):\n    print(i**2)\n</code></pre></p> <p>Programme B : <pre><code>somme = 0\nfor i in range(1, 10):\n    somme = somme + i**2\nprint(somme)\n</code></pre></p> <p>Programme C : <pre><code>somme = 0\nfor i in range(1, 11):\n    somme = somme + i**2\nprint(somme)\n</code></pre></p> <p>Programme D : <pre><code>somme = 0\nfor i in range(11):\n    somme = i**2\nprint(somme)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>La valeur de la variable <code>somme</code> est \u00e0 initialiser \u00e0 <code>0</code> avant le parcours de la liste de nombres.  La solution C parcourt la liste des entiers de 1 \u00e0 10 compris, et ajoute le carr\u00e9 de chacun d'eux \u00e0 la  variable <code>somme</code>.    Enfin, l'affichage de la somme n'est \u00e0 r\u00e9aliser qu'apr\u00e8s le parcours complet des dix entiers.</p>"},{"location":"python/boucles_bornees_questions/#3-calculs-en-boucle","title":"3. Calculs en boucle","text":""},{"location":"python/boucles_bornees_questions/#question-31","title":"Question 3.1","text":"<p>Question</p> <p>Quelle serait la valeur de la variable <code>total</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ?</p> <pre><code>total =  0\nfor i in range(4):\n    total = total + 3\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 6</li> <li> 12</li> <li> 14</li> <li> 30</li> </ul> <ul> <li> 6</li> <li> 12</li> <li> 14</li> <li> 30</li> </ul> <p><code>i</code> prend les valeurs 0 \u00e0 3, soit 4 valeurs.  Pour chaque valeur de <code>i</code>, la variable <code>total</code> est augment\u00e9e de la quantit\u00e9 3. Finalement, <code>total</code> vaut 0 + 4*3 = 12  </p>"},{"location":"python/boucles_bornees_questions/#question-32","title":"Question 3.2","text":"<p>Question</p> <p>Quelle serait la valeur de la variable <code>total</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ?</p> <pre><code>total =  0\nfor i in range(4):\n    total = total + i       \n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 6</li> <li> 12</li> <li> 14</li> <li> 30</li> </ul> <ul> <li> 6</li> <li> 12</li> <li> 14</li> <li> 30</li> </ul> <p><code>i</code> prend les valeurs 0 \u00e0 3. Pour chaque valeur de <code>i</code>, la variable <code>total</code> est augment\u00e9e de la valeur de <code>i</code>.   Finalement, <code>total</code> vaut 0 + 0 + 1 + 2 + 3 = 6.</p>"},{"location":"python/boucles_bornees_questions/#question-33","title":"Question 3.3","text":"<p>Question</p> <p>Quelle serait la valeur de la variable <code>total</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ?</p> <pre><code>total =  0\nfor i in range(4):\n    total = total + i**2\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 6</li> <li> 12</li> <li> 14</li> <li> 30</li> </ul> <ul> <li> 6</li> <li> 12</li> <li> 14</li> <li> 30</li> </ul> <p><code>i</code> prend les valeurs 0 \u00e0 3.  Pour chaque valeur de <code>i</code>, la variable <code>total</code> est augment\u00e9e de la valeur de i2.    Finalement, <code>total</code> vaut 0 + 1 + 4 + 9 = 14</p>"},{"location":"python/boucles_bornees_questions/#4-boucle-avec-une-condition","title":"4. Boucle avec une condition","text":""},{"location":"python/boucles_bornees_questions/#question-41","title":"Question 4.1","text":"<p>Question</p> <p>On donne la liste de nombres suivante : <pre><code>nombres = [12, 34, 56, 78, 90, 12, 34, 56, 78]\n</code></pre> Quelle serait la valeur de la variable <code>reponse</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ?  </p> <pre><code>cible =  34\nreponse = -1\nfor i in range(len(nombres)):\n    if nombres[i] == cible:\n        reponse = i\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> -1</li> <li> 1</li> <li> 2</li> <li> 6</li> </ul> <ul> <li> -1</li> <li> 1</li> <li> 2</li> <li> 6</li> </ul> <p>La valeur cible <code>34</code> est pr\u00e9sente deux fois dans le tableau, donc la condition <code>if nombres[i] == cible</code> est v\u00e9rifi\u00e9e deux fois. La variable <code>reponse</code> est donc affect\u00e9e deux fois. En fin de boucle, la valeur de la variable est celle de la derni\u00e8re affectation, donc l'indice de la derni\u00e8re occurrence de <code>34</code> dans <code>nombres</code>.</p>"},{"location":"python/boucles_bornees_questions/#question-42","title":"Question 4.2","text":"<p>Question</p> <p>On donne la liste de nombres suivante : <pre><code>nombres = [12, 34, 56, 78, 90, 12, 34, 56, 78]\n</code></pre> Quelle serait la valeur de la variable <code>reponse</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ?</p> <pre><code>cible =  34\nreponse = 0\nfor nombre in nombres:\n    if nombre == cible:\n        reponse = reponse + 1\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 0</li> <li> 1</li> <li> 2</li> <li> 6</li> </ul> <ul> <li> 0</li> <li> 1</li> <li> 2</li> <li> 6</li> </ul> <p>La valeur cible <code>34</code> est pr\u00e9sente deux fois dans le tableau, donc la condition <code>if nombres == cible</code> est v\u00e9rifi\u00e9e deux fois. La variable <code>reponse</code> est donc incr\u00e9ment\u00e9e deux fois. En fin de boucle, la valeur de la variable initialis\u00e9e \u00e0 0 est donc <code>2</code>.</p>"},{"location":"python/boucles_bornees_questions/#5-traces-en-boucle","title":"5. Trac\u00e9s en boucle","text":"<p>Les trac\u00e9s suivants ont \u00e9t\u00e9 r\u00e9alis\u00e9s dans un environnement Jupyter, \u00e0 l'aide du module Turtle disponible dans Basthon.  </p> <p>Pour ex\u00e9cuter les programmes suivants dans un notebook Jupyter de Basthon, le notebook doit contenir l'instruction   <code>from turtle import *</code> et chaque dessin doit se terminer avec l\u2019instruction <code>done()</code>.</p>"},{"location":"python/boucles_bornees_questions/#question-51","title":"Question 5.1","text":"<p>Question</p> <p>Parmi les boucles suivantes, laquelle permet de faire tracer \u00e0 la tortue la figure ci-dessous ?        </p> <p></p> <p>Boucle A : <pre><code>for i in range(6) :\n    forward(100)\n    left(60)\n</code></pre></p> <p>Boucle B : <pre><code>for i in range(7) :\n    forward(100)\n    left(60)\n</code></pre></p> <p>Boucle C : <pre><code>for i in range(6) :\n    forward(100)\n    left(120)\n</code></pre></p> <p>Boucle D : <pre><code>for i in range(7) :\n    forward(100)\n    left(120)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>La figure comporte 6 c\u00f4t\u00e9s et <code>range(6)</code> g\u00e9n\u00e8rera les entiers de 0 \u00e0 5, soit 6 entiers. Les angles \"internes\" de la figure sont de 120\u00b0, la tortue doit donc pivoter de 180 - 120 = 60\u00b0 entre 2 trac\u00e9s. La proposition A correspond au trac\u00e9 de l'hexagone. La B permet de le tracer \u00e9galement, mais en passant deux fois sur l'un des c\u00f4t\u00e9s.</p>"},{"location":"python/boucles_bornees_questions/#question-52","title":"Question 5.2","text":"<p>Question</p> <p>Parmi les boucles suivantes, laquelle permet de faire tracer \u00e0 la tortue la figure ci-dessous ?        </p> <p></p> <p>Boucle A : <pre><code>for i in range(5) :\n    forward(250)\n    right(72)\n</code></pre></p> <p>Boucle B : <pre><code>for i in range(5) :\n    forward(250)\n    right(144)\n</code></pre></p> <p>Boucle C : <pre><code>for i in range(6) :\n    forward(250)\n    left(36)\n</code></pre></p> <p>Boucle D : <pre><code>for i in range(6) :\n    forward(250)\n    left(72)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>La figure comporte 5 c\u00f4t\u00e9s et <code>range(5)</code> g\u00e9n\u00e8rera les entiers de 0 \u00e0 4, soit 5 entiers. Les angles \"internes\" des pointes de l'\u00e9toile sont de 36\u00b0, la tortue doit donc pivoter de 180 - 36 = 144\u00b0 entre 2 trac\u00e9s.</p>"},{"location":"python/boucles_bornees_questions/#6-boucles-imbriquees","title":"6. Boucles imbriqu\u00e9es","text":""},{"location":"python/boucles_bornees_questions/#question-61","title":"Question 6.1","text":"<p>Question</p> <p>Quelle serait la valeur de la variable <code>total</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ?</p> <pre><code>total =  0\nfor i in range(4):\n    for j in range(3):\n        total = total + 1\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 10</li> <li> 12</li> <li> 14</li> <li> 20</li> </ul> <ul> <li> 10</li> <li> 12</li> <li> 14</li> <li> 20</li> </ul> <p><code>i</code> prend les valeurs 0 \u00e0 3, soit 4 valeurs.  Pour chaque valeur de <code>i</code>:     -  <code>j</code> prend les valeurs 0 \u00e0 2 soit 3 valeurs.     -  La variable <code>total</code> est augment\u00e9e 3 fois de la quantit\u00e9 1   </p> <p>Finalement, <code>total</code> vaut 0 + 4*3 = 12</p>"},{"location":"python/boucles_bornees_questions/#question-62","title":"Question 6.2","text":"<p>Question</p> <p>Quelle sera la valeur de la variable <code>total</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ?</p> <pre><code>total =  0\nfor i in range(4):\n    for j in range(i):\n        total = total + i\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 10</li> <li> 12</li> <li> 14</li> <li> 20</li> </ul> <ul> <li> 10</li> <li> 12</li> <li> 14</li> <li> 20</li> </ul> <p><code>i</code> prend les valeurs 0 \u00e0 3.</p> <p>Quand <code>i = 0</code>, <code>j</code> ne prend aucune valeur et <code>total</code> n'est pas augment\u00e9.      </p> <p>Quand <code>i = 1</code>, <code>j</code> prend la valeur 0 et <code>total</code> est augment\u00e9 la valeur de <code>i</code>, soit de 1.  </p> <p>Quand <code>i = 2</code>, <code>j</code> prend les valeurs 0 puis 1, et <code>total</code> est augment\u00e9 2 fois de la valeur de <code>i</code>, soit de 2*2 = 4.</p> <p>Quand <code>i = 3</code>, <code>j</code> prend les valeurs 0, 1 et 2, et <code>total</code> est augment\u00e9 3 fois de la valeur de <code>i</code>, soit de 3*3 = 9.  </p> <p>Finalement, <code>total</code> vaut 0 + 1 + 2*2 + 3*3 = 14.</p> valeurs ajout\u00e9es \u00e0 <code>total</code> j = 0 j = 1 j = 2\u00a0 i = 0 \u00a0X\u00a0 \u00a0X\u00a0 \u00a0X\u00a0 i = 1 \u00a01\u00a0 \u00a0X\u00a0 \u00a0X\u00a0 i = 2 \u00a02\u00a0 \u00a02\u00a0 \u00a0\u00a0X\u00a0 i = 3 \u00a03\u00a0 \u00a03\u00a0 \u00a03"},{"location":"python/boucles_bornees_questions/#question-63","title":"Question 6.3","text":"<p>Question</p> <p>Quelle sera la valeur de la variable <code>total</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ?</p> <pre><code>total =  0\nfor i in range(5):\n    for j in range(i):\n        total = total + j\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 10</li> <li> 12</li> <li> 14</li> <li> 20</li> </ul> <ul> <li> 10</li> <li> 12</li> <li> 14</li> <li> 20</li> </ul> <p><code>i</code> prend les valeurs 0 \u00e0 4.  </p> <p>Quand <code>i = 0</code>, <code>j</code> ne prend aucune valeur et <code>total</code> n'est pas augment\u00e9.    </p> <p>Quand <code>i = 1</code>, <code>j</code> prend la valeur 0 et <code>total</code> est augment\u00e9 de 0.</p> <p>Quand <code>i = 2</code>,  <code>j</code> prend les valeurs 0 puis 1, et <code>total</code> est augment\u00e9 \u00e0 chaque fois de la valeur de <code>j</code>, soit de 0 + 1 = 1.</p> <p>Quand <code>i = 3</code>, <code>j</code> prend les valeurs 0, 1 et 2, et <code>total</code> est augment\u00e9 \u00e0 chaque fois de la valeur de <code>j</code>, soit de 0 + 1 + 2 = 3.</p> <p>Quand <code>i = 4</code>,<code>j</code> prend les valeurs 0, 1, 2 et 3, et <code>total</code> est augment\u00e9 \u00e0 chaque fois de la valeur de <code>j</code>, soit de 0 + 1 + 2 + 3 = 6   </p> <p>Finalement, <code>total</code> vaut 0 + 1 + 3 + 6 = 10</p> valeurs ajout\u00e9es \u00e0 <code>total</code> j = 0 j = 1 j = 2\u00a0 j = 3 i = 0 \u00a0X\u00a0 \u00a0X\u00a0 \u00a0X\u00a0 \u00a0X\u00a0 i = 1 \u00a00\u00a0 \u00a0X\u00a0 \u00a0X\u00a0 \u00a0X\u00a0 i = 2 \u00a00\u00a0 \u00a01\u00a0 \u00a0X\u00a0 \u00a0X\u00a0 i = 3 \u00a00\u00a0 \u00a01\u00a0 \u00a02\u00a0 \u00a0X\u00a0 i = 4 \u00a00\u00a0 \u00a01\u00a0 \u00a02\u00a0 \u00a03"},{"location":"python/boucles_bornees_questions/#question-64","title":"Question 6.4","text":"<p>Question</p> <p>Parmi les programmes suivants, lequel permet de faire tracer \u00e0 la tortue la figure ci-dessous ?  </p> <p></p> <p>Programme A : <pre><code>for nb_carre in range(4) :\n    for nb_cote in range(3) :\n        forward(100)\n        left(90)\n    right(120)\n</code></pre></p> <p>Programme B : <pre><code>for nb_carre in range(3) :\n    for nb_cote in range(4) :\n        forward(100)\n        left(90)\n    left(30)\n</code></pre></p> <p>Programme C : <pre><code>for nb_carre in range(3) :\n    for nb_cote in range(4) :\n        forward(100)\n        left(90)\n    left(120)\n</code></pre></p> <p>Programme D : <pre><code>for nb_carre in range(3) :\n    for nb_cote in range(4) :\n        forward(100)\n        left(120)\n    left(90)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>Il y a 3 carr\u00e9s \u00e0 tracer (<code>range(3)</code>) et chaque carr\u00e9 poss\u00e8de 4 c\u00f4t\u00e9s (<code>range(4)</code>). Les angles du carr\u00e9 font 90\u00b0 et chaque carr\u00e9 est l'image d'un autre par une rotation d'un tiers d'angle plein (360/3 = 120\u00b0). Le sens de cette rotation importe peu : <code>right(120)</code> aurait aussi convenu.</p>"},{"location":"python/boucles_bornees_questions/#question-65","title":"Question 6.5","text":"<p>Question</p> <p>Parmi les programmes suivants, lequel permet de faire tracer \u00e0 la tortue la figure ci-dessous ?  </p> <p></p> <p>Programme A : <pre><code>for nb_poly in range(6) :\n    for nb_cote in range(3) :\n        forward(80)\n        left(120)\n    left(60)\n</code></pre></p> <p>Programme B : <pre><code>for nb_poly in range(3) :\n    for nb_cote in range(6) :\n        forward(80)\n        left(120)\n    left(60)\n</code></pre></p> <p>Programme C : <pre><code>for nb_poly in range(6) :\n    for nb_cote in range(3) :\n        forward(80)\n        left(60)\n    left(120)\n</code></pre></p> <p>Programme D : <pre><code>for nb_poly in range(3) :\n    for nb_cote in range(6) :\n        forward(80)\n        left(60)\n    left(120)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>Il y a 3 hexagones r\u00e9guliers \u00e0 tracer (<code>range(3)</code>) et chaque hexagone poss\u00e8de 6 c\u00f4t\u00e9s (<code>range(6)</code>). Les angles de l'hexagone font 120\u00b0 (donc la tortue doit pivoter de 180 - 120 = 60\u00b0) et chaque hexagone est l'image d'un autre par une rotation d'un tiers d'angle plein (360/3 = 120\u00b0). Le sens de cette rotation importe peu : <code>right(120)</code> aurait aussi convenu.</p>"},{"location":"python/boucles_non_bornees/","title":"Boucles non born\u00e9es","text":""},{"location":"python/boucles_non_bornees/#linstruction-while","title":"L'instruction while","text":"<p>La boucle non born\u00e9e (ou boucle <code>while</code>) permet de r\u00e9p\u00e9ter un bloc d'instructions tant qu'une expression (bool\u00e9enne) est vraie.</p> <p>La syntaxe de la boucle <code>while</code> est :</p> <p><pre><code>while expression:\n    bloc d_instructions \u00e0 r\u00e9p\u00e9ter\n</code></pre> o\u00f9 <code>expression</code> a pour valeur <code>True</code> ou <code>False</code>.</p> <p>Le bloc d'instructions est \u00e0 indenter.</p> <p>On utilise g\u00e9n\u00e9ralement cette boucle lorsqu'on ne connait pas le nombre d'it\u00e9rations au pr\u00e9alable.</p> <p>Exemple :</p> <p>La boucle suivante permet d'afficher la plus petite puissance de 2 sup\u00e9rieure \u00e0 <code>nombre</code>. On initialise la variable <code>valeur</code> \u00e0 1 (c'est \u00e0 dire \\(2^0\\)), et tant qu'elle reste inf\u00e9rieure \u00e0 <code>nombre</code> on la multiplie par 2. D\u00e8s que l'une des valeurs obtenues est sup\u00e9rieure ou \u00e9gale \u00e0 <code>nombre</code> on sort de la boucle et on l'affiche. <pre><code>nombre = 999\nvaleur = 1\nwhile valeur &lt; nombre:\n    valeur = valeur * 2\nprint(valeur)\n</code></pre> <pre><code>1024\n</code></pre> Si l'on souhaite savoir de quelle puissance de 2 il s'agit, on peut ajouter un compteur qu'on peut appeler <code>puissance</code> : il s'agit d'une variable initialis\u00e9e \u00e0 0 (car <code>valeur</code> est initialis\u00e9e \u00e0 \\(2^0\\)) et incr\u00e9ment\u00e9e \u00e0 chaque fois que <code>valeur</code> est multipli\u00e9e par 2. <pre><code>nombre = 999\nvaleur = 1\npuissance = 0\nwhile valeur &lt; nombre:\n  valeur = valeur * 2\n  puissance = puissance + 1\nprint(puissance, valeur)\n</code></pre> <pre><code>10 1024\n</code></pre></p>"},{"location":"python/boucles_non_bornees/#boucle-infinie","title":"Boucle infinie","text":"<p>Les boucles <code>while</code> pr\u00e9sentent un risque de boucle infinie. Pour que la boucle prenne fin, il faut s'assurer que l'expression qui conditionne l'ex\u00e9cution du corps de la boucle prendra la valeur <code>False</code>, \u00e9ventuellement apr\u00e8s de tr\u00e8s nombreuses \u00e9tapes. Il faut donc s\u2019assurer que la valeur de cette expression est bien modifi\u00e9e par les instructions du corps de la boucle (ou par un \u00e9v\u00e9nement).</p> <p>Exemple :</p> <p>La boucle suivante ne se termine jamais : la variable <code>valeur</code> n'est jamais modifi\u00e9e dans le corps de la boucle. Seule une action de l\u2019utilisateur peut interrompre l'ex\u00e9cution du programme.</p> <pre><code>compteur = 0\nvaleur = 0\nwhile valeur == 0:\n    compteur = compteur + 1\n    print(compteur)\n</code></pre> <p>\u00c0 l'inverse, si l'expression qui conditionne l'ex\u00e9cution du corps de la boucle a pour valeur <code>False</code> d\u00e8s le d\u00e9part, le corps de la boucle n\u2019est jamais ex\u00e9cut\u00e9.     </p>"},{"location":"python/boucles_non_bornees_exercices/","title":"Exercices : boucles non born\u00e9es","text":""},{"location":"python/boucles_non_bornees_exercices/#1-aleatoire","title":"1. Al\u00e9atoire","text":"<p>Info</p> <p>L'instruction <code>randint(1,6)</code> g\u00e9n\u00e8re un entier al\u00e9atoire entre 1 et 6 compris. Cette fonction fait partie du module <code>random</code>. Pour pouvoir l'utiliser on peut \u00e9crire en d\u00e9but de programme : <code>from random import randint</code>.  </p>"},{"location":"python/boucles_non_bornees_exercices/#exercice-11","title":"Exercice 1.1","text":"<p>Question</p> <p>On simule le tirage al\u00e9atoire de deux d\u00e9s, jusqu'\u00e0 ce qu'on obtienne un double (deux 1, deux 2, etc.). \u00c9crire un programme qui permet d'afficher le nombre de coups qui ont \u00e9t\u00e9 n\u00e9cessaires pour obtenir le premier double. (Un premier double au 3e lancer doit faire afficher la valeur 3).</p>"},{"location":"python/boucles_non_bornees_exercices/#exercice-12","title":"Exercice 1.2","text":"<p>Question</p> <p>On simule le tirage al\u00e9atoire de deux d\u00e9s, jusqu'\u00e0 ce que la somme des deux d\u00e9s soit \u00e9gale \u00e0 7. \u00c9crire un programme qui permet d'afficher le nombre de coups qui ont \u00e9t\u00e9 n\u00e9cessaires pour obtenir une somme des deux d\u00e9s \u00e9gale \u00e0 7.</p>"},{"location":"python/boucles_non_bornees_exercices/#2-calculs-en-boucle","title":"2. Calculs en boucle","text":""},{"location":"python/boucles_non_bornees_exercices/#exercice-21","title":"Exercice 2.1","text":"<p>Question</p> <p>Quelle sera la valeur de la variable <code>resultat</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ? Comment d\u00e9crire ce que r\u00e9alise ce programme ? <pre><code>resultat = 1\nwhile resultat &lt; 1000 :\n    resultat = resultat * 2\n</code></pre></p>"},{"location":"python/boucles_non_bornees_exercices/#exercice-22","title":"Exercice 2.2","text":"<p>Question</p> <p>\u00c9crire un programme qui permet de d\u00e9terminer la plus petite puissance de 5 sup\u00e9rieure \u00e0 1000. Le programme ne devra pas utiliser l'op\u00e9rateur python <code>**</code>.</p>"},{"location":"python/boucles_non_bornees_exercices/#exercice-23","title":"Exercice 2.3","text":"<p>Question</p> <p>Un capital de 1000 euros est d\u00e9pos\u00e9 sur un compte \u00e0 int\u00e9r\u00eats compos\u00e9s \u00e0 4 % : chaque ann\u00e9e le montant disponible sur le compte est augment\u00e9 de 4 %.\u00a0 Si l'on n'effectue ni d\u00e9p\u00f4t ni retrait, combien d'ann\u00e9es faut-il pour que le montant disponible atteigne (ou d\u00e9passe) 2000 euros ? \u00c9crire un programme en Python pour r\u00e9soudre ce probl\u00e8me.</p>"},{"location":"python/boucles_non_bornees_exercices/#3-traces-en-boucle","title":"3. Trac\u00e9s en boucle","text":"<p>Module turtle</p> <p>Ces exercices utilisent le module <code>turtle</code>. Ils sont pr\u00e9c\u00e9d\u00e9s de l'ic\u00f4ne .  </p> <p>Pour ex\u00e9cuter dans un notebook Jupyter de Basthon un programme utilisant des instructions du module <code>turtle</code>, le notebook doit contenir l'instruction   <code>from turtle import *</code> et le programme doit se terminer avec l\u2019instruction <code>done()</code>.</p>"},{"location":"python/boucles_non_bornees_exercices/#exercice-31","title":"Exercice 3.1","text":"<p>Question</p> <p> Le programme suivant s'arr\u00eate-t-il lorsqu'on lance son ex\u00e9cution ? Pourquoi ?</p> <pre><code>longueur = 150\nwhile longueur &gt; 0 :\n    forward(longueur)\n    left(89)\n    longueur = longueur - 2\n</code></pre>"},{"location":"python/boucles_non_bornees_exercices/#exercice-32","title":"Exercice 3.2","text":"<p>Question</p> <p> Le programme suivant s'arr\u00eate-t-il lorsqu'on lance son ex\u00e9cution ? Pourquoi ?</p> <pre><code>longueur = 150\nwhile longueur &gt; 0 :\n    forward(longueur)\n    left(89)\n    longueur = longueur / 2\n</code></pre>"},{"location":"python/boucles_non_bornees_questions/","title":"Questions : boucles non born\u00e9es","text":""},{"location":"python/boucles_non_bornees_questions/#1-aleatoire","title":"1. Al\u00e9atoire","text":"<p>Info</p> <p>L'instruction <code>randint(1,6)</code> g\u00e9n\u00e8re un entier al\u00e9atoire entre 1 et 6 compris. Cette fonction fait partie du module <code>random</code>. Pour pouvoir l'utiliser on peut \u00e9crire en d\u00e9but de programme : <code>from random import randint</code>.</p>"},{"location":"python/boucles_non_bornees_questions/#question-11","title":"Question 1.1","text":"<p>Question</p> <p>On simule le tirage al\u00e9atoire d'un d\u00e9, jusqu'\u00e0 ce qu'on obtienne un 6. Parmi les 4 programmes suivants, lequel permet d'afficher le nombre de coups qui ont \u00e9t\u00e9 n\u00e9cessaires ? (un premier 6 au 3e lancer doit faire afficher la valeur 3).</p> <p>Programme A : <pre><code>from random import randint\nde = randint(1,6)\ncompteur = 1\nwhile de != 6:\n    de = randint(1,6)\n    compteur = compteur + 1\nprint(compteur)\n</code></pre></p> <p>Programme B : <pre><code>from random import randint\nde = randint(1,6)\ncompteur = 0\nwhile de != 6:\n    de = randint(1,6)\n    compteur = compteur + 1\nprint(compteur)\n</code></pre></p> <p>Programme C : <pre><code>from random import randint\nde = randint(1,6)\ncompteur = 1\nwhile de == 6:\n    de = randint(1,6)\n    compteur = compteur + 1\nprint(compteur - 1)\n</code></pre></p> <p>Programme D : <pre><code>from random import randint\nde = 0\ncompteur = 0\nwhile de != 6:\n    de = randint(1,6)\n    compteur = compteur + 1\nprint(compteur + 1)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>Le premier lancer peut donner lieu \u00e0 un 6 : le compteur doit \u00eatre initialis\u00e9 \u00e0 1 d\u00e8s qu'un lancer est simul\u00e9. Ensuite il faut incr\u00e9menter1 le compteur \u00e0 chaque fois qu'un lancer est simul\u00e9. De cette fa\u00e7on, compteur contient exactement le nombre de lancers jusqu'au premier 6.</p>"},{"location":"python/boucles_non_bornees_questions/#question-12","title":"Question 1.2","text":"<p>Question</p> <p>Une grenouille monte l'escalier de 17 marches qui m\u00e8ne \u00e0 la terrasse. A chacun de ses bonds, elle grimpe al\u00e9atoirement d'une ou de deux marches. On simule son trajet \u00e0 l'aide d'un programme. Parmi les 4 programmes suivants, lequel permet d'afficher le nombre de bonds qui ont \u00e9t\u00e9 n\u00e9cessaires pour atteindre la terrasse ?</p> <p>Programme A : <pre><code>from random import randint\nmarche = 0\ncompteur = 1\nwhile marche &lt; 17:\n    bond = randint(1, 2)\n    compteur = compteur + 1\n    marche = marche + bond\nprint(compteur)\n</code></pre></p> <p>Programme B : <pre><code>from random import randint\nmarche = 0\ncompteur = 0\nwhile marche &lt; 17:\n    bond = randint(1, 2)\n    compteur = compteur + 1\n    marche = marche + bond\nprint(compteur)\n</code></pre></p> <p>Programme C : <pre><code>from random import randint\nmarche = 0\ncompteur = 0\nwhile marche &lt; 17:\n    bond = randint(1, 2)\n    compteur = compteur + bond\n    marche = marche + bond\nprint(compteur)\n</code></pre></p> <p>Programme D : <pre><code>from random import randint\nmarche = 0\ncompteur = 0\nwhile marche != 17:\n    bond = randint(1, 2)\n    compteur = compteur + 1\n    marche = marche + bond\nprint(compteur)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li>Le programme A initialise la variable <code>compteur</code> \u00e0 1 alors que <code>marche</code> est initialis\u00e9 \u00e0 0.  </li> <li>Le programme C n'incr\u00e9mente 1 pas correctement <code>compteur</code> : chaque bond ne compte que pour 1.  </li> <li>Le programme D teste si on atteint exactement la 17e marche, or notre simulation pourrait induire un bond de 2 marches \u00e0 partir de la 16e. La variable <code>marche</code> pourrait ne jamais valoir 17 et le programme ne s'arr\u00eaterait pas.  </li> <li>Seul le programme B convient.</li> </ul>"},{"location":"python/boucles_non_bornees_questions/#2-accumulation","title":"2. Accumulation","text":""},{"location":"python/boucles_non_bornees_questions/#question-21","title":"Question 2.1","text":"<p>Question</p> <p>On cherche \u00e0 d\u00e9terminer le plus petit entier \\(n\\) tel que la somme \\(1 + 2 + 3 + \\cdots +n\\) soit sup\u00e9rieure \u00e0 1000. Parmi les 4 programmes suivants, lequel permet d'afficher la valeur de \\(n\\) cherch\u00e9e ?</p> <p>Programme A : <pre><code>somme = 0\nn = 0\nwhile somme &gt; 1000:\n    n = n + 1\n    somme =  somme + n\nprint(n)\n</code></pre></p> <p>Programme B : <pre><code>somme = 0\nn = 0\nwhile somme &gt;= 1000:\n    somme =  somme + n\n    n = n + 1\nprint(n)\n</code></pre></p> <p>Programme C : <pre><code>somme = 0\nn = 0\nwhile somme &lt; 1000:\n    n = n + 1\n    somme =  somme + n\nprint(n)\n</code></pre></p> <p>Programme D : <pre><code>somme = 0\nn = 0\nwhile somme &lt; 1000:\n    somme =  somme + n\n    n = n + 1\nprint(n)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li>Les corps de boucles des programmes A et B ne sont jamais ex\u00e9cut\u00e9s car les expressions <code>somme &gt; 1000</code> et <code>somme &gt;= 1000</code> sont \u00e9valu\u00e9es \u00e0 <code>False</code> puisque <code>somme</code>vaut 0 lors de l'\u00e9valuation.  </li> <li>La seule diff\u00e9rence entre les programmes C et D est l'ordre des instructions <code>somme =  somme + n</code> et <code>n = n + 1</code>. Dans le programme D, <code>n</code> est incr\u00e9ment\u00e9 1 apr\u00e8s avoir \u00e9t\u00e9 ajout\u00e9 \u00e0 <code>somme</code> : lorsque la valeur de <code>somme</code> sera sup\u00e9rieure ou \u00e9gale \u00e0 1000, mettant fin  \u00e0 la boucle, la valeur de <code>n</code> ne sera pas la derni\u00e8re ajout\u00e9e \u00e0 <code>somme</code>. L'instruction <code>print(n)</code> n'affichera pas la bonne valeur. Dans le programme C, <code>n</code> est incr\u00e9ment\u00e9 avant d'\u00eatre ajout\u00e9 \u00e0 <code>somme</code>, et le probl\u00e8me pr\u00e9c\u00e9dent ne se pose plus.</li> </ul>"},{"location":"python/boucles_non_bornees_questions/#question-22","title":"Question 2.2","text":"<p>Question</p> <p>Apr\u00e8s ex\u00e9cution du programme suivant, quelle serait la valeur affich\u00e9e ?</p> <pre><code>i = 1\nwhile i &lt;= 100:\n    i = 2 * i\nprint(i)\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 1</li> <li> 64</li> <li> 100</li> <li> 128</li> </ul> <ul> <li> 1</li> <li> 64</li> <li> 100</li> <li> 128</li> </ul> <p>La variable <code>i</code> prend successivement les valeurs 1, 2, 4, 8, 16, 32, 64. Pour toutes ces valeurs, l'expression <code>i &lt;= 100</code> est \u00e9valu\u00e9e \u00e0 <code>True</code> et le corps de la boucle est ex\u00e9cut\u00e9. Lors de la derni\u00e8re ex\u00e9cution <code>i</code> prend la valeur 128, ce qui fait sortir de la boucle.</p>"},{"location":"python/boucles_non_bornees_questions/#3-entrer-dans-la-boucle-et-en-sortir","title":"3. Entrer dans la boucle et en sortir","text":""},{"location":"python/boucles_non_bornees_questions/#question-31","title":"Question 3.1","text":"<p>Question</p> <p>Voici un programme comportant une boucle non born\u00e9e. Quelle est la valeur affich\u00e9e \u00e0 l'issue de l'ex\u00e9cution de ce programme ?</p> <pre><code>a = 5\nwhile a &lt; 5:\n    a = a + 2\nprint(a)\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 5</li> <li> 7</li> <li> 10</li> <li> Aucune : la boucle ne termine pas</li> </ul> <ul> <li> 5</li> <li> 7</li> <li> 10</li> <li> Aucune : la boucle ne termine pas</li> </ul> <p>L'expression <code>a &lt; 5</code> est \u00e9valu\u00e9e \u00e0 <code>False</code> lorque <code>a</code> vaut 5 : le corps de la boucle n'est jamais ex\u00e9cut\u00e9.</p>"},{"location":"python/boucles_non_bornees_questions/#question-32","title":"Question 3.2","text":"<p>Question</p> <p>Voici un programme comportant une boucle non born\u00e9e. Quelle est la valeur affich\u00e9e \u00e0 l'issue de l'ex\u00e9cution de ce programme ?</p> <pre><code>a = 5\nwhile a &lt; 10:\n    a = a + 2\nprint(a)\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 5</li> <li> 9</li> <li> 11</li> <li> Aucune : la boucle ne termine pas</li> </ul> <ul> <li> 5</li> <li> 9</li> <li> 11</li> <li> Aucune : la boucle ne termine pas</li> </ul> <p>La variable <code>a</code> prend successivement les valeurs 5, 7 et 9. Pour toutes ces valeurs, l'expression <code>a &lt; 10</code> est \u00e9valu\u00e9e \u00e0 <code>True</code> et le corps de la boucle est ex\u00e9cut\u00e9. Lors de la derni\u00e8re ex\u00e9cution <code>a</code> prend la valeur 11, ce qui fait sortir de la boucle.</p>"},{"location":"python/boucles_non_bornees_questions/#question-33","title":"Question 3.3","text":"<p>Question</p> <p>Voici un programme comportant une boucle non born\u00e9e. Quelle est la valeur affich\u00e9e \u00e0 l'issue de l'ex\u00e9cution de ce programme ?</p> <pre><code>a = 5\nwhile a &lt; 10:\n    a = a - 2\nprint(a)\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 5</li> <li> 3</li> <li> 1</li> <li> Aucune : la boucle ne termine pas</li> </ul> <ul> <li> 5</li> <li> 3</li> <li> 1</li> <li> Aucune : la boucle ne termine pas</li> </ul> <p>La variable <code>a</code> prend les valeurs 5, 3 ,1, -1, -3, etc. Pour toutes les valeurs, l'expression <code>a &lt; 10</code> est \u00e9valu\u00e9e \u00e0 <code>True</code> et le corps de la boucle est ex\u00e9cut\u00e9. Les valeurs de <code>a</code> sont d\u00e9croissantes, et aucune valeur prise par <code>a</code> ne permettra de sortir de la boucle.</p> <ol> <li> <p>incr\u00e9menter : augmenter d'une unit\u00e9\u00a0\u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"python/erreurs/","title":"Messages d'erreurs","text":"<p>R\u00e9ussir \u00e0 trouver les erreurs contenues dans un programme est une comp\u00e9tence essentielle pour programmer. Python signale certaines erreurs en indiquant leur position estim\u00e9e dans le programme et leur type.</p> <p>Voici quelques types d'erreurs, usuels dans des programmes de d\u00e9butants,  qu'il est conseill\u00e9 de conna\u00eetre, pour apprendre \u00e0 les rep\u00e9rer rapidement, pour interpr\u00e9ter correctement les messages d'erreurs affich\u00e9s et pour en proposer une correction.</p>"},{"location":"python/erreurs/#1-erreurs-de-syntaxe-syntaxerror","title":"1. Erreurs de syntaxe : SyntaxError","text":"<p>Python ne peut ex\u00e9cuter un programme que si sa syntaxe est correcte. Dans le cas contraire, le processus s\u2019arr\u00eate et adresse un message d\u2019erreur.  Le terme syntaxe se r\u00e9f\u00e8re aux r\u00e8gles que les auteurs du langage ont \u00e9tablies pour la structure du programme.</p>"},{"location":"python/erreurs/#11-invalid-syntax","title":"1.1 Invalid syntax","text":"<p>Les erreurs de syntaxe ont de nombreuses origines, et la liste suivante est loin d'\u00eatre exhaustive :</p> <ul> <li>il manque une ou plusieurs parenth\u00e8ses \u00e0 ligne pr\u00e9c\u00e9dant celle signal\u00e9e par le message d'erreur,</li> <li>il manque le double point <code>:</code> qui doit appara\u00eetre \u00e0 la fin des lignes contenant des instructions compos\u00e9es : <code>if</code>, <code>else</code>, <code>while</code>, <code>for</code>, ...</li> <li>l'op\u00e9rateur <code>=</code> a \u00e9t\u00e9  utilis\u00e9 pour tester une \u00e9galit\u00e9,  au lieu de <code>==</code>,</li> <li>une instruction tente d'affecter une valeur \u00e0 une variable dont l'identifiant est un mot r\u00e9serv\u00e9 du langage Python.</li> </ul> Exemple <p><pre><code>for i in range(10)\n    print(i)\n</code></pre> <pre><code>    for i in range(10)\n                      ^\nSyntaxError: invalid syntax\n</code></pre> Le curseur d\u00e9signe ici l'absence du double point <code>:</code> attendu.</p>"},{"location":"python/erreurs/#12-eol-while-scanning-string-literal","title":"1.2. EOL while scanning string literal","text":"<p>EOL signifie end of line : le message d'erreur indique qu'une cha\u00eene de caract\u00e8res est mal d\u00e9limit\u00e9e, il manque probablement des guillemets.  </p> Exemple <p><pre><code>\"Hello World!\n</code></pre> <pre><code>\"Hello World!\n             ^\nSyntaxError: EOL while scanning string literal\n</code></pre></p>"},{"location":"python/erreurs/#13-return-outside-function","title":"1.3 'return' outside function","text":"<p>Le mot-cl\u00e9 <code>return</code> est situ\u00e9 en dehors de la fonction : une indentation appropri\u00e9e permet souvent de corriger l'erreur.</p> Exemple <p><pre><code>def f(x):\n    y = 2 * x\nreturn y\n</code></pre> <pre><code>SyntaxError: 'return' outside function\n</code></pre></p>"},{"location":"python/erreurs/#14-cannot-assign-to-function-call","title":"1.4 cannot assign to function call","text":"<p>Le programme tente d'affecter une valeur \u00e0 ce qui semble \u00eatre l'appel d'une fonction. L'erreur est souvent due \u00e0 l'usage inappropri\u00e9 de parenth\u00e8ses, par exemple \u00e0 la place de crochets.</p> Exemple <p><pre><code>tableau = [1, 2]\ntableau(1) = 3\n</code></pre> <pre><code>SyntaxError: cannot assign to function call\n</code></pre></p>"},{"location":"python/erreurs/#2-erreurs-dindentation-indentationerror","title":"2. Erreurs d'indentation : IndentationError","text":"<p>Ce type d'erreur est explicite : l'indentation est incorrecte. Trois messages permettent de distinguer si un bloc de code a \u00e9t\u00e9 trop, trop peu ou mal indent\u00e9.</p>"},{"location":"python/erreurs/#21-expected-an-indented-block","title":"2.1 Expected an indented block","text":"<p>Un bloc n'est pas indent\u00e9, alors qu'il devrait l'\u00eatre.</p> Exemple <p><pre><code>for i in range(4):\nprint(i)\n</code></pre> <pre><code>print(i)\n^\nIndentationError: expected an indented block\n</code></pre></p>"},{"location":"python/erreurs/#22-unexpected-indent","title":"2.2 Unexpected indent","text":"<p>Un bloc est indent\u00e9, alors qu'il ne devrait pas l'\u00eatre.</p> Exemple <p><pre><code>for i in range(4):\n    print(i)\n        print(2 * i)\n</code></pre> <pre><code>print(2 * i)\n^\nIndentationError: unexpected indent\n</code></pre></p>"},{"location":"python/erreurs/#23-unindent-does-not-match-any-outer-indentation-level","title":"2.3 Unindent does not match any outer indentation level","text":"<p>Le niveau d'indentation d'un bloc ne correspond pas aux autres niveaux d'indentation.</p> Exemple <p><pre><code>for i in range(4):\n    print(i)\n  print(2 * i)\n</code></pre> <pre><code>print(2 * i)\n           ^\nIndentationError: unindent does not match any outer indentation level\n</code></pre></p>"},{"location":"python/erreurs/#3-erreur-de-type-typeerror","title":"3. Erreur de type : TypeError","text":""},{"location":"python/erreurs/#31-takes-positional-arguments-but-was-given","title":"3.1 ...() takes ... positional arguments but ... was given","text":"<p>L'appel \u00e0 une fonction a \u00e9t\u00e9 r\u00e9alis\u00e9 avec un nombre d\u2019arguments qui ne correspond pas \u00e0 ce qui est attendu.</p> Exemple <p><pre><code>def somme(a, b):\n    return a + b\n\nsomme(23, 34, 45)\n</code></pre> <pre><code>TypeError: somme() takes 2 positional arguments but 3 were given\n</code></pre></p>"},{"location":"python/erreurs/#32-unsupported-operand-types-for-int-and-str","title":"3.2  unsupported operand type(s) for +: 'int' and 'str'","text":"<p>ou can only concatenate str (not \"int\") to str</p> <p>Les types des op\u00e9randes et des op\u00e9rateurs ne sont pas compatibles. Par exemple, avec un op\u00e9rateur <code>+</code>, l'op\u00e9ration r\u00e9alis\u00e9e est une addition si les deux op\u00e9randes sont des nombres, ou une concat\u00e9nation si les op\u00e9randes sont des chaines de caract\u00e8res. Mais une <code>TypeError</code> est d\u00e9clench\u00e9e si les deux op\u00e9randes ne sont pas de m\u00eame type.</p> Exemples <p><pre><code>3 + \"2\"\n</code></pre> <pre><code>TypeError: unsupported operand type(s) for +: 'int' and 'str'\n</code></pre></p> <p><pre><code>\"3\" + 2\n</code></pre> <pre><code>TypeError: can only concatenate str (not \"int\") to str\n</code></pre></p>"},{"location":"python/erreurs/#4-erreur-de-nom-nameerror","title":"4. Erreur de nom  : NameError","text":"<p>Une expression contient un nom qui ne correspond \u00e0 aucune variable ou fonction pr\u00e9alablement d\u00e9finie.</p> Exemples <p><pre><code>a = a + 1\n</code></pre> <pre><code>NameError: name 'a' is not defined\n</code></pre></p>"},{"location":"python/erreurs/#5-erreur-dindex-indexerror","title":"5. Erreur d'index : IndexError","text":"<p>Une instruction tente d'acc\u00e9der \u00e0 un \u00e9l\u00e9ment d\u2019indice trop grand dans une s\u00e9quence (cha\u00eene, tableau, p-uplet...).</p> Exemple <p><pre><code>tableau = [1, 2]\na = tableau[2]\n</code></pre> <pre><code>IndexError: list index out of range\n</code></pre></p>"},{"location":"python/erreurs/#6-erreur-de-division-par-zero-zerodivisionerror","title":"6. Erreur de division par z\u00e9ro : ZeroDivisionError","text":"<p>Une instruction tente de faire une division par z\u00e9ro. V\u00e9rifier les valeurs prises par les d\u00e9nominateurs.</p> Exemple <p><pre><code>tableau = []\nfor i in range(3):\n    tableau.append(1 / i)\n</code></pre> <pre><code>ZeroDivisionError: division by zero\n</code></pre> <code>i</code> est initialis\u00e9 \u00e0 0 par la fonction <code>range</code> et la division par <code>i</code> d\u00e9clenche une erreur.</p>"},{"location":"python/fonctions/","title":"Fonctions","text":"<p>Les fonctions permettent de d\u00e9composer un programme en plusieurs \u00e9l\u00e9ments plus simples, plus lisibles et que l'on peut combiner. Une fonction associe un bloc d'instructions \u00e0 un nom.</p> <p>L'utilisation d'une fonction n\u00e9cessite deux \u00e9tapes :  </p> <ul> <li> <p>sa d\u00e9claration : on d\u00e9finit le nom de la fonction, ses param\u00e8tres et les instructions \u00e0 ex\u00e9cuter ;</p> </li> <li> <p>son appel : on ex\u00e9cute la fonction pour des valeurs explicites des param\u00e8tres.</p> </li> </ul>"},{"location":"python/fonctions/#la-declaration-dune-fonction","title":"La d\u00e9claration d'une fonction","text":"<p>La syntaxe de la d\u00e9claration d'une fonction est : <pre><code>def nom_de_la_fonction(parametres):\n    bloc_instructions\n</code></pre> La d\u00e9finition d'une fonction commence par le mot-cl\u00e9 <code>def</code>. Les param\u00e8tres sont s\u00e9par\u00e9s par des virgules. Il peut ne pas y en avoir : dans ce cas on conserve tout de m\u00eame les parenth\u00e8ses. La premi\u00e8re ligne se termine par un double point. Le bloc <code>bloc_instructions</code> est indent\u00e9. On l'appelle le corps de la fonction.</p> <p>Il est fr\u00e9quent (mais pas obligatoire) que la fonction renvoie une valeur : on utilise pour cela le mot-cl\u00e9 <code>return</code>. En l'absence de <code>return</code> la fonction peut par exemple r\u00e9aliser des affichages, des trac\u00e9s ou \u00e9crire dans un fichier. Elle renverra alors implicitement <code>None</code>.</p> <p>Exemple 1 : une fonction \u00e0 valeur num\u00e9rique</p> <pre><code>def f(x,y):\n    return x ** 2 - y ** 2\n</code></pre> <p>Cette fonction s'appelle <code>f</code>, elle demande deux param\u00e8tres et elle renvoie la diff\u00e9rence des carr\u00e9s des param\u00e8tres.</p> <p>Exemple 2 : une fonction \u00e0 valeur bool\u00e9enne</p> <pre><code>def validation(mot):\n    return mot == 'secret123'\n</code></pre> <p>Cette fonction s'appelle <code>validation</code>, elle demande un seul param\u00e8tre et elle renvoie <code>True</code> si le param\u00e8tre est \u00e9gal \u00e0 la chaine 'secret123' et <code>False</code>sinon.</p>"},{"location":"python/fonctions/#lappel-dune-fonction","title":"L'appel d'une fonction","text":"<p>La syntaxe de l'appel d'une fonction est :</p> <pre><code>nom_de_la_fonction(valeurs_des_parametres)\n</code></pre> <p>Lors de la d\u00e9finition d'une fonction, le type des param\u00e8tres n'est pas pr\u00e9cis\u00e9. Lors de l'appel de la fonction, il est n\u00e9cessaire que les instructions ex\u00e9cut\u00e9es soient compatibles avec les types des valeurs des param\u00e8tres.</p> <p>Exemple 1 : fonction <code>f</code> </p> <p>1er cas : <pre><code>f(5,3)\n</code></pre> <pre><code>16\n</code></pre></p> <p>Les param\u00e8tres <code>x</code>et <code>y</code> de <code>f</code> prennent respectivement les valeurs 5 et 3. La fonction renvoie la valeur \\(5 \\times 5 - 3 \\times 3\\), soit \\(16\\).</p> <p>2e cas :   <pre><code>f('a','b')\n</code></pre> <pre><code>TypeError: unsupported operand type(s) for Pow: 'str' and 'int'\n</code></pre></p> <p>Les param\u00e8tres <code>x</code>et <code>y</code> de <code>f</code> prennent respectivement pour valeurs les chaines de caract\u00e8res 'a' et 'b'. Comme l'op\u00e9rateur <code>** 2</code> n'a pas de signification pour une chaine de caract\u00e8res, l'appel de la fonction avec ces valeurs renvoie une erreur.</p> <p>Exemple 2 : fonction <code>validation</code> </p> <p>1er cas : <pre><code>validation('mot_de_passe123')\n</code></pre> <pre><code>False\n</code></pre></p> <p>Le param\u00e8tre <code>mot</code>de la fonction <code>validation</code> prend la valeur 'mot_de_passe123'. La fonction renvoie la valeur de 'mot_de_passe123' == 'secret123', soit <code>False</code>.</p> <p>2e cas :   <pre><code>validation(123)\n</code></pre> <pre><code>False\n</code></pre></p> <p>Le param\u00e8tre <code>mot</code>de la fonction <code>validation</code> prend la valeur 123, qui est un entier et non une chaine de caract\u00e8res. N\u00e9anmoins l'ex\u00e9cution de la fonction ne d\u00e9clenche pas d'erreur : elle renvoie la valeur de 123 == 'secret123', qui est <code>False</code>.  </p>"},{"location":"python/fonctions/#fonctions-anonymes","title":"Fonctions anonymes","text":"<p>On peut construire une fonction dont le corps est limit\u00e9 \u00e0 une expression \u00e0 l'aide d'une lambda-expression.  </p> <p>On \u00e9crit le mot-cl\u00e9 <code>lambda</code> suivi des param\u00e8tres de la fonction, d'un double-point <code>:</code> et de l'expression de la fonction.</p> <p>Exemple</p> <p><pre><code>lambda x: x**2.   # d\u00e9finition de la fonction carr\u00e9\n</code></pre> <pre><code>&lt;function __main__.&lt;lambda&gt;(x)&gt;\n</code></pre> <pre><code>(lambda x: x**2)(7)   # image de 7 par la fonction carr\u00e9\n</code></pre> <pre><code>49    \n</code></pre></p>"},{"location":"python/fonctions/#pour-approfondir","title":"Pour approfondir","text":"<p>La documentation python pr\u00e9sente d'autres notions li\u00e9es aux fonctions :  </p> <ul> <li>Valeur par d\u00e9faut des param\u00e8tres</li> <li>Les param\u00e8tres nomm\u00e9s</li> <li>Listes de param\u00e8tres arbitraires</li> <li>S\u00e9paration des listes de param\u00e8tres</li> <li>Cha\u00eenes de documentation</li> <li>Annotations de fonctions</li> </ul>"},{"location":"python/fonctions_exercices/","title":"Exercices : fonctions","text":"<p>Module turtle</p> <p>Certains exercices utilisent le module <code>turtle</code>. Ils sont pr\u00e9c\u00e9d\u00e9s de l'ic\u00f4ne .  </p> <p>Pour ex\u00e9cuter dans un notebook Jupyter de Basthon un programme utilisant des instructions du module <code>turtle</code>, le notebook doit contenir l'instruction   <code>from turtle import *</code> et le programme doit se terminer avec l\u2019instruction <code>done()</code>.</p> <p>Pour connaitre la liste des instructions disponibles, consulter le M\u00e9mo Turtle </p>"},{"location":"python/fonctions_exercices/#exercice-1","title":"Exercice 1","text":"<p>Question</p> <p>Quelle est la valeur de la variable <code>prix_ttc</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ? Donner une interpr\u00e9tation de cette valeur.</p> <pre><code>def ajoute_tva(prix):\n  return prix * 1.2\n\nprix_ht = 250\nprix_ttc = ajoute_tva(prix_ht)\n</code></pre>"},{"location":"python/fonctions_exercices/#exercice-2","title":"Exercice 2","text":"<p>Question</p> <p>Quelle est la valeur de la variable <code>montant</code> \u00e0 l'issue de l'ex\u00e9cution de ces instructions ? Donner une interpr\u00e9tation de cette valeur.</p> <pre><code>def ajoute_interets(valeur):\n  return valeur * 1.02\n\nmontant = 1000\nfor i in range(4):\n  montant = ajoute_interets(montant)\n</code></pre>"},{"location":"python/fonctions_exercices/#exercice-3","title":"Exercice 3","text":"<p>Question</p> <p> \u00c9crire une fonction <code>polygone(n)</code> permettant \u00e0 la tortue de tracer un polygone r\u00e9gulier \u00e0 <code>n</code> c\u00f4t\u00e9s.</p>"},{"location":"python/fonctions_exercices/#exercice-4","title":"Exercice 4","text":"<p>Question</p> <p> Ordonner et indenter si n\u00e9cessaire les instructions suivantes afin que le programme permette de dessiner dix carr\u00e9s poss\u00e9dant un sommet commun en utilisant une fonction.</p>"},{"location":"python/fonctions_exercices/#exercice-5","title":"Exercice 5","text":"<p>Question</p> <p> Ordonner et indenter si n\u00e9cessaire les instructions suivantes afin que le programme permette de dessiner 6 pentagones en utilisant une fonction.</p>"},{"location":"python/fonctions_exercices/#exercice-6","title":"Exercice 6","text":"<p>Question</p> <p> \u00c9crire une fonction <code>repete_polygones(nb_cotes_polygone, nb_polygones)</code> qui permet de tracer <code>nb_repetitions</code> polygones r\u00e9guliers dont le nombre de c\u00f4t\u00e9s est <code>nb_cotes_polygone</code>, et ayant tous un sommet commun.</p> <p>Voici par exemple les figures trac\u00e9es suite \u00e0 quelques appels de cette fonction :  </p> <p><pre><code>repete_polygones(4, 6)\n</code></pre> </p> <p><pre><code>repete_polygones(8, 6)\n</code></pre> </p> <p><pre><code>repete_polygones(8, 8)\n</code></pre> </p>"},{"location":"python/fonctions_questions/","title":"Questions : fonctions","text":""},{"location":"python/fonctions_questions/#1-fonctions-et-mathematiques","title":"1. Fonctions et math\u00e9matiques","text":""},{"location":"python/fonctions_questions/#question-11","title":"Question 1.1","text":"<p>Question</p> <p>Parmi les 4 fonctions suivantes, lesquelles permettent de renvoyer le maximum des 2 param\u00e8tres ?</p> <p>Fonction A : <pre><code>def maximum(a,b):\n    if a &gt; b :\n        resultat = a\n    else :\n        resultat = b\n    return resultat\n</code></pre></p> <p>Fonction B : <pre><code>def maximum(a,b):\n    if a &gt;= b :\n        resultat = a\n    else :\n        resultat = b\n    return resultat\n</code></pre></p> <p>Fonction C : <pre><code>def maximum(a,b):\n    if a &gt; b :\n        resultat = a\n    if a &lt; b :\n        resultat = b\n    return resultat\n</code></pre></p> <p>Fonction D : <pre><code>def maximum(a,b):\n    return a if a &gt; b else b\n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>Parmi les propositions, toutes conviennent sauf la C : lorsque les 2 param\u00e8tres sont \u00e9gaux la C ne renvoie rien. La syntaxe de la D est particuli\u00e8re, mais usuelle en Python.</p>"},{"location":"python/fonctions_questions/#question-12","title":"Question 1.2","text":"<p>Question</p> <p>Parmi les 4 fonctions suivantes, lesquelles permettent de renvoyer la liste des valeurs de la table de multiplication d'un entier (c'est \u00e0 dire les produits de cet entier par les entiers de 1 \u00e0 10) ?</p> <p>Fonction A : <pre><code>def table_multiplication(n):\n    table = []\n    for i in range(1,11):\n        table.append(n*i)\n    return table\n</code></pre></p> <p>Fonction B : <pre><code>def table_multiplication(n):\n    table = []\n    for i in range(1,11):\n        table = table + n*i\n    return table_multiplication\n</code></pre></p> <p>Fonction C : <pre><code>def table_multiplication(n):\n    table = []\n    for i in range(10):\n        table.append(n*i)\n    return table\n</code></pre></p> <p>Fonction D : <pre><code>def table_multiplication(n):\n    table = []\n    for i in range(1,11):\n        table = table + [n*i]\n    return table\n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>La proposition B essaie d'utiliser le symbole <code>+</code> entre une liste et un entier, ce qui provoque une erreur. Par ailleurs elle renvoie la fonction plut\u00f4t que la liste, ce qui ne r\u00e9pond pas \u00e0 la question pos\u00e9e.  La fonction C n'utilise pas les bons entiers : <code>range(10)</code>engendre les entiers de 0 \u00e0 9, et non de 1 \u00e0 10.  Les fonctions A et D sont correctes.</p>"},{"location":"python/fonctions_questions/#2-avec-loperateur","title":"2. Avec l'op\u00e9rateur <code>+</code>","text":""},{"location":"python/fonctions_questions/#question-21","title":"Question 2.1","text":"<p>Question</p> <p>On donne la fonction suivante : <pre><code>def plus(a, b)\n    return a + b\n</code></pre> Quel serait l'affichage produit par l'ex\u00e9cution de l'instruction suivante ? <pre><code>print(plus(5, 6))\n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> 11</li> <li> 5 6</li> <li> 56</li> <li> Une erreur</li> </ul> <ul> <li> 11</li> <li> 5 6</li> <li> 56</li> <li> Une erreur</li> </ul> <p>Lorsque les param\u00e8tres sont des nombres, le symbole <code>+</code> est un op\u00e9rateur d'addition.</p>"},{"location":"python/fonctions_questions/#question-22","title":"Question 2.2","text":"<p>Question</p> <p>On donne la fonction suivante : <pre><code>def plus(a, b)\n    return a + b\n</code></pre> Quel serait l'affichage produit par l'ex\u00e9cution de l'instruction suivante ? <pre><code>print(plus('5', '6'))\n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> 11</li> <li> 5 6</li> <li> 56</li> <li> Une erreur    </li> </ul> <ul> <li> 11</li> <li> 5 6</li> <li> 56</li> <li> Une erreur</li> </ul> <p>Lorsque les param\u00e8tres sont des chaines de caract\u00e8res, le symbole <code>+</code> est un op\u00e9rateur de concat\u00e9nation. L'affichage produit est la chaine de caract\u00e8res '56' et non l'entier 56.</p>"},{"location":"python/fonctions_questions/#question-23","title":"Question 2.3","text":"<p>Question</p> <p>On donne la fonction suivante : <pre><code>def plus(a, b)\n    return a + b\n</code></pre> Quel serait l'affichage produit par l'ex\u00e9cution de l'instruction suivante ? <pre><code>print(plus('5', 6))\n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> 11</li> <li> 5 6</li> <li> 56</li> <li> Une erreur    </li> </ul> <ul> <li> 11</li> <li> 5 6</li> <li> 56</li> <li> Une erreur</li> </ul> <p>Lorsque les param\u00e8tres sont un entier pour l'un et une chaine de caract\u00e8res pour l'autre, le symbole <code>+</code> n'a pas de signification. L'affichage produit est le message d'erreur : <code>TypeError: cannot concatenate 'str' and 'int' objects</code> </p>"},{"location":"python/fonctions_questions/#3-traces-en-boucle-des-fonctions-sans-return","title":"3. Trac\u00e9s en boucle : des fonctions sans <code>return</code>","text":"<p>Module turtle</p> <p>Les exercices suivants utilisent le module <code>turtle</code>. Ils sont pr\u00e9c\u00e9d\u00e9s de l'ic\u00f4ne .  </p> <p>Pour ex\u00e9cuter dans un notebook Jupyter de Basthon un programme utilisant des instructions du module <code>turtle</code>, le notebook doit contenir l'instruction   <code>from turtle import *</code> et le programme doit se terminer avec l\u2019instruction <code>done()</code>.</p>"},{"location":"python/fonctions_questions/#question-31","title":"Question 3.1","text":"<p>Question</p> <p> Parmi les programmes suivants, lequel permet de faire tracer \u00e0 la tortue la figure ci-dessous ?  </p> <p></p> <p>Programme A : <pre><code>def carre():\n    for nb_cote in range(3):\n        forward(100)\n        left(90)\n\nfor nb_carre in range(4):\n    carre()\n    right(120)\n</code></pre></p> <p>Programme B : <pre><code>def carre():\n    for nb_cote in range(4):\n        forward(100)\n        left(90)\n\nfor nb_carre in range(3):\n    carre()\n    left(30)\n</code></pre></p> <p>Programme C : <pre><code>def carre():\n    for nb_cote in range(4):\n        forward(100)\n        left(90)\n\nfor nb_carre in range(3):\n    carre()\n    left(120)\n</code></pre></p> <p>Programme D : <pre><code>def carre():\n    for nb_cote in range(3):\n        forward(100)\n        left(90)\n\nfor nb_carre in range(4):\n    carre()\n    left(120)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>La fonction <code>carre</code> doit faire tracer 4 c\u00f4t\u00e9s (<code>range(4)</code>) et les angles d'un carr\u00e9 font 90\u00b0.    Chaque carr\u00e9 est l'image d'un autre par une rotation d'un tiers d'angle plein (360/3 = 120\u00b0). Le sens de cette rotation importe peu : <code>right(120)</code> aurait aussi convenu.</p>"},{"location":"python/fonctions_questions/#question-32","title":"Question 3.2","text":"<p>Question</p> <p> Parmi les programmes suivants, lequel permet de faire tracer \u00e0 la tortue la figure ci-dessous ?  </p> <p></p> <p>Programme A : <pre><code>def hexagone():\n    for nb_cote in range(3) :\n        forward(80)\n        left(120)\n\nfor nb_poly in range(6) :\n    hexagone(t)\n    left(60)\n</code></pre></p> <p>Programme B : <pre><code>def hexagone():\n    for nb_cote in range(6) :\n        forward(80)\n        left(120)\n\nfor nb_poly in range(3) :\n    hexagone()\n    left(60)\n</code></pre></p> <p>Programme C : <pre><code>def hexagone():\n    for nb_cote in range(6) :\n        forward(80)\n        left(60)\n\nfor nb_poly in range(6) :\n    hexagone()\n    left(120)\n</code></pre></p> <p>Programme D : <pre><code>def hexagone():\n    for nb_cote in range(6) :\n        forward(80)\n        left(60)\n\nfor nb_poly in range(3) :\n    hexagone()\n    left(120)\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <ul> <li> A</li> <li> B</li> <li> C</li> <li> D</li> </ul> <p>Il y a 3 hexagones r\u00e9guliers \u00e0 tracer (<code>range(3)</code>).    La fonction <code>hexagone</code> fait tracer 6 c\u00f4t\u00e9s (<code>range(6)</code>). Les angles internes de l'hexagone font 120\u00b0 donc la tortue doit pivoter de 180 - 120 = 60\u00b0.    Chaque hexagone est l'image d'un autre par une rotation d'un tiers d'angle plein (360/3 = 120\u00b0). Le sens de cette rotation importe peu : <code>right(120)</code> aurait aussi convenu.</p>"},{"location":"python/glossaire/","title":"Glossaire Anglais-Fran\u00e7ais Programmation python","text":"<p>(cliquer sur un drapeau pour changer le crit\u00e8re de tri du tableau)</p> assignment affectation byte octet docstring chaine de documentation float nombre \u00e0 virgule flottante function call appel d'une fonction getter accesseur identifier identifiant integer nombre entier to pop \u00a0d\u00e9piler to push empiler queue file to return renvoyer setter mutateur stack pile statement instruction string chaine de caract\u00e8res"},{"location":"python/instructions_conditionnelles/","title":"Instructions conditionnelles : g\u00e9n\u00e9ralit\u00e9s","text":"<p>Les instructions conditionnelles permettent de s\u00e9lectionner le bloc d'instructions \u00e0 ex\u00e9cuter selon la valeur d'une expression bool\u00e9enne.</p>"},{"location":"python/instructions_conditionnelles/#linstruction-if","title":"L'instruction <code>if</code>","text":"<p>La syntaxe de l'instruction <code>if</code> est :</p> <p><pre><code>if expression:\n    bloc_instructions_1\nbloc_instructions_2\n</code></pre> o\u00f9 <code>expression</code> a pour valeur <code>True</code> ou <code>False</code>. Il s'agit de l'expression de la clause <code>if</code>.</p> <p>Si <code>expression</code> a pour valeur <code>True</code>, le bloc <code>bloc_instructions_1</code> est ex\u00e9cut\u00e9, sinon, il est ignor\u00e9. Dans tous les cas, si le bloc <code>bloc_instructions_2</code> existe, il est ex\u00e9cut\u00e9 ensuite.  </p> <p>Exemple : l'expression de la clause <code>if</code> a pour valeur <code>True</code></p> <p><pre><code>nb = 174\nif nb % 2 == 0:\n    print(nb, \"est un nombre pair\")\nprint(\"fin des tests\")\n</code></pre> <pre><code>174 est un nombre pair\nfin des tests\n</code></pre></p> <p><code>nb % 2 == 0</code> est une expression qui vaut <code>True</code> lorsque <code>nb</code> vaut 174. L'instruction <code>print(nb, \"est un nombre pair\")</code> est ex\u00e9cut\u00e9e.</p> <p>Exemple : l'expression de la clause <code>if</code> a pour valeur <code>False</code></p> <p><pre><code>nb = 181\nif nb % 2 == 0:\n    print(nb, \"est un nombre pair\")\nprint(\"fin des tests\")\n</code></pre> <pre><code>fin des tests\n</code></pre></p> <p><code>nb % 2 == 0</code> est une expression qui vaut <code>False</code> lorsque <code>nb</code> vaut 181. L'instruction <code>print(nb, \"est un nombre pair\")</code> est ignor\u00e9e.</p>"},{"location":"python/instructions_conditionnelles/#linstruction-if-else","title":"L'instruction <code>if \u2026 else</code>","text":"<p>La syntaxe de l'instruction <code>if \u2026 else</code> est :</p> <p><pre><code>if expression:\n    bloc_instructions_1\nelse :\n    bloc_instructions_2\nbloc_instructions_3\n</code></pre> o\u00f9 <code>expression</code> a pour valeur <code>True</code> ou <code>False</code>.  </p> <ul> <li>Lorsque <code>expression</code> a pour valeur <code>True</code>, le bloc <code>bloc_instructions_1</code> est ex\u00e9cut\u00e9, et le bloc <code>bloc_instructions_2</code> est ignor\u00e9.</li> <li>Lorsque <code>expression</code> a pour valeur <code>False</code>, le bloc <code>bloc_instructions_1</code> est ignor\u00e9, et le bloc <code>bloc_instructions_2</code> est ex\u00e9cut\u00e9.  </li> </ul> <p>On ex\u00e9cute donc soit le bloc <code>bloc_instructions_1</code>, soit le bloc <code>bloc_instructions_2</code>, mais jamais les 2.  </p> <ul> <li>Dans tous les cas, si le bloc <code>bloc_instructions_3</code> existe, il est ex\u00e9cut\u00e9 ensuite.  </li> </ul> <p>Exemple : </p> <p><pre><code>nb = 5\nif nb % 2 == 0:\n    print(nb, \"est un nombre pair\")\nelse :\n    print(nb, \"est un nombre  impair\")\n</code></pre> <pre><code>5 est un nombre impair\n</code></pre></p> <p><code>nb % 2 == 0</code> est une expression qui vaut <code>False</code> lorsque <code>nb</code> vaut 5. L'instruction <code>print(nb, \"est un nombre pair\")</code> est ignor\u00e9e mais <code>print(nb, \"est un nombre  impair\")</code> est ex\u00e9cut\u00e9e.</p>"},{"location":"python/instructions_conditionnelles/#linstruction-if-elif-else","title":"L'instruction <code>if \u2026 elif \u2026 else</code>","text":"<p>Lorsque l'on souhaite disposer de plus d'une alternative, l'instruction <code>if \u2026 elif \u2026 else</code> permet de conditionner l'ex\u00e9cution de plusieurs blocs d'instructions par la valeur de plusieurs expressions bool\u00e9ennes.</p> <p><code>elif</code> est \u00e9quivalent \u00e0 <code>else if</code>. On peut ajouter autant de clauses <code>elif</code> que n\u00e9cessaires.</p> <p>La syntaxe de l'instruction <code>if \u2026 elif \u2026 else</code> est :</p> <p><pre><code>if expression1:\n    bloc_instructions_1\nelif expression2 :\n    bloc_instructions_2\nelse:\n    bloc_instructions_3\nbloc_instructions_4\n</code></pre> o\u00f9 <code>expression1</code> et <code>expression2</code> ont pour valeur <code>True</code> ou <code>False</code>.  </p> <ul> <li>Lorsque <code>expression1</code> a pour valeur <code>True</code>, le bloc <code>bloc_instructions_1</code> est ex\u00e9cut\u00e9, et les blocs <code>bloc_instructions_2</code> et <code>bloc_instructions_3</code> sont ignor\u00e9s.</li> <li>Lorsque <code>expression1</code> a pour valeur <code>False</code>:  <ul> <li>le bloc <code>bloc_instructions_1</code> est ignor\u00e9,</li> <li>si <code>expression2</code> a pour valeur <code>True</code>, le bloc <code>bloc_instructions_2</code> est ex\u00e9cut\u00e9, et le bloc <code>bloc_instructions_3</code> est ignor\u00e9 ;</li> <li>si <code>expression2</code> a pour valeur <code>False</code>, le bloc <code>bloc_instructions_2</code> est ignor\u00e9, et le bloc <code>bloc_instructions_3</code> est ex\u00e9cut\u00e9.  </li> </ul> </li> </ul> <p>On ex\u00e9cute donc soit le bloc <code>bloc_instructions_1</code>, soit le bloc <code>bloc_instructions_2</code>, soit le bloc <code>bloc_instructions_3</code>, mais toujours un seul parmi les 3.  </p> <ul> <li>Dans tous les cas, si le bloc <code>bloc_instructions_4</code> existe, il est ex\u00e9cut\u00e9 ensuite.  </li> </ul> <p>Exemple : </p> <p><pre><code>nb = 178\nif nb % 10 == 0:\n    print(nb, \"est un multiple de 10\")\nelif nb % 5 == 0:\n    print(nb, \"est un multiple de 5, mais pas de 10\")\nelif nb % 2 == 0:\n    print(nb, \"est un multiple de 2, mais pas de 10\")\nelse :\n    print(nb, \"n'est ni un multiple de 2, ni un multiple de 5\")\n</code></pre> <pre><code>178 est un multiple de 2, mais pas de 10\n</code></pre></p> <p><code>nb % 10 == 0</code> est une expression qui vaut <code>False</code> lorsque <code>nb</code> vaut 178. L'instruction <code>print(nb, \"est un multiple de 10\")</code> est ignor\u00e9e. <code>nb % 5 == 0</code> est une expression qui vaut <code>False</code> lorsque <code>nb</code> vaut 178. L'instruction <code>print(nb, \"est un multiple de 5, mais pas de 10\")</code> est aussi ignor\u00e9e. <code>nb % 2 == 0</code> est une expression qui vaut <code>True</code> lorsque <code>nb</code> vaut 178. L'instruction <code>print(nb, \"est un multiple de 2, mais pas de 10\")</code> est donc ex\u00e9cut\u00e9e.</p>"},{"location":"python/instructions_conditionnelles_questions/","title":"Questions : instructions conditionnelles","text":""},{"location":"python/instructions_conditionnelles_questions/#question-1","title":"Question 1","text":"<p>Question</p> <p>Apr\u00e8s ex\u00e9cution du programme suivant, quelle serait la valeur affich\u00e9e ?</p> <pre><code>nb = 15\nif nb % 2 == 0 :\n    nb = nb * 5\nelse:\n    nb = nb * 2\nprint(nb)\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 15</li> <li> 30</li> <li> 75</li> <li> 150</li> </ul> <ul> <li> 15</li> <li> 30</li> <li> 75</li> <li> 150</li> </ul> <p>L'expression de la clause <code>if</code>, <code>nb % 2 == 0</code>, a pour valeur <code>False</code> quand <code>nb</code> vaut 15. L'instruction ex\u00e9cut\u00e9e est donc <code>nb = nb * 2</code>, ce qui affecte \u00e0 <code>nb</code> la valeur 30.  </p>"},{"location":"python/instructions_conditionnelles_questions/#question-2","title":"Question 2","text":"<p>Question</p> <p>Apr\u00e8s ex\u00e9cution du programme suivant, quelle serait la valeur affich\u00e9e ?</p> <pre><code>nb = 15\nif nb % 2 == 0 :\n    nb = nb * 5\nelif nb % 5 == 0:\n    nb = nb * 2\nelse:\n    nb = nb * 3\nprint(nb)\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 30</li> <li> 45</li> <li> 75</li> <li> 150</li> </ul> <ul> <li> 30</li> <li> 45</li> <li> 75</li> <li> 150</li> </ul> <p>L'expression de la clause <code>if</code>, <code>nb % 2 == 0</code>, a pour valeur <code>False</code> quand <code>nb</code> vaut 15. L'expression de la clause <code>elif</code>, <code>nb % 5 == 0</code>, a pour valeur <code>True</code> quand <code>nb</code> vaut 15. L'instruction ex\u00e9cut\u00e9e est donc <code>nb = nb * 2</code>, ce qui affecte \u00e0 <code>nb</code> la valeur 30.  </p>"},{"location":"python/instructions_conditionnelles_questions/#question-3","title":"Question 3","text":"<p>Question</p> <p>Apr\u00e8s ex\u00e9cution du programme suivant, quelle serait la valeur affich\u00e9e ?</p> <pre><code>nb = 12\nif nb % 2 == 0 :\n    nb = nb * 5\nif nb % 5 == 0:\n    nb = nb * 2\nelse:\n    nb = nb * 3\nprint(nb)\n</code></pre> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 24</li> <li> 36</li> <li> 60</li> <li> 120</li> </ul> <ul> <li> 24</li> <li> 36</li> <li> 60</li> <li> 120</li> </ul> <p>L'expression de la clause du premier <code>if</code>, <code>nb % 2 == 0</code>, a pour valeur <code>True</code> quand <code>nb</code> vaut 12. L'instruction <code>nb = nb * 5</code> est donc ex\u00e9cut\u00e9e, ce qui affecte \u00e0 <code>nb</code> la valeur 60. L'expression de la clause du second <code>if</code>, <code>nb % 5 == 0</code>, a pour valeur <code>True</code> quand <code>nb</code> vaut 60. L'instruction <code>nb = nb * 2</code>, est donc aussi ex\u00e9cut\u00e9e, ce qui affecte \u00e0 <code>nb</code> la valeur 120.  </p> <p>Cet exemple montre qu'il faut attentivement distinguer les instructions <code>if \u2026 elif</code> des instructions <code>if</code> successives.</p>"},{"location":"python/operateurs/","title":"Op\u00e9rateurs","text":"<p>Les op\u00e9rateurs sont des symboles ou des mots r\u00e9serv\u00e9s, utilis\u00e9s pour r\u00e9aliser des op\u00e9rations  entre des op\u00e9randes. Un op\u00e9rande est une variable, un litt\u00e9ral ou bien une expression. Une expression est une suite valide d'op\u00e9rateurs et d'op\u00e9randes.</p>"},{"location":"python/operateurs/#operateurs-arithmetiques","title":"Op\u00e9rateurs arithm\u00e9tiques","text":"<p> Remarque</p> <p>Seul le cas d'op\u00e9randes \u00e0 valeurs num\u00e9riques est envisag\u00e9 ici.</p> + \\(-\\) *   /  %// ** <p>Addition L'expression <code>a + b</code> a pour valeur la somme des deux op\u00e9randes <code>a</code> et <code>b</code>.</p> <p><pre><code>a = 10\nb = 3\na + b\n</code></pre> <pre><code>13\n</code></pre></p> <p>Soustraction  L'expression <code>a - b</code> a pour valeur la diff\u00e9rence des deux op\u00e9randes <code>a</code> et <code>b</code>. <pre><code>a = 10\nb = 3\na - b\n</code></pre> <pre><code>7\n</code></pre></p> <p>Multiplication L'expression <code>a * b</code> a pour valeur le produit des deux op\u00e9randes  <code>a</code> et <code>b</code>. <pre><code>a = 10\nb = 3\na * b\n</code></pre> <pre><code>30\n</code></pre></p> <p>Division L'expression <code>a / b</code> a pour valeur le quotient d\u00e9cimal dans la division  de <code>a</code> par <code>b</code>. <pre><code>a = 10\nb = 3\na / b\n</code></pre> <pre><code>3.3333333333333335\n</code></pre></p> <p>Modulo   L'expression <code>a % b</code> a pour valeur le reste dans la division enti\u00e8re  de <code>a</code> par <code>b</code>. <pre><code>a = 10\nb = 3\na % b\n</code></pre> <pre><code>1\n</code></pre></p> <p>Division enti\u00e8re L'expression <code>a // b</code> a pour valeur  le quotient dans la division enti\u00e8re  de <code>a</code> par <code>b</code>. <pre><code>a = 10\nb = 3\na // b\n</code></pre> <pre><code>3\n</code></pre></p> <p>Exposant    L'expression <code>a ** b</code> a pour valeur <code>a</code>exposant <code>b</code> : a b . <pre><code>a = 10\nb = 3\na ** b\n</code></pre> <pre><code>1000\n</code></pre></p>"},{"location":"python/operateurs/#operateurs-de-comparaison","title":"Op\u00e9rateurs de comparaison","text":"<p>Les op\u00e9rateurs de comparaison (ou relationnels) sont utilis\u00e9s pour comparer les valeurs de deux op\u00e9randes. L'expression s'\u00e9crit sous la forme d'une relation (de comparaison) : elle vaut  <code>True</code>si les valeurs des op\u00e9randes v\u00e9rifient la relation et <code>False</code> sinon.</p>  == != &gt; &gt;= &lt; &lt;= <p>signifie \"est \u00e9gal \u00e0 \".   Exemple : <code>2 * 3 == 5</code> vaut <code>False</code></p> <p>signifie \"n'est pas \u00e9gal \u00e0 \".     Exemple : <code>2 * 3 != 5</code> vaut <code>True</code> </p> <p>signifie \"est sup\u00e9rieur \u00e0 \".   Exemple : <code>2 * 3 &gt; 5</code> vaut <code>True</code> </p> <p>signifie \"est sup\u00e9rieur ou \u00e9gal \u00e0 \".   Exemple : <code>2 * 3 &gt;= 5</code> vaut <code>True</code> </p> <p>signifie \"est inf\u00e9rieur \u00e0 \".    Exemple : <code>2 * 3 &lt; 5</code> vaut <code>False</code> </p> <p>signifie \"est inf\u00e9rieur ou \u00e9gal \u00e0 \".    Exemple : <code>2 * 3 &lt; 5</code> vaut <code>False</code> </p>"},{"location":"python/operateurs/#operateurs-logiques","title":"Op\u00e9rateurs logiques","text":"<p> Remarque</p> <p>Seul le cas d'op\u00e9randes \u00e0 valeurs bool\u00e9ennes est envisag\u00e9 ici.</p> andornot <p>ET logique L'expression <code>a and b</code> vaut <code>True</code> si (et seulement si) les deux op\u00e9randes <code>a</code> et <code>b</code> valent <code>True</code>. Exemple : <code>2 * 3 &gt; 5 and 2 + 3 == 5</code> vaut <code>True</code> </p> <p>OU logique L'expression  <code>a or b</code> vaut <code>True</code> si (et seulement si) au moins l'un des deux op\u00e9randes  <code>a</code> et <code>b</code> vaut <code>True</code>. Exemple :  <code>2 * 3 &lt; 5 or 2 + 3 == 5</code> vaut <code>True</code> </p> <p>NON logique (op\u00e9rateur unaire1)  L'expression <code>not a</code> vaut <code>True</code> si <code>a</code>vaut <code>False</code>; elle vaut <code>False</code>sinon.      Exemple :  <code>not (2 * 3 &lt; 5)</code> vaut <code>True</code></p>"},{"location":"python/operateurs/#operateurs-binaires","title":"Op\u00e9rateurs binaires","text":"<p>Les op\u00e9rateurs binaires (ou bit \u00e0 bit) appliquent des op\u00e9rateurs logiques sur les bits de l'\u00e9criture binaire des op\u00e9randes.   </p>  &amp;  |  ^  ~   &gt;&gt;  &lt;&lt;  <p>Et bit \u00e0 bit <code>a &amp; b</code> : on d\u00e9termine le r\u00e9sultat bit \u00e0 bit \u00e0 l'aide d'un ET logique entre les bits de l'\u00e9criture binaire de <code>a</code>et <code>b</code>. Exemple : <pre><code>a = 240   # soit 1111 0000 en binaire\nb = 170   # soit 1010 1010 en binaire\na &amp; b\n</code></pre> <pre><code>160       # soit 1010 0000 en binaire\n</code></pre></p> <p>Ou bit \u00e0 bit <code>a | b</code> : on d\u00e9termine le r\u00e9sultat bit \u00e0 bit \u00e0 l'aide d'un OU logique entre les bits de l'\u00e9criture binaire de <code>a</code>et <code>b</code>. Exemple : <pre><code>a = 240   # soit 1111 0000 en binaire\nb = 170   # soit 1010 1010 en binaire\na | b\n</code></pre> <pre><code>250       # soit 1111 1010 en binaire\n</code></pre></p> <p>Ou exclusif bit \u00e0 bit (xor) <code>a ^ b</code> : on d\u00e9termine le r\u00e9sultat bit \u00e0 bit \u00e0 l'aide d'un OU exclusif (XOR) entre les bits de l'\u00e9criture binaire de <code>a</code>et <code>b</code>.   Exemple : <pre><code>a = 240   # soit 1111 0000 en binaire\nb = 170   # soit 1010 1010 en binaire\na ^ b\n</code></pre> <pre><code>90        # soit 0101 1010 en binaire\n</code></pre></p> <p>Inversion bit \u00e0 bit (op\u00e9rateur unaire1) <code>~ a</code> : on d\u00e9termine le r\u00e9sultat bit \u00e0 bit \u00e0 l'aide d'un NON sur les bits de l'\u00e9criture binaire de <code>a</code>. Exemple : <pre><code>a = 240   # soit 1111 0000 en binaire\n~ a\n</code></pre> <pre><code>15        # soit 0000 1111 en binaire\n</code></pre></p> <p>D\u00e9calage bit \u00e0 bit droite <code>a &gt;&gt; b</code> : on d\u00e9termine le r\u00e9sultat en d\u00e9calant les bits de l'\u00e9criture binaire de <code>a</code> de <code>b</code> rangs vers la droite.       Exemple : <pre><code>a = 48   # soit 0011 0000 en binaire\na &gt;&gt; 2\n</code></pre> <pre><code>12       # soit 0000 1100  en binaire\n</code></pre></p> <p>D\u00e9calage bit \u00e0 bit gauche <code>a &lt;&lt; b</code> : on d\u00e9termine le r\u00e9sultat en d\u00e9calant les bits de l'\u00e9criture binaire de <code>a</code> de <code>b</code> rangs vers la gauche.    Exemple : <pre><code>a = 48   # soit 0011 0000 en binaire\na &lt;&lt; 2\n</code></pre> <pre><code>192      # soit 1100 0000 en binaire\n</code></pre></p>"},{"location":"python/operateurs/#operateurs-daffectation","title":"Op\u00e9rateurs d'affectation","text":"<p>Les op\u00e9rateurs d\u2019affectation sont utilis\u00e9s pour attribuer une valeur \u00e0 une variable. La variable est l'op\u00e9rande de gauche. La valeur est l'op\u00e9rande de droite : il est \u00e9valu\u00e9 avant l'affectation.</p> <p>En dehors de l'affectation \u00e0 l'aide du symbole <code>=</code>,  les autres op\u00e9rateurs, dits d'affectation augment\u00e9e, combinent une op\u00e9ration arithm\u00e9rique ou binaire et une affectation de valeur \u00e0 une variable, pr\u00e9alablement initialis\u00e9e.</p>  = += -=  *=  /=  %=  //=  **=  &amp;=  |=  ^=  &gt;&gt;=  &lt;&lt;=  <p>Op\u00e9rateur d'affectation Exemples :  <code>x = 2</code> : affecte \u00e0 <code>x</code> la valeur <code>2</code>. <code>x = 2*3 + 5</code> : affecte \u00e0 <code>x</code> la valeur <code>11</code>.  <code>x = y</code> : affecte \u00e0 <code>x</code> la valeur de <code>y</code> (qui doit avoir \u00e9t\u00e9 initialis\u00e9e pr\u00e9alablement)</p> <p>Exemple :  <code>x += 2</code> : augmente la valeur de <code>x</code> de <code>2</code>. \u00c9quivalent \u00e0 <code>x = x + 2</code></p> <p>Exemple :  <code>x -= 2</code> : diminue la valeur de <code>x</code> de <code>2</code>.  \u00c9quivalent \u00e0 <code>x = x - 2</code></p> <p>Exemple :  <code>x *= 2</code> : multiplie la valeur de <code>x</code> par <code>2</code>. \u00c9quivalent \u00e0 <code>x = x * 2</code></p> <p>Exemple :  <code>x /= 2</code> : divise la valeur de <code>x</code> par <code>2</code>. \u00c9quivalent \u00e0 <code>x = x / 2</code></p> <p>Exemple :  <code>x %= 2</code> : remplace <code>x</code> par le reste de la division de la valeur de <code>x</code>par <code>2</code>.    \u00c9quivalent \u00e0 <code>x = x % 2</code></p> <p>Exemple :  <code>x //= 2</code> : divise la valeur de <code>x</code> par <code>2</code> (quotient entier). \u00c9quivalent \u00e0 <code>x = x // 2</code></p> <p>Exemple :  <code>x **= 2</code> : \u00e9l\u00e8ve <code>x</code> \u00e0 la puissance <code>2</code>. \u00c9quivalent \u00e0 <code>x = x ** 2</code></p> <p>Exemple :  <code>x &amp;= 2</code>  \u00c9quivalent \u00e0 <code>x = x &amp; 2</code></p> <p>Exemple :  <code>x |= 2</code>  \u00c9quivalent \u00e0 <code>x = x | 2</code></p> <p>Exemple :  <code>x ^= 2</code> \u00c9quivalent \u00e0 <code>x = x ^ 2</code></p> <p>Exemple :  <code>x &gt;&gt;= 2</code>  \u00c9quivalent \u00e0 <code>x = x &gt;&gt; 2</code></p> <p>Exemple :  <code>x &lt;&lt;= 2</code>  \u00c9quivalent \u00e0 <code>x = x &lt;&lt; 2</code></p>"},{"location":"python/operateurs/#operateurs-speciaux","title":"Op\u00e9rateurs sp\u00e9ciaux","text":"<p>Le langage Python offre des types d'op\u00e9rateurs sp\u00e9ciaux, tels que l'op\u00e9rateur d'identit\u00e9 ou l'op\u00e9rateur d'appartenance.</p>"},{"location":"python/operateurs/#operateur-didentite","title":"Op\u00e9rateur d'identit\u00e9","text":"<p><code>is</code> et <code>is not</code> sont les op\u00e9rateurs d'identit\u00e9 en Python. Ils permettent de v\u00e9rifier si deux valeurs (ou variables) r\u00e9f\u00e9rencent (ou non) le m\u00eame emplacement m\u00e9moire.  Deux variables de m\u00eame valeur ne sont pas n\u00e9cessairement identiques.</p>  is  is not <p><code>a is b</code> vaut   <code>True</code> si les op\u00e9randes  <code>a</code>et <code>b</code> r\u00e9f\u00e9rencent le m\u00eame objet. Exemple : <pre><code>tableau1 = [1, 2, 3]\ntableau2 = tableau1\ntableau1 is tableau2\n</code></pre> <pre><code>True\n</code></pre></p> <p><code>a is not b</code> vaut   <code>True</code> si les op\u00e9randes  <code>a</code>et <code>b</code> ne r\u00e9f\u00e9rencent pas le m\u00eame objet. Exemple : <pre><code>tableau1 = [1, 2, 3]\ntableau2 = [1, 2, 3]\ntableau1 is not tableau2\n</code></pre> <pre><code>True\n</code></pre></p>"},{"location":"python/operateurs/#operateur-dappartenance","title":"Op\u00e9rateur d'appartenance","text":"<p><code>in</code> et <code>not in</code> sont les op\u00e9rateurs d'appartenance en Python. Ils sont utilis\u00e9s pour v\u00e9rifier si une valeur est pr\u00e9sente (ou non) dans une s\u00e9quence (cha\u00eene, liste, tuple, set et dictionnaire).</p>  in  not in  <p><code>a in b</code> vaut   <code>True</code> si l'op\u00e9rande <code>a</code> se trouve dans la s\u00e9quence <code>b</code>.  Exemple :  <pre><code>tableau = [1, 2, 3]\na = 2\na in tableau\n</code></pre> <pre><code>True\n</code></pre></p> <p><code>a not in b</code> vaut <code>True</code> si l'op\u00e9rande <code>a</code>ne se trouve pas dans la s\u00e9quence <code>b</code>.  Exemple :  <pre><code>tableau = [1, 2, 3]\na = 4\na not in tableau\n</code></pre> <pre><code>True\n</code></pre></p>"},{"location":"python/operateurs/#priorites-des-operateurs","title":"Priorit\u00e9s des op\u00e9rateurs","text":"<p>Liste des op\u00e9rateurs, de la priorit\u00e9 la plus haute \u00e0 la plus basse : <code>**</code> <code>* / // %</code> <code>+ -</code> <code>&lt; &lt;= &gt; &gt;= == !=</code> <code>=</code> <code>not</code> <code>and</code> <code>or</code></p> <ol> <li> <p>op\u00e9rateur ne n\u00e9cessitant qu'un op\u00e9rande\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"python/pep8/","title":"Bonnes pratiques en programmation python","text":"<p>\u00c9crire un texte dans une langue n\u00e9cessite le respect de r\u00e8gles typographiques concernant notamment l'usage des majuscules, des espaces, de la ponctuation, des paragraphes, etc. </p> <p>Il en est souvent de m\u00eame pour les langages, comme les langages de programmation. </p> <p>Des propositions d'am\u00e9liorations concernant le langage Python sont r\u00e9guli\u00e8rement publi\u00e9es : les Python Enhancement Proposal (PEP).</p> <p>L'une de ces propositions, la PEP 8 : Style Guide for Python Code, consiste en un nombre important de recommandations sur la syntaxe Python. Seules quelques-unes sont pr\u00e9sent\u00e9es ici. </p>"},{"location":"python/pep8/#1-mise-en-page","title":"1. Mise en page","text":"<ul> <li> <p>Longueur des lignes : une ligne doit contenir 79 caract\u00e8res au maximum.</p> </li> <li> <p>Indentation : les blocs d'instructions sont \u00e0 indenter de 4 espaces. </p> </li> </ul>"},{"location":"python/pep8/#2-regles-de-nommage","title":"2. R\u00e8gles de nommage","text":"<p>Les noms de variable, fonction ou classe ne doivent pas contenir d'accent. Les caract\u00e8res autoris\u00e9s sont les lettres, les chiffres et le tiret bas : _</p>"},{"location":"python/pep8/#variables-et-fonctions","title":"Variables et fonctions","text":"<p>Les noms de variables et de fonctions sont \u00e0 \u00e9crire avec des lettres minuscules et le tiret bas.</p>"},{"location":"python/pep8/#constantes","title":"Constantes","text":"<p>Les noms des constantes sont \u00e0 \u00e9crire avec des lettres capitales et le tiret bas.</p>"},{"location":"python/pep8/#classes","title":"Classes","text":"<p>Les noms des classes sont \u00e0 \u00e9crire avec des lettres minuscules avec majuscules en d\u00e9but de mot.</p> <p>Exemples</p> VariablesFonctionsConstantesClasses <pre><code>compteur\nmon_tableau\n</code></pre> <pre><code>jouer()\nracine_carree(x)\n</code></pre> <pre><code>CLE\nNB_POINTS\n</code></pre> <pre><code>MaClasse\nMaSuperClasse\n</code></pre> <p>Info</p> <ul> <li>Le style recommand\u00e9 pour nommer les variables et les fonctions en Python est appel\u00e9 snake_case. </li> <li>Le style recommand\u00e9 pour nommer les classes en Python est appel\u00e9 CamelCase. </li> </ul>"},{"location":"python/pep8/#3-espaces","title":"3. Espaces","text":"<p>Les espaces suivent la syntaxe anglo-saxonne et non fran\u00e7aise.  Ainsi les caract\u00e8res <code>;</code>, <code>:</code> et <code>,</code> s'\u00e9crivent avec un espace apr\u00e8s mais pas d'espace avant.  </p>"},{"location":"python/pep8/#autour-des-operateurs","title":"Autour des op\u00e9rateurs","text":"<p>Il est recommand\u00e9 de toujours entourer les op\u00e9rateurs suivants (<code>=</code>, <code>+=</code>, <code>-=</code>,<code>*=</code>, <code>/=</code>, <code>==</code>, <code>!=</code>, <code>&gt;=</code>, <code>not</code>, <code>in</code>, <code>and</code>, <code>or</code>, etc.) d'un espace avant et d'un espace apr\u00e8s l'op\u00e9rateur. </p> <p>Les op\u00e9rateurs suivants (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>) sont \u00e0 entourer en r\u00e8gle g\u00e9n\u00e9rale d'un espace avant et d'un espace apr\u00e8s l'op\u00e9rateur.  Lorsqu'une expression comporte des op\u00e9rations de diff\u00e9rentes priorit\u00e9s, on peut r\u00e9server les espaces \u00e0 l'op\u00e9rateur de plus faible priorit\u00e9.</p> Exemples <pre><code>compteur = 0\ncompteur = compteur + 1\ncompteur += 1\nx = 2*x + 1\n</code></pre>"},{"location":"python/pep8/#autour-des-parentheses","title":"Autour des parenth\u00e8ses","text":"<p>Il n'y a pas d'espace : </p> <ul> <li>apr\u00e8s les parenth\u00e8ses, accolades et crochets ouvrants ;</li> <li>avant les parenth\u00e8ses, accolades et crochets fermants ;</li> <li>juste avant la parenth\u00e8se ouvrante d'une fonction ou le crochet ouvrant d'une liste ou d'un dictionnaire.</li> </ul> Exemples <pre><code>ma_fonction(x)\nmon_dictionnaire = {\"valeur\": 42, \"type\": \"r\u00e9ponse\"}\nmon_tableau = ('a', 'ab', 'ac')\nmon_tableau[0]\nmon_dictionnaire[\"valeur\"]     \n</code></pre>"},{"location":"python/pep8/#4-docstrings","title":"4. Docstrings","text":"<p>Une docstring (\u00ab cha\u00eene de documentation \u00bb en fran\u00e7ais) est un texte qui documente un \u00e9l\u00e9ment du code comme par exemple les fonctions. Elle est situ\u00e9e en d\u00e9but de d\u00e9finition, indent\u00e9e comme le code, et se compose de trois guillemets ouvrants, puis du commentaire r\u00e9dig\u00e9 sous forme de phrases compl\u00e8tes et enfin de trois guillements fermants. Toutes les fonctions et classes devraient disposer d'une docstring.</p> Exemples <pre><code>def est_premier(nombre): \n\"\"\"   \n    nombre est un entier\n    est_premier(nombre) vaut True si nombre est premier, et False sinon \n    \"\"\"  \n    ...\n</code></pre>"},{"location":"python/variables/","title":"Variables","text":"<p>Une variable est un emplacement dot\u00e9 d'un nom, utilis\u00e9 pour stocker des donn\u00e9es dans la m\u00e9moire. On peut consid\u00e9rer une variable comme un conteneur contenant des donn\u00e9es pouvant \u00eatre modifi\u00e9es ult\u00e9rieurement dans le programme.</p>"},{"location":"python/variables/#affecter-une-valeur-a-une-variable","title":"Affecter une valeur \u00e0 une variable","text":"<p>On affecte une valeur \u00e0 une variable en Python \u00e0 l'aide d'une instruction dont la syntaxe est :  <pre><code>nom_variable = valeur_variable\n</code></pre> Le nom d'une variable est appel\u00e9 son identifiant. Les noms de variables peuvent contenir des lettres, le tiret bas _ et, sauf pour le premier caract\u00e8re, des chiffres. Les identifiants doivent \u00eatre aussi explicites que possible et il est conseill\u00e9 de ne pas utiliser de lettres accentu\u00e9es. L'usage en python veut que les identifiants de variables ne contiennent pas de lettres capitales (A-Z). Par ailleurs les mots r\u00e9serv\u00e9s1 en python sont des mots qui ne peuvent pas \u00eatre utilis\u00e9s comme identifiants.</p> <p>Exemple</p> <p>Voici des identifiants valides pour les variables suivantes : <pre><code>score = 203\nnom_joueur_1 = \"mona-lisa\"\nlongueur = 1.25\ndimensions_valides = True\n</code></pre></p> <p></p> <p>Et voici des noms qui ne pourront pas \u00eatre des identifiants de variables :  </p> <p><code>2e_joueur</code> (commence par un chiffre),  <code>tom&amp;jerry</code> (caract\u00e8re <code>&amp;</code> non autoris\u00e9),  <code>joueur-2</code> (caract\u00e8re <code>-</code> non autoris\u00e9), <code>taux tva</code> (espace non autoris\u00e9), <code>global</code> (mot r\u00e9serv\u00e9)</p> <p>La valeur r\u00e9f\u00e9renc\u00e9e par une variable n'est pas syst\u00e9matiquement une valeur num\u00e9rique : dans l'exemple pr\u00e9c\u00e9dent, on a r\u00e9f\u00e9renc\u00e9 un entier (type <code>int</code>), un flottant (type <code>float</code>), une chaine de caract\u00e8res (type <code>str</code>) et un bool\u00e9en (type <code>bool</code>) : diff\u00e9rents types usuels seront \u00e9tudi\u00e9s par la suite.</p> <p>Lors de l\u2019exe\u0301cution d\u2019une instruction d\u2019affectation, l\u2019expression \u00e0 droite du signe = est d'abord  \u00e9valu\u00e9e et la valeur obtenue est ensuite r\u00e9f\u00e9renc\u00e9e par la variable, d\u00e9sign\u00e9e par son identifiant \u00e0 gauche du signe =.</p> <p>Exemple</p> <p>On souhaite dans cet exemple calculer combien de minutes sont contenues dans \\(2456\\) secondes.</p> <p><pre><code>secondes = 2456\nminutes = secondes // 60\nprint(minutes)\n</code></pre> <pre><code>40\n</code></pre></p> <p>On peut affecter en une ligne plusieurs valeurs \u00e0 autant de variables. Ce type d'instruction est appel\u00e9 affectation multiple.</p> <p>Exemple</p> <p><pre><code>a, b, c = 21, 34, 55\nprint(b)\n</code></pre> <pre><code>34\n</code></pre></p> <p>On peut \u00e9galement affecter la m\u00eame valeur \u00e0 plusieurs variables.</p> <p>Exemple</p> <p><pre><code>d = e = f = 42\nprint(e)\n</code></pre> <pre><code>42\n</code></pre></p>"},{"location":"python/variables/#modifier-la-valeur-referencee-par-une-variable","title":"Modifier la valeur r\u00e9f\u00e9renc\u00e9e par une variable","text":"<p>On peut modifier la valeur r\u00e9f\u00e9renc\u00e9e par une variable en lui affectant une nouvelle valeur.</p> <p>Exemple</p> <p><pre><code># nouvelle valeur de secondes\nsecondes =  1234\n# nouvelle valeur de minutes\nminutes = secondes // 60\nprint(minutes)\n</code></pre> <pre><code>20\n</code></pre></p> <p>Une situation d\u00e9licate \u00e0 bien comprendre est la modification de la valeur d'une variable, r\u00e9alis\u00e9e en lui affectant la valeur d'une expression qui contient la m\u00eame variable : on calcule une nouvelle valeur en tenant compte de la valeur actuelle.</p> <p>Exemple</p> <p>On souhaite convertir \\(1234\\) secondes en minutes et secondes : <pre><code>secondes =  1234\nminutes = secondes // 60\n# modification de la valeur de secondes\nsecondes = secondes % 60\nprint(minutes, \"min\", secondes, \"s\")\n</code></pre> <pre><code>20 min 34 s\n</code></pre> Le membre droit de l'affectation (ligne 4)  : <code>secondes % 60</code> est d'abord \u00e9valu\u00e9 en tenant compte de la valeur actuelle de la variable <code>secondes</code>,  soit \\(1234\\).   On calcule \\(1234 \\ \\%\\  60 = 34\\) puis on affecte cette nouvelle valeur \u00e0 la variable <code>secondes</code>. L'ancienne valeur est \"oubli\u00e9e\" et la nouvelle valeur de <code>secondes</code> est d\u00e9sormais \\(34\\).</p> <ol> <li> <p>'False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'\u00a0\u21a9</p> </li> </ol>"},{"location":"python/variables_exercices/","title":"Exercices : variables","text":""},{"location":"python/variables_exercices/#exercice-1","title":"Exercice 1","text":"<p>Question 1 </p> <p>Ordonner les instructions suivantes afin qu'\u00e0 l'issue de l'ex\u00e9cution du programme, la variable <code>a</code> r\u00e9f\u00e9rence la valeur 32.</p> <p>Question 2 </p> <p>On consid\u00e8re le programme suivant : <pre><code>a = 3\na = a * a\na = a + 1\na = a * 2\n</code></pre> Parmi les valeurs suivantes, quelle est la valeur que la la variable <code>a</code> ne peut pas r\u00e9f\u00e9rencer \u00e0 l'issue de l'ex\u00e9cution du programme, m\u00eame en changeant l'ordre des instructions du programme ?</p> <ul> <li> 19</li> <li> 20</li> <li> 37</li> <li> 42</li> <li> 49</li> <li> 64</li> </ul>"},{"location":"python/variables_exercices/#exercice-2","title":"Exercice 2","text":"<p>Question </p> <p>Ordonner les instructions suivantes afin qu'\u00e0 l'issue de l'ex\u00e9cution du programme, la variable <code>a</code> r\u00e9f\u00e9rence la valeur 42.</p>"},{"location":"python/variables_questions/","title":"Questions : variables","text":""},{"location":"python/variables_questions/#1-affecter-a-une-variable-la-valeur-dune-autre-variable","title":"1. Affecter \u00e0 une variable la valeur d'une autre variable","text":""},{"location":"python/variables_questions/#question-11","title":"Question 1.1","text":"<p>Question</p> <p>Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable <code>a</code> \u00e0 l'issue de l'ex\u00e9cution du programme suivant ? <pre><code>a = 2\nb = 3\na = b\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 2</li> <li> 3</li> <li> 'a'</li> <li> 'b'</li> </ul> <ul> <li> 2</li> <li> 3</li> <li> 'a'</li> <li> 'b'</li> </ul> <p>La derni\u00e8re instruction d'affectation d'une valeur \u00e0 <code>a</code> est <code>a = b</code>, qui affecte \u00e0 <code>a</code> la valeur r\u00e9f\u00e9renc\u00e9e par <code>b</code>, c'est \u00e0 dire 3.</p>"},{"location":"python/variables_questions/#question-12","title":"Question 1.2","text":"<p>Question</p> <p>Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable <code>a</code> \u00e0 l'issue de l'ex\u00e9cution du programme suivant ? <pre><code>a = 2\nb = 3\na = b\nb = 4\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 2</li> <li> 3</li> <li> 4</li> <li> 'b'</li> </ul> <ul> <li> 2</li> <li> 3</li> <li> 4</li> <li> 'b'</li> </ul> <p>La derni\u00e8re instruction d'affectation d'une valeur \u00e0 <code>a</code> est <code>a = b</code>, qui affecte \u00e0 <code>a</code> la valeur r\u00e9f\u00e9renc\u00e9e par <code>b</code>, c'est \u00e0 dire 3. Le fait que la valeur r\u00e9f\u00e9renc\u00e9e par <code>b</code> soit ult\u00e9rieurement modifi\u00e9e n'a pas d'effet sur la valeur r\u00e9f\u00e9renc\u00e9e par <code>a</code>.</p>"},{"location":"python/variables_questions/#question-13","title":"Question 1.3","text":"<p>Question</p> <p>Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable <code>b</code> \u00e0 l'issue de l'ex\u00e9cution du programme suivant ? <pre><code>a = 2\nb = 3\na = b\nb = a\n</code></pre></p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> 2</li> <li> 3</li> <li> 'a'</li> <li> 'b'</li> </ul> <ul> <li> 2</li> <li> 3</li> <li> 'a'</li> <li> 'b'</li> </ul> <p>La derni\u00e8re instruction d'affectation d'une valeur \u00e0 <code>b</code> est <code>b = a</code>, qui affecte \u00e0 <code>b</code> la valeur r\u00e9f\u00e9renc\u00e9e par <code>a</code>, c'est \u00e0 dire 3.</p>"},{"location":"python/variables_questions/#2-modifications-successives","title":"2. Modifications successives","text":""},{"location":"python/variables_questions/#question-21","title":"Question 2.1","text":"<p>Question</p> <p>Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable <code>a</code> \u00e0 l'issue de l'ex\u00e9cution du programme suivant ? <pre><code>a = 5\na = a * 2\na = a * 3\n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> 5</li> <li> 10</li> <li> 15</li> <li> 30</li> </ul> <ul> <li> 5</li> <li> 10</li> <li> 15</li> <li> 30</li> </ul> <p>Chacune des instructions modifie successivement la valeur r\u00e9f\u00e9renc\u00e9e par <code>a</code>. La valeur r\u00e9f\u00e9renc\u00e9e est d'abord 5, puis 10 et enfin 30.</p>"},{"location":"python/variables_questions/#question-22","title":"Question 2.2","text":"<p>Question</p> <p>Quelle est la valeur r\u00e9f\u00e9renc\u00e9e par la variable <code>a</code> \u00e0 l'issue de l'ex\u00e9cution du programme suivant ? <pre><code>a = 3\nb = 4\na = a + b\nb = b + 1\na = a + b\n</code></pre></p> Propositions de r\u00e9ponsesSolutionsArguments <ul> <li> 7</li> <li> 8</li> <li> 10</li> <li> 12</li> </ul> <ul> <li> 7</li> <li> 8</li> <li> 10</li> <li> 12</li> </ul> <p>Apr\u00e8s ex\u00e9cution de la ligne 3, la valeur r\u00e9f\u00e9renc\u00e9e par <code>a</code> est 7. Apr\u00e8s ex\u00e9cution de la ligne 4, la valeur r\u00e9f\u00e9renc\u00e9e par <code>b</code> est 5. Apr\u00e8s ex\u00e9cution de la ligne 5, la valeur r\u00e9f\u00e9renc\u00e9e par <code>a</code> est 12.</p>"},{"location":"python/variables_questions/#3-validite-des-identifiants","title":"3. Validit\u00e9 des identifiants","text":""},{"location":"python/variables_questions/#question-31","title":"Question 3.1","text":"<p>Question</p> <p>Parmi les noms suivants, lequel ne peut pas \u00eatre l'identifiant d'une variable ?  </p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> <code>secondes</code></li> <li> <code>2ndes</code></li> <li> <code>minutes_secondes</code></li> <li> <code>minutes_2ndes</code></li> </ul> <ul> <li> <code>secondes</code></li> <li> <code>2ndes</code></li> <li> <code>minutes_secondes</code></li> <li> <code>minutes_2ndes</code></li> </ul> <p>L'identifiant d'une variable ne peut pas commencer par un chiffre.</p>"},{"location":"python/variables_questions/#question-32","title":"Question 3.2","text":"<p>Question</p> <p>Parmi les noms suivants, lesquels peuvent \u00eatre l'identifiant d'une variable ?  </p> Propositions de r\u00e9ponsesSolutionArguments <ul> <li> <code>roi</code></li> <li> <code>d@me</code></li> <li> <code>as</code></li> <li> <code>dix</code></li> <li> <code>10_pique</code></li> <li> <code>_10</code></li> </ul> <ul> <li> <code>roi</code></li> <li> <code>d@me</code></li> <li> <code>as</code></li> <li> <code>dix</code></li> <li> <code>10_pique</code></li> <li> <code>_10</code></li> </ul> <p>L'identifiant d'une variable ne peut pas commencer par un chiffre, ni contenir de caract\u00e8re sp\u00e9cial comme <code>@</code>. Enfin <code>as</code> est un mot r\u00e9serv\u00e9 du langage python.</p>"},{"location":"snt/objets_connectes/","title":"Informatique embarqu\u00e9e et objets connect\u00e9s","text":"Programme au BO  Contenus Capacit\u00e9s attendues Syst\u00e8mes informatiques embarqu\u00e9s Identifier des algorithmes de contr\u00f4le des comportements physiques \u00e0 travers les donn\u00e9es des capteurs, l\u2019IHM et les actions des actionneurs dans des syst\u00e8mes courants. Interface homme-machine (IHM) R\u00e9aliser une IHM simple d\u2019un objet connect\u00e9. Commande d\u2019un actionneur, acquisition des donn\u00e9es d\u2019un capteur \u00c9crire des programmes simples d\u2019acquisition de donn\u00e9es ou de commande d\u2019un actionneur."},{"location":"snt/objets_connectes_seq1_intro/","title":"Pr\u00e9sentation de la carte programmable et de l'\u00e9diteur de code","text":""},{"location":"snt/objets_connectes_seq1_intro/#quest-ce-quune-carte-microbit","title":"Qu'est-ce qu'une carte micro:bit ?","text":"<p>La carte BBC micro:bit est une carte micro-contr\u00f4leur de 5 cm sur 4 cm. Elle se programme \u00e0 l'aide de diff\u00e9rents langages et notamment Python.</p> <p> </p>"},{"location":"snt/objets_connectes_seq1_intro/#description-des-composants","title":"Description des composants","text":"Composants visibles \u00e0 l'avant : <ul> <li>25 LEDs rouges, programmables pour afficher du texte qui d\u00e9file ou des images ; elles sont aussi des capteurs de lumi\u00e8re</li> <li>deux boutons poussoirs A et B programmables,</li> <li>des broches de connexion.</li> </ul>  Composants visibles \u00e0 l'arri\u00e8re :  <ol> <li>une antenne radio et bluetooth,</li> <li>un micro-processeur et capteur de temp\u00e9rature, </li> <li>un magn\u00e9tom\u00e8tre (boussole) permettant de mesurer des champs magn\u00e9tiques,</li> <li>un acc\u00e9l\u00e9rom\u00e8tre permettant de capter des mouvements en trois dimensions. Il d\u00e9termine le tangage, le roulis et le lacet.</li> <li>des broches de connexion pour contr\u00f4ler des composants externes</li> <li>un port micro-USB permettant d'alimenter la carte et de transf\u00e9rer des programmes,</li> <li>une led qui sert de t\u00e9moin lumineux pour l'alimentation de la carte ou le t\u00e9l\u00e9chargement de programme,</li> <li>un bouton de r\u00e9initialisation,</li> <li>un connecteur d'alimentation (2 piles AAA - 3V) : l'alimentation se fait par le port micro-USB lorsqu'il est connect\u00e9 \u00e0 un ordinateur ou \u00e0 l'aide de piles,  </li> <li>une puce d'interface USB.</li> </ol>"},{"location":"snt/objets_connectes_seq1_intro/#lediteur-mu","title":"L'\u00e9diteur Mu","text":"<p>Ouvrir l'\u00e9diteur de code Mu disponible sur les ordinateurs du lyc\u00e9e.  Cliquer sur   et choisir micro:bit. Ce logiciel va permettre de saisir les programmes en python, de les v\u00e9rifier et de les envoyer (flasher) sur la carte micro:bit.</p> <p>Python poss\u00e8de de nombreuses biblioth\u00e8ques sp\u00e9cialis\u00e9es. Pour contr\u00f4ler la carte micro:bit avec Python, il faut importer la biblioth\u00e8que <code>microbit</code> avec cette ligne au d\u00e9but de chaque programme : <pre><code>from microbit import *\n</code></pre></p>"},{"location":"snt/objets_connectes_seq1_parcours_cible/","title":"Parcours : simuler l'atteinte d'une cible sur un plan inclin\u00e9","text":"<p>L'objectif est de r\u00e9aliser un programme permettant de d\u00e9placer un point lumineux sur la carte en l'inclinant et de viser un pixel clignotant.</p> <p>Le parcours permet de d\u00e9couvrir tous les \u00e9l\u00e9ments n\u00e9cessaires : </p> <ul> <li> <p>les instructions d'affichage sur la carte micro:bit </p> </li> <li> <p>les instructions usuelles de programmation suivantes : </p> <ul> <li>l'import de fonction(s) depuis un module</li> <li>la boucle non born\u00e9e (<code>while</code>) et ici la boucle infinie (<code>while True</code>)</li> <li>la g\u00e9n\u00e9ration d'entiers al\u00e9atoires avec la fonction <code>randint</code></li> <li>l'instruction conditionnelle (<code>if ... elif ... else ...</code>)</li> </ul> </li> <li> <p>les instructions li\u00e9es \u00e0 l'acc\u00e9l\u00e9rom\u00e8tre de la carte micro:bit.</p> </li> </ul>"},{"location":"snt/objets_connectes_seq1_parcours_cible/#exercice-1-afficher-une-image","title":"Exercice 1. Afficher une image","text":"<p>L'objectif est d'apprendre \u00e0 afficher une image sur la micro:bit en allumant certaines LED (ou pixel). </p>"},{"location":"snt/objets_connectes_seq1_parcours_cible/#11-afficher-une-image-predefinie","title":"1.1 Afficher une image pr\u00e9d\u00e9finie","text":"<p>P R I M M</p> <p></p> <p>Voici un premier programme :  <pre><code>from microbit import *\ndisplay.show(Image.YES)\n</code></pre></p> <ul> <li>Saisir ce programme, cliquer sur <code>V\u00e9rifier</code> et s'il n'y a pas d'erreur d\u00e9tect\u00e9e, le <code>flasher</code> sur une carte connect\u00e9e \u00e0 l'ordinateur. Que constate-t-on ?  </li> <li>Remplacer dans le programme le mot YES par l'un des mots suivants : CHESSBOARD - DIAMOND - HAPPY - HEART - NO - SAD - SQUARE </li> <li>Choisir l'une des images et la reproduire sur une feuille \u00e0 l'aide d'un quadrillage de 5 carreaux sur 5.</li> </ul>"},{"location":"snt/objets_connectes_seq1_parcours_cible/#12-afficher-une-image-personnalisee","title":"1.2 Afficher une image personnalis\u00e9e","text":"<p>P R I M M</p> <ul> <li>Saisir le programme suivant et le flasher sur la carte. Que constate-t-on ? \u00c0 quoi correspondent les 0 et les 9 ?</li> </ul> <pre><code>from microbit import *\nmon_image = Image(\"90909:\"\n                  \"09990:\"\n                  \"99999:\"\n                  \"09990:\"\n                  \"90909\")\ndisplay.show(mon_image)\n</code></pre> <ul> <li>Dessiner sur une feuille \u00e0 l'aide d'un quadrillage de 5 carreaux sur 5 une image personnelle et modifier le programme pr\u00e9c\u00e9dent pour la faire appara\u00eetre sur la carte micro:bit.</li> </ul>"},{"location":"snt/objets_connectes_seq1_parcours_cible/#exercice-2-faire-clignoter-une-led","title":"Exercice 2. Faire clignoter une LED","text":""},{"location":"snt/objets_connectes_seq1_parcours_cible/#21-allumer-ou-eteindre-des-led","title":"2.1 Allumer ou \u00e9teindre des LED","text":"<p>P R I M M</p> <p>Info</p> <p> </p> <ul> <li>Chaque LED a des coordonn\u00e9es enti\u00e8res de (0, 0) dans le coin sup\u00e9rieur gauche \u00e0 (4, 4) dans le coin inf\u00e9rieur droit. Le premier nombre est l'abscisse (de 0 \u00e0 4) et le second est l'ordonn\u00e9e (de 0 \u00e0 4).</li> <li>La luminosit\u00e9 de chaque LED peut \u00eatre d\u00e9finie, de 0 (le pixel est alors d\u00e9sactiv\u00e9) \u00e0 9 (niveau le plus lumineux).  </li> <li>L'instruction <code>display.set_pixel(x, y, lum)</code> allume/\u00e9teint le pixel aux coordonn\u00e9es (x, y) avec un niveau de luminosit\u00e9 <code>lum</code> (entre 0 et 9). La valeur 0 \u00e9teint le pixel.</li> </ul> <ul> <li>Quelle est l'instruction qui permet d'allumer la LED positionn\u00e9e au centre de l'\u00e9cran avec l'intensit\u00e9 maximale ? Tester l'instruction propos\u00e9e. </li> </ul>"},{"location":"snt/objets_connectes_seq1_parcours_cible/#22-faire-clignoter-une-led-de-la-carte","title":"2.2 Faire clignoter une LED de la carte","text":"<p>P R I M M</p> <p></p> <p>L'objectif est de choisir l'une des LED de la carte et la faire clignoter. L'id\u00e9e consiste \u00e0 allumer la LED pendant un court instant, puis l'\u00e9teindre pendant un court instant et de recommencer en boucle. Pour cela on cr\u00e9e une boucle infinie avec l'instruction <code>while True</code>. Pour faire attendre pendant un court instant on ins\u00e8re l'instruction <code>sleep(500)</code>, qui signifie attendre 500 millisecondes, soit une demi-seconde.</p> <ul> <li>Reproduire et compl\u00e9ter le programme suivant pour faire clignoter une LED (\u00e0 choisir) :  </li> </ul> <pre><code>from microbit import *\nwhile True:\n    # choisir un pixel \u00e0 allumer\n    display.set_pixel(..., ..., 9)    # \u00e0 compl\u00e9ter\n    sleep(500)\n    # \u00e9teindre le m\u00eame pixel\n    display.set_pixel(..., ..., ...)    # \u00e0 compl\u00e9ter\n    sleep(500)\n</code></pre> <ul> <li>V\u00e9rifier la syntaxe du programme et, si tout est correct, le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur.  L'effet produit est-il celui attendu ?</li> </ul> <p>Question</p> <p>Pour acc\u00e9l\u00e9rer la vitesse de clignotement, il faut: </p> Propositions de r\u00e9ponsesSolution <ul> <li> augmenter la valeur du param\u00e8tre de la fonction <code>sleep</code>, par exemple \u00e9crire en lignes 5 et 8 <code>sleep(800)</code></li> <li> diminuer la valeur du param\u00e8tre de la fonction <code>sleep</code>, par exemple \u00e9crire en lignes 5 et 8 <code>sleep(200)</code></li> </ul> <ul> <li> augmenter la valeur du param\u00e8tre de la fonction <code>sleep</code>, par exemple \u00e9crire en lignes 5 et 8 <code>sleep(800)</code></li> <li> diminuer la valeur du param\u00e8tre de la fonction <code>sleep</code>, par exemple \u00e9crire en lignes 5 et 8 <code>sleep(200)</code></li> </ul>"},{"location":"snt/objets_connectes_seq1_parcours_cible/#23-allumer-une-led-choisie-aleatoirement","title":"2.3 Allumer une LED choisie al\u00e9atoirement","text":"<p>P R I M M</p> <p>Info</p> <p>Le module <code>random</code> contient la fonction <code>randint(min, max)</code> qui renvoie un entier entre <code>min</code> et <code>max</code> compris. Pour importer cette fonction, \u00e9crire en d\u00e9but de programme <code>from random import randint</code>.</p> <ul> <li>Lire le programme suivant et anticiper son fonctionnement. </li> </ul> <pre><code>from microbit import *\nfrom random import randint\ndisplay.show(randint(1, 6))\n</code></pre> <ul> <li> <p>Donner un affichage que l'ex\u00e9cution de ce programme pourrait produire. </p> </li> <li> <p>Donner un affichage que l'ex\u00e9cution de ce programme ne pourrait pas produire. Pourquoi est-on s\u00fbr qu'il ne pourrait pas se produire ?</p> </li> <li> <p>Lire le programme suivant et anticiper son fonctionnement.  <pre><code>from microbit import *\nfrom random import randint\ndisplay.set_pixel(randint(1, 3), randint(1, 3), 9) \n</code></pre></p> </li> <li> <p>Dessiner un affichage que l'ex\u00e9cution de ce programme pourrait produire. </p> </li> <li> <p>Dessiner un affichage que l'ex\u00e9cution de ce programme ne pourrait pas produire. Pourquoi est-on s\u00fbr qu'il ne pourrait pas se produire ?</p> </li> <li> <p>Flasher le programme sur la carte et v\u00e9rifier. (On peut relancer le programme en appuyant sur le bouton de r\u00e9initialisation \u00e0 l'arri\u00e8re).</p> </li> </ul>"},{"location":"snt/objets_connectes_seq1_parcours_cible/#24-faire-clignoter-une-led-choisie-aleatoirement","title":"2.4 Faire clignoter une LED choisie al\u00e9atoirement","text":"<p>P R I M M</p> <p>L'objectif est d'allumer al\u00e9atoirement une LED de la carte et de la faire clignoter.  </p> <p>On a vu qu'on peut utiliser la fonction <code>randint(min, max)</code> pour choisir al\u00e9atoirement un pixel. Cette fonction renvoie une valeur al\u00e9atoire : deux appels successifs \u00e0 cette fonction vont probablement renvoyer des valeurs diff\u00e9rentes. Pour pouvoir allumer et \u00e9teindre la m\u00eame LED pour la faire clignoter, on m\u00e9morise les coordonn\u00e9es dans des variables <code>x</code>et <code>y</code>. </p> <ul> <li> <p>Reproduire et compl\u00e9ter le programme suivant pour faire clignoter une LED (choisie al\u00e9atoirement par le programme) : <pre><code>from microbit import *\nfrom random import randint\n# coordonn\u00e9es de la LED \u00e0 allumer\nx = randint(0, ...)    # \u00e0 compl\u00e9ter\ny = randint(0, ...)    # \u00e0 compl\u00e9ter\nwhile True :\n    # on allume la LED pendant 500 ms\n    display.set_pixel(..., ..., ...)    # \u00e0 compl\u00e9ter\n    ...    # \u00e0 compl\u00e9ter\n    # on \u00e9teint la LED pendant 500 ms\n    display.set_pixel(..., ..., ...)    # \u00e0 compl\u00e9ter\n    ...    # \u00e0 compl\u00e9ter\n</code></pre></p> </li> <li> <p>V\u00e9rifier la syntaxe du programme et, si tout est correct, le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur.  L'effet produit est-il celui attendu ?</p> </li> </ul>"},{"location":"snt/objets_connectes_seq1_parcours_cible/#exercice-3-deplacer-un-point-lumineux-avec-linclinaison-de-la-carte","title":"Exercice 3 D\u00e9placer un point lumineux avec l'inclinaison de la carte","text":"<p>P R I M M</p> <p>On souhaite d\u00e9placer un point lumineux sur l'\u00e9cran en fonction des valeurs des inclinaisons gauche-droite et avant-arri\u00e8re de la carte, comme une bille qui se d\u00e9placerait sur un plan inclin\u00e9. </p> <p>Parmi ses capteurs, la carte micro:bit comporte un acc\u00e9l\u00e9rom\u00e8tre, d\u00e9sign\u00e9 par <code>accelerometer</code>.  Il permet de conna\u00eetre l'orientation de la carte selon 3 axes :  </p> <ul> <li><code>x</code>, l\u2019inclinaison de gauche \u00e0 droite (roulis),</li> <li><code>y</code>, l\u2019inclinaison d\u2019avant en arri\u00e8re (tangage),</li> <li><code>z</code>, le mouvement haut et bas.</li> </ul> <p>On utilise la valeur d\u00e9tect\u00e9e par <code>accelerometer.get_x()</code> (inclinaison gauche-droite) et <code>accelerometer.get_y()</code> (inclinaison avant-arri\u00e8re) et selon leur valeur, on donne \u00e0 l'abscisse <code>x</code> et \u00e0 l'ordonn\u00e9e <code>y</code> d'un pixel allum\u00e9 la valeur 0, 1, 2, 3 ou 4. Par exemple, voici la valeur que l'on peut donner \u00e0 <code>x</code> selon la valeur de <code>accelerometer.get_x()</code> : </p> <p></p> <ul> <li>Compl\u00e9ter le programme suivant pour qu'il respecte les indications pr\u00e9c\u00e9dentes pour d\u00e9terminer la valeur de <code>x</code>.</li> </ul> <pre><code>from microbit import *\n\nx = 2\ny = 2\n\nwhile True:\n    display.set_pixel(x, y, 0)\n    acc_x = accelerometer.get_x()\n    if acc_x &gt; ...:    # \u00e0 compl\u00e9ter\n        x = 4\n    elif acc_x &gt; 150:\n        x = ...    # \u00e0 compl\u00e9ter\n    elif acc_x &gt; -150:\n        x = ...    # \u00e0 compl\u00e9ter\n    elif acc_x &gt; -450: \n        x = 1\n    else:\n        x = ...    # \u00e0 compl\u00e9ter\n    display.set_pixel(x, y, 9)\n    sleep(100)\n</code></pre> <ul> <li>Saisir le programme et le flasher sur une carte. V\u00e9rifier si le comportement anticip\u00e9 est conforme \u00e0 celui observ\u00e9.  </li> <li>Compl\u00e9ter le programme en proc\u00e9dant de fa\u00e7on analogue pour d\u00e9terminer la valeur que doit en prendre l'ordonn\u00e9e du pixel <code>y</code> selon les valeurs de <code>accelerometer.get_y()</code></li> <li>V\u00e9rifier la syntaxe du programme et, si tout est correct, le flasher sur une carte connect\u00e9e \u00e0 l'ordinateur.  L'effet produit est-il celui attendu ?</li> <li>En pla\u00e7ant un symbole <code>#</code> en d\u00e9but de ligne 7, celle-ci sera ignor\u00e9e lors de l'ex\u00e9cution du programme. Quelle influence cela aura-t-il sur le fonctionnement du programme ? Anticiper ce fonctionnement, et v\u00e9rifier sa r\u00e9ponse en ex\u00e9cutant le programme modifi\u00e9.</li> </ul>"},{"location":"snt/objets_connectes_seq1_parcours_cible/#defi-cible-sur-plan-incline","title":"D\u00e9fi : Cible sur plan inclin\u00e9","text":"<p>P R I M M</p> <p>Fonctionnement attendu</p> <ul> <li>Un pixel cible, d\u00e9termin\u00e9 al\u00e9atoirement, clignote sur l'\u00e9cran de 25 LED de la micro:bit.  </li> <li>Le joueur \"d\u00e9place\" un point lumineux positionn\u00e9 initialement au centre de la carte en inclinant la carte micro:bit (avant-arri\u00e8re, gauche-droite)  </li> <li>Lorsque le point lumineux dirig\u00e9 par le joueur et le pixel clignotant se superposent, la partie est gagn\u00e9e : un  s'affiche et le jeu s'arr\u00eate.</li> </ul> <p>\u00c9crire un programme qui respecte le fonctionnement d\u00e9crit ci-dessus.  On testera au fur et \u00e0 mesure les diff\u00e9rentes fonctionnalit\u00e9s. </p> En option <ul> <li>Faire clignoter le  final. On pourra consulter le paragraphe Animer des images.</li> </ul>"},{"location":"snt/objets_connectes_seq1_parcours_radio/","title":"Parcours : communication radio","text":"<p>L'objectif est de r\u00e9aliser un programme permettant de transmettre par ondes radio une information mesur\u00e9e par un capteur sur une carte micro:bit, \u00e0 une autre carte micro:bit.</p> <p>Info</p> Instructions Effet <code>import radio</code> Importe la biblioth\u00e8que <code>radio</code> <code>radio.on()</code> Active la fonctionnalit\u00e9 radio <code>radio.send(message)</code> Envoie un message de type chaine de caract\u00e8res <code>radio.receive()</code> Prend pour valeur la chaine de caract\u00e8res re\u00e7ue <code>radio.config(group=...)</code> Permet de choisir un groupe entre 0 et 255."},{"location":"snt/objets_connectes_seq1_parcours_radio/#exercice-1-envoyer-un-signal","title":"Exercice 1. Envoyer un signal","text":"<p>P R I M M</p> <p>Ce programme n\u00e9cessite deux cartes : un appui sur un bouton de la carte \u00e9mettrice provoque un affichage sur la carte r\u00e9ceptrice.</p> <p>Programme sur la carte \u00e9mettrice <pre><code>from microbit import *\nimport radio\nradio.on()\nradio.config(group=...) #choisir une valeur entre 0 et 255\nwhile True:\n    if button_a.was_pressed():\n        radio.send(\"A\")\n    elif button_b.was_pressed():\n        radio.send(\"B\")\n</code></pre></p> <p>Programme sur la carte r\u00e9ceptrice <pre><code>from microbit import *\nimport radio\nradio.on()\nradio.config(group=...) #choisir la m\u00eame valeur que la carte \u00e9mettrice\nwhile True:\n    reception = radio.receive()\n    if reception == \"A\":\n        display.show(Image.YES)\n        sleep(200)\n    elif reception == \"B\":\n        display.show(Image.NO)\n        sleep(200)\n    display.clear()\n</code></pre> Saisir les programmes sur deux cartes diff\u00e9rentes, cliquer sur <code>V\u00e9rifier</code> et s'il n'y a pas d'erreur d\u00e9tect\u00e9e, les <code>flasher</code> sur les cartes. Que constate-t-on ? Que faut-il faire pour voir s'afficher quelque chose ?  </p> <p>Quels sont les capteurs et actionneurs utilis\u00e9s sur chaque carte par ces programmes ?  Quel est le r\u00f4le de la derni\u00e8re instruction ? (ligne 13, carte r\u00e9ceptrice)</p>"},{"location":"snt/objets_connectes_seq1_parcours_radio/#exercice-2-envoyer-une-mesure","title":"Exercice 2. Envoyer une mesure","text":"<p>L'objectif est de mesurer la temp\u00e9rature avec une carte et de l'envoyer \u00e0 une autre carte par radio.</p> <p>La carte micro:bit int\u00e8gre un capteur de temp\u00e9rature. Il n'est pas tr\u00e8s pr\u00e9cis dans la mesure o\u00f9 il est soud\u00e9 sur la carte elle-m\u00eame, \u00e0 proximit\u00e9 du processeur ; il est donc perturb\u00e9 par l'\u00e9chauffement provoqu\u00e9 par le fonctionnement de la carte.</p> <p>Info</p> Instructions Effet <code>temperature()</code> renvoie la valeur de la temp\u00e9rature"},{"location":"snt/objets_connectes_seq1_parcours_radio/#21-afficher-la-temperature","title":"2.1 Afficher la temp\u00e9rature","text":"<p>P R I M M</p> <p>Voici un programme qui ne n\u00e9cessite qu'une carte :</p> <p><pre><code>from microbit import *\n\nwhile True:\n    if button_a.was_pressed():\n        display.scroll(temperature())\n</code></pre> Saisir ce programme, cliquer sur <code>V\u00e9rifier</code> et s'il n'y a pas d'erreur d\u00e9tect\u00e9e, le <code>flasher</code> sur une carte connect\u00e9e \u00e0 un ordinateur. Que constate-t-on ? Que faut-il faire pour voir s'afficher une valeur ? Que repr\u00e9sente cette valeur ? Quels sont les capteurs et actionneurs utilis\u00e9s  par ce programme ?   </p>"},{"location":"snt/objets_connectes_seq1_parcours_radio/#22-envoyer-la-temperature-a-une-autre-carte","title":"2.2 Envoyer la temp\u00e9rature \u00e0 une autre carte","text":"<p>P R I M M</p> <p>Ce programme n\u00e9cessite deux cartes. Voici le programme \u00e0 saisir sur la carte \u00e9mettrice :</p> <pre><code>from microbit import *\nimport radio\nradio.on()\nradio.config(group=...)\nwhile True:\n    t = temperature()\n    radio.send(str(t))\n    sleep(500)\n</code></pre> <p>Voici le programme \u00e0 saisir sur la carte r\u00e9ceptrice:</p> <pre><code>from microbit import *\nimport radio\nradio.on()\nradio.config(group=...)\nwhile True:\n    reception = radio.receive()\n    if reception:\n        display.scroll(reception)\n        sleep(500)\n</code></pre> <p>Si les tests montrent que tout fonctionne, alimenter la carte \u00e9mettrice avec des piles et faire varier la temp\u00e9rature mesur\u00e9e en rapprochant la carte d'une source chaude ou froide. La carte r\u00e9ceptrice affiche-t-elle des modifications ?</p> <p>Quels sont les capteurs et actionneurs utilis\u00e9s sur chaque carte par ces programmes ?   </p>"},{"location":"snt/objets_connectes_seq1_parcours_radio/#defi-compteur-dentreessorties","title":"D\u00e9fi : Compteur d'entr\u00e9es/sorties","text":"<p>P R I M M</p> <p>Fonctionnement attendu</p> <ul> <li>Une carte sert de compteur de personnes dans une salle : \u00e0 chaque entr\u00e9e d'une nouvelle personne on appuie sur le bouton A, et \u00e0 chaque sortie on appuie sur le bouton B.  </li> <li>L'appui sur un bouton provoque l'envoi d'une information par radio \u00e0 une autre carte  </li> <li>La carte r\u00e9ceptrice affiche le nombre de personnes pr\u00e9sentes dans la salle : ce nombre augmente ou diminue de 1 \u00e0 chaque appui sur un bouton de la carte \u00e9mettrice.</li> </ul> <p>\u00c9crire un programme qui respecte le fonctionnement d\u00e9crit ci-dessus. On testera au fur et \u00e0 mesure les diff\u00e9rentes fonctionnalit\u00e9s.</p> En option <ul> <li>Faire clignoter un symbole avertissant de l'atteinte de la jauge maximale de la salle.</li> </ul>"},{"location":"snt/snt%20copie/","title":"essai","text":"<p>test</p> <pre><code>\ngraph TD\nA --&gt; B</code></pre> <p>Info</p> <pre><code>digraph G {\nrankdir=LR\nEarth [peripheries=2]\nMars\nEarth -&gt; Mars\n}\n</code></pre> <pre><code>digraph hierarchy {\nnodesep=1 // Increases the separation between nodes\n\nnode [color=Grey,fontname=Optima,shape=box] // All nodes will this shape and colour\nedge [color=Lightblue] // All the lines look like this\n\nTest-&gt;{rep1 rep2 rep3};\nrep1-&gt;\"fichier1.txt\";\n\nrep2-&gt;rep5;\nrep3-&gt;{rep6 rep7};\nrep7-&gt;\"fichier1.txt \";\n{rank=same;  } // Put them on the same level\n}\n</code></pre>"},{"location":"thymio/th_scratch/","title":"Programmer Thymio avec Scratch 3","text":"<p>Thymio suite propose de programmer Thymio avec une extension de Scratch 3. Cette extension ajoute une s\u00e9rie de blocs pour programmer le robot.</p> <p>Pour programmer Thymio avec Scratch : </p> <ul> <li>Ins\u00e9rer le dongle USB de Thymio ou connecter Thymio par c\u00e2ble USB \u00e0 un ordinateur  </li> <li>Allumer Thymio (appui sur le bouton central)  </li> <li>Lancer Thymio suite  </li> <li>Choisir Scratch parmi les applications propos\u00e9es  </li> </ul> <p></p> <ul> <li>S\u00e9lectionner le Thymio \u00e0 utiliser </li> <li>Cliquer sur Programmer avec Scratch</li> </ul> <p>L'interface de Scratch s'ouvre dans un navigateur. Dans la liste des types de blocs sur la gauche, l'ic\u00f4ne Thymio permet de disposer de nouveaux blocs d'instruction. Ces blocs n'agissent pas sur le lutin de Scratch mais sur le Thymio connect\u00e9 !</p> <p> </p> <p>Pour tester si tout fonctionne, double-cliquer sur une instruction, par exemple :   ou </p> <p>Si Thymio change de couleur ou pivote l\u00e9g\u00e8rement, c'est que tout fonctionne correctement !</p>"},{"location":"thymio/thymio/","title":"Le robot Thymio","text":""},{"location":"thymio/thymio/#presentation","title":"Pr\u00e9sentation","text":"<p>Thymio est un robot \u00e9ducatif. Il a \u00e9t\u00e9 d\u00e9velopp\u00e9 en 2011 par l\u2019\u00c9cole Polytechnique F\u00e9d\u00e9rale de Lausanne.  </p> <p></p> <p>Thymio poss\u00e8de deux roues qui lui permettent de se d\u00e9placer. Il est dot\u00e9 de LEDS pour l'\u00e9clairer de toutes les couleurs. Il est \u00e9quip\u00e9 d'un micro et d'un haut-parleur, et de capteurs divers : capteurs de distance ou de luminosit\u00e9, capteur de temp\u00e9rature, acc\u00e9l\u00e9rom\u00e8tre. Il poss\u00e8de \u00e9galement des attaches  LEGO \u00ae et un crochet pour ajouter des accessoires.</p>"},{"location":"thymio/thymio/#modes-pre-programmes","title":"Modes pr\u00e9-programm\u00e9s","text":"<p>Il poss\u00e8de six comportements pr\u00e9-programm\u00e9s accessibles d\u00e8s l\u2019ouverture de la bo\u00eete et sans programmation. </p>"},{"location":"thymio/thymio/#programmer-thymio","title":"Programmer Thymio","text":"<p>Thymio est fourni avec une suite logicielle, Thymio suite permettant de programmer le robot : - en VPL (langage de programmation visuel) - avec Blockly (langage de programmation par blocs) - avec Scratch (langage de programmation par blocs) - avec Aseba (langage de programmation textuel)  </p> <p>Une autre interface de programmation est \u00e9galement disponible : Blockly4Thymio. Cette interface de programmation par blocs dispose d'instructions r\u00e9dig\u00e9es en fran\u00e7ais, faciles \u00e0 appr\u00e9hender, et en partie diff\u00e9rentes du jeu d'instruction de Blockly. On trouvera par exemple des instructions permettant d'avancer d'une certaine longueur ou de tourner d'une certaine mesure d'angle. </p> <p>\u00c0 noter : la version 13 du firmware du Thymio ne semble pas fonctionner avec Blockly4Thymio, mais il est possible de revenir \u00e0 la version 12 qui assure la compatibilit\u00e9.</p>"},{"location":"thymio/thymio/#reglage-calibrage-de-thymio","title":"R\u00e9glage / calibrage de Thymio","text":"<p>Les versions 9 et suivantes du firmware permettent de r\u00e9aliser des r\u00e9glages sur le Thymio. Pour entrer dans le menu de configuration, appuyer 3 secondes sur les boutons gauche et droite d'un Thymio non connect\u00e9 \u00e0 un ordinateur (ni c\u00e2ble, ni dongle USB). </p> <p>Trois nouvelles couleurs (orange, vert clair, mauve) indiquent les trois modes que l'on peut faire d\u00e9filer avec les fl\u00e8ches gauche/droite et s\u00e9lectionner avec le bouton central.</p>"},{"location":"thymio/thymio/#reglage-du-volume","title":"R\u00e9glage du volume","text":"<ul> <li>Choisir la couleur orange du Thymio et s\u00e9lectionner ce mode en appuyant sur le bouton central.</li> </ul> <ul> <li>Appuyer sur les boutons \"avant\" et \"arri\u00e8re\" pour s\u00e9lectionner le niveau sonore souhait\u00e9. </li> <li>\u00c9teindre le Thymio pour sauvegarder le r\u00e9glage.  </li> </ul>"},{"location":"thymio/thymio/#reglage-des-vitesses-des-2-moteurs","title":"R\u00e9glage des vitesses des 2 moteurs","text":"<p>Ce r\u00e9glage peut s'av\u00e9rer n\u00e9cessaire si Thymio n'avance pas \"droit\".</p> <ul> <li>Choisir le mode vert clair dans le menu des modes de r\u00e9glage. Les boutons \"avant\" et \"arri\u00e8re\" font bouger le robot vers l'avant et vers l'arri\u00e8re \u00e0 diff\u00e9rentes vitesses suivant le nombre de pressions. Essayer d'aller \u00e0 des vitesses diff\u00e9rentes (niveau 1 et 2) pour le calibrer.</li> <li>Les boutons \"gauche\" et \"droite\" permettent d'augmenter ou de diminuer la correction. Si le robot va vers la droite, appuyer sur le bouton gauche pour corriger la direction jusqu'\u00e0 ce qu'il aille droit, et inversement.</li> <li>Appuyer sur le bouton central pour arr\u00eater les moteurs et enregistrer les valeurs de correction dans le robot.</li> <li>\u00c9teindre le robot.</li> </ul>"},{"location":"thymio/thymio/#appairage-thymio-dongle-usb","title":"Appairage Thymio-dongle USB","text":"<p>Ce r\u00e9glage est \u00e0 r\u00e9aliser une fois lorsqu'on utilise plusieurs Thymio et que l'on souhaite que chaque Thymio communique avec un seul dongle USB.</p> <ul> <li>Commencer avec un Thymio \u00e9teint, non connect\u00e9 \u00e0 l\u2019ordinateur via le c\u00e2ble USB.</li> <li>Brancher le dongle dans un port USB de l\u2019ordinateur</li> </ul> <p></p> <ul> <li>Lancer WirelessThymio Network Configurator (t\u00e9l\u00e9charg\u00e9 avec Aseba ou Thymio Suite)</li> <li>Choisir un canal : 0, 1 ou 2</li> <li>Choisir un identificateur de r\u00e9seau (un identificateur diff\u00e9rent pour chaque Thymio)</li> <li>Ne pas modifier l'identificateur de n\u0153ud du dongle</li> <li>Allumer le Thymio</li> <li>Sur l\u2019ordinateur, cliquer sur activer le pairage</li> <li>Appuyer sur les fl\u00e8ches droite et gauche du Thymio  pendant 3 s (menu r\u00e9glages) puis appuyer sur touche droite jusqu\u2019\u00e0 trouver le mode Mauve, valider avec le bouton central</li> <li>Le dongle USB et le Thymio doivent clignoter \u00e0 la m\u00eame fr\u00e9quence : si c'est le cas : <ul> <li>\u00c9teindre le Thymio</li> <li>Sur l\u2019ordinateur, cliquer sur enregistrer dans le dongle USB</li> </ul> </li> <li>Fermer WirelessThymio Network Configurator, m\u00eame s\u2019il y a un autre Thymio \u00e0 configurer.</li> </ul>"}]}