{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue sur Carnets.info Ce site pr\u00e9sente quelques documents utilis\u00e9s dans le cadre de l'enseignement de NSI 1 , en 1\u00e8re g\u00e9n\u00e9rale, de SNT 2 en 2nde, ou en formation. Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Les calepyns Il s'agit de notebooks Jupyter, mis en ligne gr\u00e2ce \u00e0 fastpages . Num\u00e9rique et sciences informatiques \u21a9 Sciences du num\u00e9rique et technologie \u21a9","title":"Accueil"},{"location":"#bienvenue-sur-carnetsinfo","text":"Ce site pr\u00e9sente quelques documents utilis\u00e9s dans le cadre de l'enseignement de NSI 1 , en 1\u00e8re g\u00e9n\u00e9rale, de SNT 2 en 2nde, ou en formation.","title":"Bienvenue sur Carnets.info"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#les-calepyns","text":"Il s'agit de notebooks Jupyter, mis en ligne gr\u00e2ce \u00e0 fastpages . Num\u00e9rique et sciences informatiques \u21a9 Sciences du num\u00e9rique et technologie \u21a9","title":"Les calepyns"},{"location":"about/","text":"Ab ultima quamvis tunc aqua dedit deserta Regia fontem turba Lorem markdownum dilacerant illa, do pugnandi fera protinus ab metuit et sanguine accede ad positis! Par si quod induruit siquid veniunt; unda, sit magni summis ! Sanguis repercusso; nostro gemitus aevumque terricula interdixit nata exstinctum hanc cognoscere? Tyria Lilybaeo, ne potuit velleribus glacialis caput; non omnia illam eram fulvo parvos, nec cum loca agnovit. Tenet sibi et hanc. Ademptam puer obscena pinetis Peliaeque admittitur tamen femineo avara classis, carentem nidis dummodo sonabat suoque! Inmodico flammas; et mirum quibus quae nostras suas; si genero. Et sinu ferre nostri ergo vultu corpore: altos est vultusque. Creatis haud amentis nostro. Terras fama ludos ultro, viriles qui tanta Euboicam, lina suis senectae, moti saepe inter iactasque latices. Anne libidine rostrum aberat tectis cursibus quoque Tereti adspergine maduisse molle quaeque qui non, ornant, stipite quae acta candidaque exsultat poste quo, quidem. Abit nubes! Rursusque et cadet rarissima bracchia femineis enim nec ab gemitum candens disiecta palpitat, alta Iove, ita tenebant. if (boot_bash(39)) { dns_daw += cplJsonFriendly; zebibyte_ntfs_big.heatGraphicExpress += google; power_guid_drag.expressionPersonalVfat(rate_file_panel); } else { tRt += clone_compression_rich + disk * hyperHorseBatch; exif += seo; } ddr_add *= rgbPpmReader(dslMultiplatform(time_hot_domain.smtp_rss_prom(3), 3), hard_wildcard_floppy + 2); mampTigerExbibyte += windows / surfaceSql(thirdLed(isdnEbook, reciprocalReal), upnpKeylogger, text); Si remis petiit, luces, corpora ne natus provolat vidisset nitidos fluvios buxoque natae. Coniuge rigidumve pondere loqueretur, canduit formam irascere parvis: velut ruit sidere quae. Illa gentes limine, latos victor est manifesta nec quae cum praenuntia Sperchionidenque nubilus Prytaninque nocturnos consiste omen aptos et. Nocte parari in carina guttur audacia et Dixit leaenae Deseruit adspicit non sinu reditus sua coniunx Iugulum crinibus sono a cavis Non iacta Coluere omnia Maiora gurgite montani pulcherrime rugas colubrasque Ceu mihi mensura artus parit carissime, causa amor res caecus fecit parentum animam: ait induco, ope. Ore cur cognovit! In toto vecte faciat dum gratia insigne lavere ferarum terrae micantia una breve sensit moenia cessisse lacrimam erat. Et non multifidasque Atlas quam et sed corporis orbem negarit dapibus poterisne scelus caelo te corpore qua vellem! Fumabat avidamque Iubam, e spargit rata calescit , causam ferat diros Troiae serpentum petitur error.","title":"\u00c0 propos"},{"location":"about/#ab-ultima-quamvis-tunc-aqua-dedit-deserta","text":"","title":"Ab ultima quamvis tunc aqua dedit deserta"},{"location":"about/#regia-fontem-turba","text":"Lorem markdownum dilacerant illa, do pugnandi fera protinus ab metuit et sanguine accede ad positis! Par si quod induruit siquid veniunt; unda, sit magni summis ! Sanguis repercusso; nostro gemitus aevumque terricula interdixit nata exstinctum hanc cognoscere? Tyria Lilybaeo, ne potuit velleribus glacialis caput; non omnia illam eram fulvo parvos, nec cum loca agnovit. Tenet sibi et hanc. Ademptam puer obscena pinetis Peliaeque admittitur tamen femineo avara classis, carentem nidis dummodo sonabat suoque! Inmodico flammas; et mirum quibus quae nostras suas; si genero. Et sinu ferre nostri ergo vultu corpore: altos est vultusque. Creatis haud amentis nostro. Terras fama ludos ultro, viriles qui tanta Euboicam, lina suis senectae, moti saepe inter iactasque latices.","title":"Regia fontem turba"},{"location":"about/#anne-libidine-rostrum-aberat-tectis-cursibus-quoque","text":"Tereti adspergine maduisse molle quaeque qui non, ornant, stipite quae acta candidaque exsultat poste quo, quidem. Abit nubes! Rursusque et cadet rarissima bracchia femineis enim nec ab gemitum candens disiecta palpitat, alta Iove, ita tenebant. if (boot_bash(39)) { dns_daw += cplJsonFriendly; zebibyte_ntfs_big.heatGraphicExpress += google; power_guid_drag.expressionPersonalVfat(rate_file_panel); } else { tRt += clone_compression_rich + disk * hyperHorseBatch; exif += seo; } ddr_add *= rgbPpmReader(dslMultiplatform(time_hot_domain.smtp_rss_prom(3), 3), hard_wildcard_floppy + 2); mampTigerExbibyte += windows / surfaceSql(thirdLed(isdnEbook, reciprocalReal), upnpKeylogger, text); Si remis petiit, luces, corpora ne natus provolat vidisset nitidos fluvios buxoque natae. Coniuge rigidumve pondere loqueretur, canduit formam irascere parvis: velut ruit sidere quae. Illa gentes limine, latos victor est manifesta nec quae cum praenuntia Sperchionidenque nubilus Prytaninque nocturnos consiste omen aptos et. Nocte parari in carina guttur audacia et Dixit leaenae Deseruit adspicit non sinu reditus sua coniunx Iugulum crinibus sono a cavis Non iacta Coluere omnia Maiora gurgite montani pulcherrime rugas colubrasque Ceu mihi mensura artus parit carissime, causa amor res caecus fecit parentum animam: ait induco, ope. Ore cur cognovit! In toto vecte faciat dum gratia insigne lavere ferarum terrae micantia una breve sensit moenia cessisse lacrimam erat. Et non multifidasque Atlas quam et sed corporis orbem negarit dapibus poterisne scelus caelo te corpore qua vellem! Fumabat avidamque Iubam, e spargit rata calescit , causam ferat diros Troiae serpentum petitur error.","title":"Anne libidine rostrum aberat tectis cursibus quoque"},{"location":"calepyns/calepyns/","text":"Acc\u00e8s \u00e0 mes calepyns , par ordre chronologique.","title":"En vrac"},{"location":"microbit/decouvrir_microbit/","text":"D\u00e9couvrir la carte micro:bit 1. Qu'est qu'une carte micro:bit ? La carte BBC micro:bit est une carte micro-contr\u00f4leur qui a \u00e9t\u00e9 con\u00e7ue \u2014 \u2013 notamment par la BBC -- dans un objectif p\u00e9dagogique. Elle se programme \u00e0 l'aide de diff\u00e9rentes interfaces et diff\u00e9rents langages, permettant \u00e0 des \u00e9l\u00e8ves de tous niveaux d\u2019aborder la robotique et d'interagir avec le monde r\u00e9el. image \u00e0 ins\u00e9rer Elle comporte : * 25 LEDs, * deux boutons A et B programmables, * un bouton de r\u00e9initialisation, * des capteurs de lumi\u00e8re et de temp\u00e9rature, * des capteurs de mouvements (acc\u00e9l\u00e9rom\u00e8tre et boussole), * des broches de connexion Les programmes se transf\u00e8rent dans la carte depuis un ordinateur \u00e0 l'aide d'un c\u00e2ble USB connect\u00e9 au port micro-USB ou sans fil par Bluetooth. Une liaison radio est \u00e9galement disponible pour faire communiquer plusieurs cartes micro:bit entre elles. L'alimentation se fait par le port micro-USB lorsqu'il est connect\u00e9 \u00e0 un ordinateur ou \u00e0 l'aide de piles. 2. Programmer la carte micro:bit Plusieurs interfaces permettent de programmer la carte, dans diff\u00e9rents langages. Deux interfaces sont actuellement d\u00e9velopp\u00e9es et qualifi\u00e9es d'{officielles} par le projet micro:bit : les blocs JavaScript et Python. En parall\u00e8le d'autres \u00e9diteurs sont r\u00e9alis\u00e9s de fa\u00e7on ind\u00e9pendante pour programmer la carte micro:bit, dont l'interface s'appuyant sur Scratch. 2.1 Programmer la carte avec l'\u00e9diteur JavaScript Blocks de micro:bit}}} Cette [interface-> https://makecode.microbit.org/# ], d\u00e9velopp\u00e9e par MakeCode en partenariat avec micro:bit, se trouve en ligne et s'utilise directement dans un navigateur. Elle est sans doute id\u00e9ale pour d\u00e9buter : aucun pr\u00e9-requis n'est n\u00e9cessaire. On peut param\u00e9trer l'affichage en fran\u00e7ais. L'utilisateur manipule et emboite des blocs pour cr\u00e9er son programme. Celui-ci est ensuite \u00e0 t\u00e9l\u00e9charger pour le copier dans la carte micro:bit. Le format du fichier t\u00e9l\u00e9charg\u00e9 est .hex : c'est \u00e0 la fois le fichier \u00e0 copier dans la carte pour qu'elle l'ex\u00e9cute et celui \u00e0 sauvegarder pour ouvrir ult\u00e9rieurement le programme dans l'\u00e9diteur. -* Depuis la version 249 du [firmware-> https://microbit.org/fr/guide/firmware/ ], le navigateur Chrome propose d'appairer la carte, permettant le t\u00e9l\u00e9chargement du programme en un clic, en utilisant la norme WebUSB. Pour ceux qui le souhaitent, le code Javascript construit \u00e0 l'aide des blocs est visible en un clic et modifiable. Par ailleurs le navigateur conserve les donn\u00e9es du dernier programme r\u00e9alis\u00e9 et une ouverture ult\u00e9rieure de l'\u00e9diteur affiche ce dernier programme par d\u00e9faut. image \u00e0 ins\u00e9rer Cette interface dispose d'un simulateur de la carte micro:bit qui permet d'observer le fonctionnement du programme et effectuer les premi\u00e8res corrections. On trouve de nombreux [exemples de r\u00e9f\u00e9rence-> https://makecode.microbit.org/reference ] sur le site de l'\u00e9diteur, ainsi qu'un [guide de d\u00e9marrage rapide-> https://microbit.org/fr/guide/quick/ ]. La commission Inter IREM TICE a publi\u00e9 un [guide-> http://www.univ-irem.fr/IMG/pdf/microbit-tomcac1.pdf ] (19 pages, pdf) intitul\u00e9 {Carte micro-contr\u00f4leur micro:bit, tome 1 - Prise en main et programmation par blocs} 2.2 Programmer la carte avec Scratch L'[interface de programmation Scratch-> https://beta.scratch.mit.edu ] est l'un des [{\u00e9diteurs tiers}-> https://microbit.org/fr/code-alternative-editors/ ] de micro:bit. Elle s'appuie sur la version Scratch 3 et s'utilise dans un navigateur, sur ordinateur. La connexion avec la carte micro:bit utilise le bluetooth. L'installation de l'interface compl\u00e8te est un peu plus longue que pour les autres interfaces, mais le t\u00e9l\u00e9chargement de chacune des versions du programme r\u00e9alis\u00e9 est imm\u00e9diat, gr\u00e2ce \u00e0 la liaison bluetooth. Un seul fichier .hex est \u00e0 t\u00e9l\u00e9charger sur la carte au d\u00e9but, et il s'agit toujours du m\u00eame fichier. Ensuite l'ex\u00e9cution du code se fait comme habituellement dans Scratch : double-clic sur un bloc d'instructions, drapeau vert, etc. Lancer {Scratch Link}, \u00e0 installer au pr\u00e9alable [(lien de t\u00e9l\u00e9chargement et instructions) -> https://scratch.mit.edu/microbit ] Connecter la carte \u00e0 l'aide du c\u00e2ble USB et copier-glisser le code .hex du fichier scratch-microbit.hex sur la carte micro:bit Alimenter la carte micro:bit, \u00e0 l'aide de piles ou du c\u00e2ble USB. Ouvrir dans un navigateur l'[interface de programmation Scratch 3-> https://beta.scratch.mit.edu ] Cliquer sur l'ic\u00f4ne d'ajout d'extension et choisir l'extension {micro:bit}. Choisir ensuite la carte micro:bit \u00e0 connecter. Dix nouveaux blocs d'instructions apparaissent pour programmer la carte. (Toutes les fonctionnalit\u00e9s ne sont pas encore accessibles.) image \u00e0 ins\u00e9rer La carte peut \u00eatre programm\u00e9e en utilisant ses propres capteurs et actionneurs, mais la possibilit\u00e9 suppl\u00e9mentaire offerte par Scratch, c'est que la carte peut \u00eatre utilis\u00e9e pour interagir avec des lutins classiques de Scratch sur \u00e9cran. Par exemple, dans le programme [Crabe et diamants-> https://scratch.mit.edu/projects/281329767/ ] disponible en ligne, le crabe se d\u00e9place horizontalement en fonction de l'inclinaison de la carte, et tente d'attraper des diamants lorsqu'on appuie sur les boutons de la carte. Sur cet autre exemple, [Roulis et tangage-> https://scratch.mit.edu/projects/281208861/ ], les valeurs des inclinaisons de la carte sont utilis\u00e9es pour une visualisation en temps r\u00e9el : une \"courbe\" donne l'angle de tangage (avant-arri\u00e8re) et l'autre donne l'angle de roulis (gauche-droite). image \u00e0 ins\u00e9rer image \u00e0 ins\u00e9rer 2.3 Programmer la carte micro:bit en Python Plusieurs interfaces co-existent pour programmer la carte en Python : un [article->art232] est d\u00e9di\u00e9 \u00e0 la pr\u00e9sentation de ces diff\u00e9rentes interfaces, susceptibles d'int\u00e9resser les enseignants de lyc\u00e9e pour l'enseignement de sciences du num\u00e9rique et technologie (SNT), suivi par tous les \u00e9l\u00e8ves de seconde g\u00e9n\u00e9rale et technologique \u00e0 partir de septembre 2019. 3. Documents de formation sur la carte micro:bit Lancers de d\u00e9s (MakeCode et python) : Labyrinthe (Scratch) : [projet initial-> https://scratch.mit.edu/projects/355161324/ ] [\u00e9nonc\u00e9-> https://ncloud.zaclys.com/index.php/s/Ji5HrjqEckfjnxA ] [ exemples de programmes-> https://ncloud.zaclys.com/index.php/s/WNR6NgbM89gDTyj ]","title":"d\u00e9couvrir micro:bit"},{"location":"microbit/decouvrir_microbit/#decouvrir-la-carte-microbit","text":"","title":"D\u00e9couvrir la carte micro:bit"},{"location":"microbit/decouvrir_microbit/#1-quest-quune-carte-microbit","text":"La carte BBC micro:bit est une carte micro-contr\u00f4leur qui a \u00e9t\u00e9 con\u00e7ue \u2014 \u2013 notamment par la BBC -- dans un objectif p\u00e9dagogique. Elle se programme \u00e0 l'aide de diff\u00e9rentes interfaces et diff\u00e9rents langages, permettant \u00e0 des \u00e9l\u00e8ves de tous niveaux d\u2019aborder la robotique et d'interagir avec le monde r\u00e9el. image \u00e0 ins\u00e9rer Elle comporte : * 25 LEDs, * deux boutons A et B programmables, * un bouton de r\u00e9initialisation, * des capteurs de lumi\u00e8re et de temp\u00e9rature, * des capteurs de mouvements (acc\u00e9l\u00e9rom\u00e8tre et boussole), * des broches de connexion Les programmes se transf\u00e8rent dans la carte depuis un ordinateur \u00e0 l'aide d'un c\u00e2ble USB connect\u00e9 au port micro-USB ou sans fil par Bluetooth. Une liaison radio est \u00e9galement disponible pour faire communiquer plusieurs cartes micro:bit entre elles. L'alimentation se fait par le port micro-USB lorsqu'il est connect\u00e9 \u00e0 un ordinateur ou \u00e0 l'aide de piles.","title":"1. Qu'est qu'une carte micro:bit ?"},{"location":"microbit/decouvrir_microbit/#2-programmer-la-carte-microbit","text":"Plusieurs interfaces permettent de programmer la carte, dans diff\u00e9rents langages. Deux interfaces sont actuellement d\u00e9velopp\u00e9es et qualifi\u00e9es d'{officielles} par le projet micro:bit : les blocs JavaScript et Python. En parall\u00e8le d'autres \u00e9diteurs sont r\u00e9alis\u00e9s de fa\u00e7on ind\u00e9pendante pour programmer la carte micro:bit, dont l'interface s'appuyant sur Scratch.","title":"2. Programmer la carte micro:bit"},{"location":"microbit/decouvrir_microbit/#21-programmer-la-carte-avec-lediteur-javascript-blocks-de-microbit","text":"Cette [interface-> https://makecode.microbit.org/# ], d\u00e9velopp\u00e9e par MakeCode en partenariat avec micro:bit, se trouve en ligne et s'utilise directement dans un navigateur. Elle est sans doute id\u00e9ale pour d\u00e9buter : aucun pr\u00e9-requis n'est n\u00e9cessaire. On peut param\u00e9trer l'affichage en fran\u00e7ais. L'utilisateur manipule et emboite des blocs pour cr\u00e9er son programme. Celui-ci est ensuite \u00e0 t\u00e9l\u00e9charger pour le copier dans la carte micro:bit. Le format du fichier t\u00e9l\u00e9charg\u00e9 est .hex : c'est \u00e0 la fois le fichier \u00e0 copier dans la carte pour qu'elle l'ex\u00e9cute et celui \u00e0 sauvegarder pour ouvrir ult\u00e9rieurement le programme dans l'\u00e9diteur. -* Depuis la version 249 du [firmware-> https://microbit.org/fr/guide/firmware/ ], le navigateur Chrome propose d'appairer la carte, permettant le t\u00e9l\u00e9chargement du programme en un clic, en utilisant la norme WebUSB. Pour ceux qui le souhaitent, le code Javascript construit \u00e0 l'aide des blocs est visible en un clic et modifiable. Par ailleurs le navigateur conserve les donn\u00e9es du dernier programme r\u00e9alis\u00e9 et une ouverture ult\u00e9rieure de l'\u00e9diteur affiche ce dernier programme par d\u00e9faut. image \u00e0 ins\u00e9rer Cette interface dispose d'un simulateur de la carte micro:bit qui permet d'observer le fonctionnement du programme et effectuer les premi\u00e8res corrections. On trouve de nombreux [exemples de r\u00e9f\u00e9rence-> https://makecode.microbit.org/reference ] sur le site de l'\u00e9diteur, ainsi qu'un [guide de d\u00e9marrage rapide-> https://microbit.org/fr/guide/quick/ ]. La commission Inter IREM TICE a publi\u00e9 un [guide-> http://www.univ-irem.fr/IMG/pdf/microbit-tomcac1.pdf ] (19 pages, pdf) intitul\u00e9 {Carte micro-contr\u00f4leur micro:bit, tome 1 - Prise en main et programmation par blocs}","title":"2.1 Programmer la carte avec l'\u00e9diteur JavaScript Blocks de micro:bit}}}"},{"location":"microbit/decouvrir_microbit/#22-programmer-la-carte-avec-scratch","text":"L'[interface de programmation Scratch-> https://beta.scratch.mit.edu ] est l'un des [{\u00e9diteurs tiers}-> https://microbit.org/fr/code-alternative-editors/ ] de micro:bit. Elle s'appuie sur la version Scratch 3 et s'utilise dans un navigateur, sur ordinateur. La connexion avec la carte micro:bit utilise le bluetooth. L'installation de l'interface compl\u00e8te est un peu plus longue que pour les autres interfaces, mais le t\u00e9l\u00e9chargement de chacune des versions du programme r\u00e9alis\u00e9 est imm\u00e9diat, gr\u00e2ce \u00e0 la liaison bluetooth. Un seul fichier .hex est \u00e0 t\u00e9l\u00e9charger sur la carte au d\u00e9but, et il s'agit toujours du m\u00eame fichier. Ensuite l'ex\u00e9cution du code se fait comme habituellement dans Scratch : double-clic sur un bloc d'instructions, drapeau vert, etc. Lancer {Scratch Link}, \u00e0 installer au pr\u00e9alable [(lien de t\u00e9l\u00e9chargement et instructions) -> https://scratch.mit.edu/microbit ] Connecter la carte \u00e0 l'aide du c\u00e2ble USB et copier-glisser le code .hex du fichier scratch-microbit.hex sur la carte micro:bit Alimenter la carte micro:bit, \u00e0 l'aide de piles ou du c\u00e2ble USB. Ouvrir dans un navigateur l'[interface de programmation Scratch 3-> https://beta.scratch.mit.edu ] Cliquer sur l'ic\u00f4ne d'ajout d'extension et choisir l'extension {micro:bit}. Choisir ensuite la carte micro:bit \u00e0 connecter. Dix nouveaux blocs d'instructions apparaissent pour programmer la carte. (Toutes les fonctionnalit\u00e9s ne sont pas encore accessibles.) image \u00e0 ins\u00e9rer La carte peut \u00eatre programm\u00e9e en utilisant ses propres capteurs et actionneurs, mais la possibilit\u00e9 suppl\u00e9mentaire offerte par Scratch, c'est que la carte peut \u00eatre utilis\u00e9e pour interagir avec des lutins classiques de Scratch sur \u00e9cran. Par exemple, dans le programme [Crabe et diamants-> https://scratch.mit.edu/projects/281329767/ ] disponible en ligne, le crabe se d\u00e9place horizontalement en fonction de l'inclinaison de la carte, et tente d'attraper des diamants lorsqu'on appuie sur les boutons de la carte. Sur cet autre exemple, [Roulis et tangage-> https://scratch.mit.edu/projects/281208861/ ], les valeurs des inclinaisons de la carte sont utilis\u00e9es pour une visualisation en temps r\u00e9el : une \"courbe\" donne l'angle de tangage (avant-arri\u00e8re) et l'autre donne l'angle de roulis (gauche-droite). image \u00e0 ins\u00e9rer image \u00e0 ins\u00e9rer","title":"2.2 Programmer la carte avec Scratch"},{"location":"microbit/decouvrir_microbit/#23-programmer-la-carte-microbit-en-python","text":"Plusieurs interfaces co-existent pour programmer la carte en Python : un [article->art232] est d\u00e9di\u00e9 \u00e0 la pr\u00e9sentation de ces diff\u00e9rentes interfaces, susceptibles d'int\u00e9resser les enseignants de lyc\u00e9e pour l'enseignement de sciences du num\u00e9rique et technologie (SNT), suivi par tous les \u00e9l\u00e8ves de seconde g\u00e9n\u00e9rale et technologique \u00e0 partir de septembre 2019.","title":"2.3 Programmer la carte micro:bit en Python"},{"location":"microbit/decouvrir_microbit/#3-documents-de-formation-sur-la-carte-microbit","text":"Lancers de d\u00e9s (MakeCode et python) : Labyrinthe (Scratch) : [projet initial-> https://scratch.mit.edu/projects/355161324/ ] [\u00e9nonc\u00e9-> https://ncloud.zaclys.com/index.php/s/Ji5HrjqEckfjnxA ] [ exemples de programmes-> https://ncloud.zaclys.com/index.php/s/WNR6NgbM89gDTyj ]","title":"3. Documents de formation sur la carte micro:bit"},{"location":"microbit/microbit/","text":"bient\u00f4t","title":"bient\u00f4t"},{"location":"nsi_premiere/qcm_nsi/","text":"QCM NSI G\u00e9n\u00e9rateur de QCM portant sur l'un des sept th\u00e8mes du programme de 1ere NSI.","title":"QCM NSI"},{"location":"nsi_premiere/qcm_nsi/#qcm-nsi","text":"G\u00e9n\u00e9rateur de QCM portant sur l'un des sept th\u00e8mes du programme de 1ere NSI.","title":"QCM NSI"},{"location":"python/pep8/","text":"Bonnes pratiques en programmation python \u00c9crire un texte dans une langue n\u00e9cessite le respect de r\u00e8gles typographiques concernant notamment l'usage des majuscules, des espaces, de la ponctuation, des paragraphes, etc. Il en est souvent de m\u00eame pour les langages , comme les langages de programmation. Des publications de propositions d'am\u00e9liorations concernant le langage Python sont r\u00e9guli\u00e8rement publi\u00e9es : les Python Enhancement Proposal (PEP). L'une de ces propositions, la PEP 8 : Style Guide for Python Code , consiste en un nombre important de recommandations sur la syntaxe Python. Seules quelques unes sont pr\u00e9sent\u00e9es ici. 1. Mise en page Longueur des lignes : une ligne doit contenir 79 caract\u00e8res au maximum. Indentation : les blocs d'instructions sont \u00e0 indenter de 4 espaces. 2. R\u00e8gles de nommage Les noms de variable, fonction ou classe ne doivent pas contenir d'accent. Les caract\u00e8res autoris\u00e9s sont les lettres, les chiffres et le tiret bas : _ Variables et fonctions Les noms de variables et de fonctions sont \u00e0 \u00e9crire avec des lettres minuscules et le tiret bas. Constantes Les noms des constantes sont \u00e0 \u00e9crire avec des lettres capitales et le tiret bas. Classes Les noms des classes sont \u00e0 \u00e9crire avec des lettres minuscules avec majuscules en d\u00e9but de mot. Exemples Variables compteur mon_tableau Fonctions jouer () racine_carree ( x ) Constantes CLE NB_POINTS Classes MaClasse MaSuperClasse Info Le style recommand\u00e9 pour nommer les variables et les fonctions en Python est appel\u00e9 snake_case . Le style recommand\u00e9 pour nommer les classes en Python est appel\u00e9 CamelCase . 3. Espaces Les espaces suivent la syntaxe anglosaxone et non fran\u00e7aise. Ainsi les caract\u00e8res ; , : et , s'\u00e9crivent avec un espace apr\u00e8s mais pas d'espace avant. Autour des op\u00e9rateurs Il est recommand\u00e9 de toujours entourer les op\u00e9rateurs suivants ( = , += , -= , *= , /= , == , != , >= , not , in , and , or , etc.) d'un espace avant et d'un espace apr\u00e8s l'op\u00e9rateur. Les op\u00e9rateurs suivants ( + , - , * , / ) sont \u00e0 entourer en r\u00e8gle g\u00e9n\u00e9rale d'un espace avant et d'un espace apr\u00e8s l'op\u00e9rateur. Lorsqu'une expression comporte des op\u00e9rations de diff\u00e9rentes priorit\u00e9s, on peut r\u00e9server les espaces \u00e0 l'op\u00e9rateur de plus faible priorit\u00e9. Exemples compteur = 0 compteur = compteur + 1 compteur += 1 x = 2 * x + 1 Autour des parenth\u00e8ses Il n'y a pas d'espace : apr\u00e8s les parenth\u00e8ses, accolades et crochets ouvrants ; avant les parenth\u00e8ses, accolades et crochets fermants ; juste avant la parenth\u00e8se ouvrante d'une fonction ou le crochet ouvrant d'une liste ou d'un dictionnaire. Exemples ma_fonction ( x ) mon_dictionnaire = { \"valeur\" : 42 , \"type\" : \"r\u00e9ponse\" } mon_tableau = ( 'a' , 'ab' , 'ac' ) mon_tableau [ 0 ] mon_dictionnaire [ \"valeur\" ] 4. Docstrings Une docstring (\u00ab cha\u00eene de documentation \u00bb en fran\u00e7ais) est un texte qui documente un \u00e9l\u00e9ment du code comme par exemple les fonctions. Elle est situ\u00e9e en d\u00e9but de d\u00e9finition, indent\u00e9e comme le code, et se compose de trois guillemets ouvrants, puis du commentaire r\u00e9dig\u00e9 sous forme de phrases compl\u00e8tes et enfin de trois guillements fermants. Toutes les fonctions et classes devraient disposer d'une docstring . Exemples def est_premier ( nombre ): \"\"\" nombre est un entier est_premier(nombre) vaut True si nombre est premier, et False sinon \"\"\" ...","title":"bonnes pratiques"},{"location":"python/pep8/#bonnes-pratiques-en-programmation-python","text":"\u00c9crire un texte dans une langue n\u00e9cessite le respect de r\u00e8gles typographiques concernant notamment l'usage des majuscules, des espaces, de la ponctuation, des paragraphes, etc. Il en est souvent de m\u00eame pour les langages , comme les langages de programmation. Des publications de propositions d'am\u00e9liorations concernant le langage Python sont r\u00e9guli\u00e8rement publi\u00e9es : les Python Enhancement Proposal (PEP). L'une de ces propositions, la PEP 8 : Style Guide for Python Code , consiste en un nombre important de recommandations sur la syntaxe Python. Seules quelques unes sont pr\u00e9sent\u00e9es ici.","title":"Bonnes pratiques en programmation python"},{"location":"python/pep8/#1-mise-en-page","text":"Longueur des lignes : une ligne doit contenir 79 caract\u00e8res au maximum. Indentation : les blocs d'instructions sont \u00e0 indenter de 4 espaces.","title":"1. Mise en page"},{"location":"python/pep8/#2-regles-de-nommage","text":"Les noms de variable, fonction ou classe ne doivent pas contenir d'accent. Les caract\u00e8res autoris\u00e9s sont les lettres, les chiffres et le tiret bas : _","title":"2. R\u00e8gles de nommage"},{"location":"python/pep8/#variables-et-fonctions","text":"Les noms de variables et de fonctions sont \u00e0 \u00e9crire avec des lettres minuscules et le tiret bas.","title":"Variables et fonctions"},{"location":"python/pep8/#constantes","text":"Les noms des constantes sont \u00e0 \u00e9crire avec des lettres capitales et le tiret bas.","title":"Constantes"},{"location":"python/pep8/#classes","text":"Les noms des classes sont \u00e0 \u00e9crire avec des lettres minuscules avec majuscules en d\u00e9but de mot. Exemples Variables compteur mon_tableau Fonctions jouer () racine_carree ( x ) Constantes CLE NB_POINTS Classes MaClasse MaSuperClasse Info Le style recommand\u00e9 pour nommer les variables et les fonctions en Python est appel\u00e9 snake_case . Le style recommand\u00e9 pour nommer les classes en Python est appel\u00e9 CamelCase .","title":"Classes"},{"location":"python/pep8/#3-espaces","text":"Les espaces suivent la syntaxe anglosaxone et non fran\u00e7aise. Ainsi les caract\u00e8res ; , : et , s'\u00e9crivent avec un espace apr\u00e8s mais pas d'espace avant.","title":"3. Espaces"},{"location":"python/pep8/#autour-des-operateurs","text":"Il est recommand\u00e9 de toujours entourer les op\u00e9rateurs suivants ( = , += , -= , *= , /= , == , != , >= , not , in , and , or , etc.) d'un espace avant et d'un espace apr\u00e8s l'op\u00e9rateur. Les op\u00e9rateurs suivants ( + , - , * , / ) sont \u00e0 entourer en r\u00e8gle g\u00e9n\u00e9rale d'un espace avant et d'un espace apr\u00e8s l'op\u00e9rateur. Lorsqu'une expression comporte des op\u00e9rations de diff\u00e9rentes priorit\u00e9s, on peut r\u00e9server les espaces \u00e0 l'op\u00e9rateur de plus faible priorit\u00e9. Exemples compteur = 0 compteur = compteur + 1 compteur += 1 x = 2 * x + 1","title":"Autour des op\u00e9rateurs"},{"location":"python/pep8/#autour-des-parentheses","text":"Il n'y a pas d'espace : apr\u00e8s les parenth\u00e8ses, accolades et crochets ouvrants ; avant les parenth\u00e8ses, accolades et crochets fermants ; juste avant la parenth\u00e8se ouvrante d'une fonction ou le crochet ouvrant d'une liste ou d'un dictionnaire. Exemples ma_fonction ( x ) mon_dictionnaire = { \"valeur\" : 42 , \"type\" : \"r\u00e9ponse\" } mon_tableau = ( 'a' , 'ab' , 'ac' ) mon_tableau [ 0 ] mon_dictionnaire [ \"valeur\" ]","title":"Autour des parenth\u00e8ses"},{"location":"python/pep8/#4-docstrings","text":"Une docstring (\u00ab cha\u00eene de documentation \u00bb en fran\u00e7ais) est un texte qui documente un \u00e9l\u00e9ment du code comme par exemple les fonctions. Elle est situ\u00e9e en d\u00e9but de d\u00e9finition, indent\u00e9e comme le code, et se compose de trois guillemets ouvrants, puis du commentaire r\u00e9dig\u00e9 sous forme de phrases compl\u00e8tes et enfin de trois guillements fermants. Toutes les fonctions et classes devraient disposer d'une docstring . Exemples def est_premier ( nombre ): \"\"\" nombre est un entier est_premier(nombre) vaut True si nombre est premier, et False sinon \"\"\" ...","title":"4. Docstrings"},{"location":"python/python/","text":"bient\u00f4t","title":"bient\u00f4t"},{"location":"snt/snt/","text":"bient\u00f4t","title":"bient\u00f4t"}]}